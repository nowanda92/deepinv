Search.setIndex({"docnames": ["auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/optimization/demo_3D_wavelets", "auto_examples/optimization/demo_TV_minimisation", "auto_examples/optimization/demo_wavelet_prior", "auto_examples/optimization/sg_execution_times", "auto_examples/patch-priors/demo_epll", "auto_examples/patch-priors/demo_patch_priors_CT", "auto_examples/patch-priors/sg_execution_times", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.denoisers", "deepinv.iterative", "deepinv.loss", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.other_models", "deepinv.physics", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.PatchDataset", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.CharbonnierLoss", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.R2RLoss", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EPLLDenoiser", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGVDenoiser", "stubs/deepinv.models.TVDenoiser", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDenoiser", "stubs/deepinv.models.WaveletDictDenoiser", "stubs/deepinv.optim.AmplitudeLoss", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DPIR", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.EPLL", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.LogPoissonLikelihood", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PatchNR", "stubs/deepinv.optim.PatchPrior", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.TVPrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.WaveletPrior", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.optim.optim_iterators.SMIteration", "stubs/deepinv.optim.utils.GaussianMixtureModel", "stubs/deepinv.optim.utils.conjugate_gradient", "stubs/deepinv.optim.utils.gradient_descent", "stubs/deepinv.physics.BlindBlur", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.LogPoissonNoise", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.PhaseRetrieval", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.RandomPhaseRetrieval", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.adjoint_function", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.physics.forward.adjoint_function", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.training_utils.train_normalizing_flow", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "filenames": ["auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/optimization/demo_3D_wavelets.rst", "auto_examples/optimization/demo_TV_minimisation.rst", "auto_examples/optimization/demo_wavelet_prior.rst", "auto_examples/optimization/sg_execution_times.rst", "auto_examples/patch-priors/demo_epll.rst", "auto_examples/patch-priors/demo_patch_priors_CT.rst", "auto_examples/patch-priors/sg_execution_times.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.denoisers.rst", "deepinv.iterative.rst", "deepinv.loss.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.other_models.rst", "deepinv.physics.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.PatchDataset.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.CharbonnierLoss.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.R2RLoss.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EPLLDenoiser.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGVDenoiser.rst", "stubs/deepinv.models.TVDenoiser.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDenoiser.rst", "stubs/deepinv.models.WaveletDictDenoiser.rst", "stubs/deepinv.optim.AmplitudeLoss.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DPIR.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.EPLL.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.LogPoissonLikelihood.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PatchNR.rst", "stubs/deepinv.optim.PatchPrior.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.TVPrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.WaveletPrior.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.optim.optim_iterators.SMIteration.rst", "stubs/deepinv.optim.utils.GaussianMixtureModel.rst", "stubs/deepinv.optim.utils.conjugate_gradient.rst", "stubs/deepinv.optim.utils.gradient_descent.rst", "stubs/deepinv.physics.BlindBlur.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.LogPoissonNoise.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.PhaseRetrieval.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.RandomPhaseRetrieval.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.adjoint_function.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.physics.forward.adjoint_function.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.training_utils.train_normalizing_flow.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "titles": ["Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "3D wavelet denoising", "Image deblurring with Total-Variation (TV) prior", "Image inpainting with wavelet prior", "Computation times", "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting", "Patch priors for limited-angle computed tomography", "Computation times", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Denoisers", "Iterative Reconstruction (PnP, RED, etc.)", "Loss", "Using multiple GPUs", "Math Notation", "Optim", "Other Reconstruction Methods", "Physics", "Diffusion Algorithms", "Unfolded Algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "HDF5Dataset", "PatchDataset", "generate_dataset", "CharbonnierLoss", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LpNorm", "MCLoss", "MOILoss", "Neighbor2Neighbor", "R2RLoss", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "ConvDecoder", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EPLLDenoiser", "EquivariantDenoiser", "GSDRUNet", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "SCUNet", "SwinIR", "TGVDenoiser", "TVDenoiser", "UNet", "WaveletDenoiser", "WaveletDictDenoiser", "AmplitudeLoss", "BaseOptim", "DPIR", "DataFidelity", "EPLL", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "LogPoissonLikelihood", "OptimIterator", "PatchNR", "PatchPrior", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "TVPrior", "Tikhonov", "WaveletPrior", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "GDIteration", "HQSIteration", "PGDIteration", "SMIteration", "GaussianMixtureModel", "conjugate_gradient", "gradient_descent", "BlindBlur", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Denoising", "Downsampling", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "LogPoissonNoise", "MRI", "Pansharpen", "PhaseRetrieval", "Physics", "PoissonGaussianNoise", "PoissonNoise", "RandomPhaseRetrieval", "SinglePhotonLidar", "SinglePixelCamera", "Tomography", "UniformGaussianNoise", "UniformNoise", "adjoint_function", "gaussian_blur", "adjoint_function", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "train_normalizing_flow", "Rotate", "Scale", "Shift", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_url_image", "ones_like", "plot", "plot_curves", "plot_parameters", "rand_like", "randn_like", "zeros_like"], "terms": {"go": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "end": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 49, 53, 83, 97, 100, 102, 117, 119, 120, 121, 122, 123, 124, 125, 140, 145, 158, 159, 170, 171], "download": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 79, 81, 82, 83, 85, 89, 90, 100, 157, 159], "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 55, 61, 66], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 51, 55, 56, 63, 83, 101, 148, 152, 153, 154, 156], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 67, 81, 90, 91, 92], "In": [0, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 47, 53, 59, 81, 92, 96, 98, 103, 120, 140, 150], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 109, 111, 112, 114, 119, 123, 126, 129, 130, 132, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 157, 158, 159, 161, 164, 165, 166, 170, 171, 181], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 49, 52, 54, 62, 80, 81, 94, 101, 102, 103, 107, 140, 141, 154, 156], "show": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 18, 19, 21, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 40, 97, 101, 179, 180, 181], "how": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 15, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 40, 97, 98, 101], "us": [0, 1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 68, 69, 76, 77, 83, 89, 90, 92, 101, 103, 126, 129, 144, 148, 162, 168], "an": [0, 1, 4, 6, 7, 8, 9, 10, 15, 16, 19, 20, 23, 24, 26, 27, 29, 30, 32, 36, 37, 39, 42, 49, 50, 51, 53, 55, 56, 62, 71, 72, 73, 78, 79, 80, 81, 82, 84, 85, 89, 91, 92, 94, 95, 97, 105, 107, 108, 111, 112, 117, 118, 120, 126, 129, 132, 134, 137, 139, 140, 144, 145, 148, 150, 158, 159, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 179], "here": [0, 1, 2, 4, 5, 7, 10, 15, 16, 19, 23, 24, 25, 26, 27, 29, 30, 35, 36, 39, 40, 43, 95, 141, 144], "simpl": [0, 1, 4, 6, 7, 8, 19, 23, 24, 27, 30, 31, 32, 38, 40, 51, 76, 142, 164], "l2": [0, 12, 13, 18, 19, 20, 21, 23, 25, 26, 27, 29, 35, 36, 37, 40, 45, 83, 97, 99, 101, 111, 112, 159, 172], "penal": [0, 49, 97], "squar": [0, 8, 25, 39, 65, 66, 67, 69, 70, 71, 72, 73, 127, 151], "norm": [0, 5, 6, 11, 12, 23, 26, 39, 62, 63, 74, 91, 92, 93, 94, 95, 97, 103, 105, 115, 117, 132, 140, 151, 165, 175], "admm": [0, 49, 55, 101, 118, 119, 172, 173], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 51, 63, 135, 137, 140, 141, 146, 147, 152, 153, 154, 156, 157, 159, 179], "deepinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "dinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 51, 97, 99, 101, 105, 157, 159], "from": [0, 1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 75, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 100, 107, 108, 132, 134, 135, 137, 139, 140, 141, 144, 145, 146, 147, 148, 150, 152, 153, 154, 156, 157, 158, 159, 163, 164, 165, 170, 176, 177, 179], "pathlib": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "torch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 47, 51, 54, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 179, 181, 182, 183, 184], "util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 83, 100, 126, 127, 128, 129, 132, 138, 140, 143, 145, 151, 157, 159, 164, 165, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "dataload": [0, 8, 16, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 126, 164, 165, 166], "data_fidel": [0, 4, 12, 13, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 45, 97, 99, 101, 105, 107, 118, 119, 120, 121, 122, 158, 159, 161, 162, 163, 172, 173], "optim_build": [0, 12, 13, 18, 19, 20, 21, 45, 49, 97], "training_util": [0, 8, 16, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 166], "test": [0, 6, 18, 20, 42, 57, 59, 68, 79, 80, 82, 85, 89, 95, 140, 179], "torchvis": [0, 1, 8, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 61], "transform": [0, 1, 7, 8, 11, 12, 13, 16, 18, 19, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 58, 61, 77, 84, 90, 94, 95, 117, 132, 134, 142, 150, 151, 167, 168, 169], "demo": [0, 1, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 39, 40, 44], "load_dataset": [0, 1, 8, 12, 13, 18, 20, 29, 35, 39, 40], "checkpoint": [0, 4, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32, 90, 165], "base_dir": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "original_data_dir": [0, 1, 4, 8, 11, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "data_dir": [0, 1, 4, 8, 11, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "measur": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 25, 26, 29, 31, 32, 33, 35, 38, 39, 40, 45, 46, 48, 50, 51, 52, 54, 56, 57, 59, 61, 65, 66, 67, 68, 69, 71, 72, 73, 75, 80, 87, 93, 96, 97, 98, 99, 101, 102, 103, 105, 111, 125, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 161, 164, 165, 166, 176], "results_dir": [0, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "deg_dir": [0, 4, 8, 11, 12, 13, 18, 20, 29, 30, 31, 32, 39], "global": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "random": [0, 1, 2, 5, 7, 8, 11, 12, 13, 18, 19, 20, 21, 26, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 51, 54, 61, 66, 69, 72, 73, 79, 80, 81, 82, 84, 85, 89, 90, 108, 132, 133, 134, 135, 139, 140, 142, 143, 148, 150, 151, 152, 157, 158, 159, 161, 167, 168, 169, 182], "seed": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 132, 133, 134, 135, 139, 142, 143, 148, 150, 151, 157, 158, 159, 161], "pytorch": [0, 1, 2, 4, 7, 8, 11, 12, 13, 18, 19, 20, 21, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 47, 79, 81, 82, 85, 86, 89, 90], "ensur": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 126], "reproduc": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 132, 133, 134, 135, 139, 142, 143, 148, 150, 151, 157, 159], "manual_se": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 132, 133, 134, 135, 139, 142, 143, 148, 150, 151, 157, 159], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 52, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 80, 81, 85, 86, 89, 90, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 179, 182], "devic": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 47, 59, 75, 79, 82, 83, 85, 89, 94, 95, 98, 100, 108, 117, 126, 130, 131, 132, 136, 139, 142, 143, 148, 149, 150, 151, 154, 156, 157, 158, 159, 164, 165, 166, 171, 176, 177], "get_freer_gpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 157, 159], "cuda": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 47, 83, 98, 100, 130, 131, 157, 159], "is_avail": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 157, 159], "els": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 97, 102, 157, 159, 170], "cpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 59, 75, 79, 82, 83, 85, 89, 94, 95, 100, 108, 117, 126, 130, 131, 132, 136, 139, 142, 143, 148, 149, 150, 151, 154, 156, 157, 158, 159, 164, 165, 166, 171, 177], "cbsd68": [0, 7, 8, 39], "paper": [0, 2, 3, 16, 18, 24, 27, 79, 80, 82, 119, 141, 159, 168], "zhang": [0, 18, 82, 98], "et": [0, 2, 12, 13, 18, 20, 25, 26, 44, 50, 77, 80, 81, 82, 91, 93], "al": [0, 2, 12, 13, 18, 20, 25, 26, 44, 50, 77, 80, 81, 82, 91, 93], "2017": [0, 18, 98], "motion": [0, 12, 13, 18, 20], "kernel": [0, 3, 7, 12, 13, 18, 20, 23, 25, 52, 86, 114, 129, 161], "levin": [0, 12, 13, 18, 20], "2009": [0, 11, 12, 13, 18, 20, 92], "variabl": [0, 1, 4, 12, 13, 18, 19, 20, 21, 27, 32, 38, 39, 49, 72, 73, 87, 88, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 120], "fetch": [0, 1, 12, 13, 18, 19, 21], "method": [0, 2, 6, 8, 10, 12, 13, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 44, 45, 49, 51, 52, 55, 56, 57, 59, 62, 63, 79, 80, 82, 83, 91, 92, 97, 98, 99, 100, 102, 105, 108, 110, 112, 118, 119, 125, 126, 131, 132, 134, 137, 140, 145, 149, 151, 157, 160, 162, 164, 165, 166, 176], "l2_prior": 0, "dataset_nam": [0, 1, 12, 13, 18, 19, 20], "set3c": [0, 1, 8, 12, 13, 18, 19, 20, 35, 38, 39, 40], "img_siz": [0, 1, 2, 4, 5, 7, 8, 12, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 45, 90, 131, 136, 140, 143, 177], "256": [0, 1, 7, 8, 12, 13, 18, 20, 30, 44, 78, 79, 81, 85, 89, 108, 179], "dataset_path": [0, 20], "val_transform": [0, 1, 12, 13, 18, 20], "compos": [0, 1, 8, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 82, 95, 103, 140], "centercrop": [0, 1, 8, 12, 13, 18, 20, 35, 39, 40], "totensor": [0, 1, 8, 12, 13, 18, 20, 30, 31, 32, 35, 36, 37, 39, 40, 43], "blurfft": [0, 12, 18, 23, 25, 35], "modul": [0, 6, 11, 12, 13, 18, 21, 23, 24, 35, 36, 37, 38, 40, 44, 45, 47, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 107, 108, 112, 126, 132, 135, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 181], "The": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 107, 108, 111, 112, 122, 123, 124, 125, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 165, 170, 174, 179, 181], "class": [0, 1, 6, 7, 8, 11, 12, 13, 18, 19, 21, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 44, 45, 49, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174], "perform": [0, 2, 8, 11, 12, 13, 18, 21, 25, 26, 38, 39, 40, 44, 49, 53, 60, 64, 68, 76, 78, 80, 81, 86, 87, 88, 89, 97, 101, 107, 112, 118, 126, 129, 130, 131, 159, 165, 168, 170, 171, 172, 173], "convolut": [0, 2, 3, 12, 27, 45, 50, 52, 78, 79, 80, 82, 85, 87, 88, 90, 93, 114, 129, 130, 131], "via": [0, 11, 15, 19, 23, 25, 26, 27, 31, 32, 43, 47, 50, 51, 52, 53, 55, 59, 66, 79, 81, 82, 83, 89, 93, 100, 108, 114, 131, 132, 134, 139, 140, 144, 145, 148, 150, 151], "fourier": [0, 7, 142], "choos": [0, 4, 7, 8, 16, 19, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 47, 53, 67, 81, 97, 101, 117], "gaussian": [0, 1, 2, 3, 5, 7, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 35, 36, 37, 40, 48, 52, 68, 71, 72, 83, 100, 105, 114, 126, 132, 135, 136, 137, 140, 143, 146, 148, 149, 152, 155, 159, 163, 183], "standard": [0, 3, 5, 7, 11, 12, 13, 15, 16, 18, 19, 21, 24, 25, 26, 27, 39, 43, 44, 45, 48, 49, 68, 70, 71, 72, 81, 83, 97, 98, 100, 105, 127, 128, 135, 137, 138, 143, 146, 149, 152, 155, 162, 163, 172, 173, 183], "deviat": [0, 3, 7, 11, 12, 13, 15, 18, 19, 20, 21, 24, 25, 26, 44, 48, 49, 68, 71, 72, 97, 98, 105, 118, 135, 137, 143, 146, 149, 152, 155, 172, 173], "3": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 47, 63, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 99, 100, 105, 117, 129, 131, 132, 133, 134, 135, 139, 140, 142, 143, 148, 149, 150, 151, 154, 156, 157, 159, 179], "add": [0, 1, 11, 12, 13, 18, 20, 90, 137, 140, 141, 145, 146, 147, 152, 153, 166, 174], "nois": [0, 1, 3, 7, 11, 12, 13, 15, 18, 19, 20, 21, 25, 26, 31, 32, 40, 44, 45, 48, 49, 52, 61, 66, 68, 71, 72, 73, 77, 79, 80, 81, 82, 84, 90, 93, 95, 98, 105, 110, 114, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 157, 158, 159, 161, 162, 163, 165, 166, 175], "03": [0, 6, 8, 16, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 32, 35, 36, 37, 39, 40, 41, 56], "filter": [0, 2, 5, 7, 12, 16, 18, 20, 23, 25, 35, 45, 77, 86, 129, 130, 131, 136, 140, 143, 149, 151, 155], "filter_torch": 0, "gaussian_blur": [0, 7, 35, 130, 131], "sigma": [0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 38, 39, 40, 43, 44, 45, 48, 49, 51, 52, 68, 71, 72, 76, 77, 79, 81, 82, 83, 84, 86, 89, 90, 93, 98, 100, 105, 110, 113, 114, 120, 123, 135, 137, 146, 149, 152, 155, 157, 158, 159, 162, 163, 171], "noise_level_img": [0, 11, 12, 13, 18, 19, 20, 21, 35, 38, 40], "n_channel": [0, 1, 4, 8, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 38, 39, 40], "color": [0, 1, 5, 6, 7, 8, 12, 13, 18, 19, 20, 21, 35, 38, 39, 40, 44, 83, 100], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 49, 51, 52, 53, 61, 63, 66, 68, 69, 71, 72, 73, 74, 78, 79, 81, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 175, 179, 182], "grai": [0, 1, 7, 8, 12, 13, 18, 19, 20, 21, 35, 38, 39, 40, 83, 100, 157, 159, 179], "scale": [0, 1, 8, 12, 13, 18, 19, 20, 21, 30, 31, 32, 35, 38, 39, 40, 68, 90, 93, 102], "instanc": [0, 19, 25, 37, 38, 47, 49, 60, 64, 76, 78, 86, 87, 88, 89, 97, 101, 107, 112, 118, 119, 120, 121, 122, 125, 172, 173], "enabl": [0, 26, 51, 170, 171], "comput": [0, 1, 2, 5, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 49, 51, 52, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 82, 83, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 130, 132, 134, 136, 137, 139, 140, 141, 143, 144, 145, 150, 151, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 170, 171, 174, 175, 176, 177, 179, 180], "effic": 0, "backward": [0, 16, 35, 53, 55, 102, 103, 151, 170], "p": [0, 3, 11, 13, 18, 20, 23, 26, 27, 48, 52, 64, 72, 73, 83, 97, 100, 114, 117, 141, 146, 147, 149, 158, 163], "noise_model": [0, 2, 6, 7, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 35, 38, 40, 43, 45, 51, 135, 137, 140, 141, 145, 146, 147, 152, 153, 157, 159], "gaussiannois": [0, 1, 2, 6, 7, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 25, 27, 35, 38, 40, 43, 45, 51, 135, 143, 157, 159], "parallel": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 77], "gpu": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 75, 79, 82, 85, 89, 94, 95, 126, 139, 142, 149, 151, 164, 165, 176, 177], "fasten": [0, 1, 8, 18, 19, 20, 21, 29, 31, 32, 35, 36, 37, 39, 40], "train": [0, 1, 4, 9, 10, 18, 19, 20, 21, 25, 26, 43, 44, 46, 47, 52, 53, 55, 56, 57, 59, 68, 70, 75, 78, 79, 81, 82, 85, 89, 93, 114, 134, 139, 140, 145, 161, 162, 163, 164, 166, 171, 176, 181], "otherwis": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 61, 62, 63, 64, 66, 69, 81, 84, 97, 101, 129, 130, 132, 136, 140, 143, 150, 151], "all": [0, 1, 2, 8, 10, 11, 18, 19, 20, 21, 26, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 43, 44, 47, 49, 51, 56, 58, 60, 64, 76, 78, 79, 80, 83, 84, 86, 87, 88, 89, 94, 97, 99, 100, 107, 109, 117, 118, 139, 165, 172, 173], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 65, 66, 68, 80, 82, 87, 88, 92, 93, 94, 95, 97, 101, 107, 111, 117, 119, 120, 121, 123, 129, 130, 132, 133, 134, 136, 138, 140, 143, 145, 148, 151, 158, 161, 162, 163, 165, 167, 171, 175, 177, 179, 181], "synchron": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40], "num_work": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 59], "4": [0, 1, 3, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 59, 78, 79, 83, 84, 86, 89, 90, 93, 97, 99, 100, 101, 105, 130, 131, 140, 142, 143, 148, 151, 154, 156, 170, 179], "n_images_max": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40], "maxim": [0, 8, 16, 18, 20, 35, 36, 37, 39, 40, 44, 99, 111, 112, 115, 126], "number": [0, 2, 4, 6, 8, 11, 12, 13, 16, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 47, 55, 59, 72, 73, 76, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 108, 109, 111, 112, 115, 118, 126, 127, 128, 132, 140, 141, 145, 148, 149, 150, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 179, 182, 183], "restor": [0, 15, 16, 18, 20, 29, 35, 36, 37, 40, 44, 55, 79, 90, 98, 100, 157, 159], "input": [0, 2, 3, 7, 11, 12, 13, 18, 19, 20, 21, 25, 26, 38, 40, 44, 45, 49, 62, 63, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 101, 107, 108, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 131, 132, 134, 136, 138, 139, 143, 144, 147, 148, 149, 151, 154, 156, 165, 167, 168, 169, 170, 172, 173], "measurement_dir": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40], "deepinv_dataset_path": 0, "generate_dataset": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43], "train_dataset": [0, 1, 8, 16, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 59], "test_dataset": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 59], "none": [0, 1, 16, 18, 19, 20, 29, 30, 31, 32, 35, 40, 47, 58, 59, 75, 76, 79, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 97, 99, 100, 101, 102, 103, 107, 108, 112, 118, 126, 136, 142, 143, 145, 152, 157, 158, 159, 161, 162, 163, 165, 168, 170, 172, 173, 177, 179, 180, 181], "save_dir": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 59, 179, 180, 181], "train_datapoint": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59], "vector": [0, 1, 8, 18, 20, 23, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 63, 71, 72, 73, 78, 80, 91, 94, 97, 134, 140, 144, 145, 163, 165], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 45, 47, 49, 51, 52, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 107, 114, 115, 116, 117, 120, 121, 124, 125, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 179], "00": [0, 1, 2, 4, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 56], "": [0, 1, 2, 4, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 52, 68, 79, 81, 82, 85, 89, 90, 91, 92, 98, 114, 129, 132, 134, 136, 142, 161, 164, 165], "100": [0, 1, 2, 3, 4, 8, 12, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 97, 102, 103, 118, 126, 127, 128, 132, 140, 157, 159, 160], "56": [0, 8, 16, 18, 20, 24, 26, 29, 35, 36, 37, 40], "31it": [0, 29, 37], "ha": [0, 1, 2, 3, 5, 6, 8, 18, 20, 24, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 67, 79, 94, 97, 99, 101, 111, 112, 127, 129, 130, 131, 132, 136, 139, 142, 143, 150, 151, 157, 158, 179], "been": [0, 1, 2, 8, 18, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 101], "save": [0, 1, 8, 9, 10, 12, 13, 18, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 40, 43, 54, 56, 59, 90, 94, 99, 102, 110, 112, 132, 134, 139, 140, 144, 145, 148, 150, 160, 164, 165, 171, 173, 176, 179, 180, 181], "function": [0, 1, 2, 3, 6, 7, 8, 12, 13, 16, 18, 19, 20, 25, 26, 30, 35, 36, 37, 38, 39, 40, 45, 46, 48, 49, 51, 53, 54, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 76, 78, 80, 81, 82, 86, 87, 88, 89, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 118, 119, 120, 121, 125, 126, 127, 128, 130, 132, 134, 140, 144, 145, 149, 151, 154, 156, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173], "instanti": [0, 12, 13, 18, 19, 20, 21, 97], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 170, 171, 175, 177, 179], "proxim": [0, 6, 11, 12, 13, 19, 20, 21, 25, 38, 45, 49, 51, 53, 91, 92, 99, 101, 102, 103, 104, 105, 110, 111, 112, 115, 116, 117, 118, 124, 134, 136, 139, 140, 162, 172, 173], "gradient": [0, 12, 13, 19, 20, 21, 26, 27, 31, 44, 45, 49, 53, 61, 67, 85, 91, 92, 96, 99, 101, 103, 105, 111, 112, 113, 116, 118, 122, 124, 127, 128, 132, 136, 140, 144, 145, 151, 158, 165, 170, 172, 173], "descent": [0, 12, 13, 21, 37, 45, 99, 111, 112, 118, 122, 124, 128, 144, 145, 172, 173], "follow": [0, 11, 12, 13, 16, 18, 19, 21, 23, 25, 26, 27, 36, 39, 42, 44, 45, 48, 49, 55, 71, 72, 73, 94, 97, 117, 133, 158, 159, 163, 171], "min_": [0, 2, 11, 80], "x": [0, 1, 2, 3, 5, 6, 7, 11, 12, 13, 16, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 39, 40, 45, 46, 48, 49, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 178, 182, 183, 184], "frac": [0, 11, 12, 13, 23, 25, 26, 27, 32, 36, 37, 45, 52, 53, 62, 63, 68, 69, 71, 72, 73, 84, 91, 92, 96, 97, 99, 102, 103, 105, 114, 116, 132, 134, 140, 141, 145, 146, 147, 148, 158, 159, 162, 163, 170, 175], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 45, 46, 48, 49, 51, 52, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 83, 87, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 111, 119, 120, 121, 122, 125, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 157, 158, 159, 161, 163, 164, 165, 170, 171], "ax": [0, 12, 13, 15, 16, 27, 36, 37, 39, 52, 97, 100, 101, 103, 105, 120, 127, 132, 134, 140, 151], "_2": [0, 11, 12, 13, 26, 30, 32, 36, 37, 39, 49, 62, 63, 68, 71, 72, 73, 74, 91, 92, 97, 101, 102, 103, 105, 116, 162, 163], "lambda": [0, 4, 11, 12, 13, 16, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 48, 49, 94, 95, 97, 99, 101, 105, 107, 112, 118, 119, 120, 121, 122, 123, 124, 125, 134, 140, 145, 154, 156, 159, 160, 161, 162, 163, 171, 172, 173], "where": [0, 2, 3, 7, 8, 11, 12, 13, 15, 16, 18, 19, 23, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 43, 45, 49, 51, 52, 53, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 83, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 107, 108, 111, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 156, 158, 159, 163, 165, 166, 170, 171, 175, 179, 181], "A": [0, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 23, 25, 26, 30, 34, 35, 36, 37, 38, 39, 46, 48, 49, 51, 52, 53, 55, 56, 63, 65, 68, 71, 72, 73, 75, 79, 81, 91, 92, 94, 97, 99, 101, 102, 103, 105, 107, 120, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 162, 163, 164, 165, 171, 176, 177, 179], "forward": [0, 1, 9, 10, 26, 29, 35, 36, 37, 38, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 107, 108, 112, 119, 120, 121, 122, 125, 126, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 176, 177, 179], "regular": [0, 2, 4, 10, 11, 12, 13, 16, 21, 22, 25, 27, 29, 31, 35, 36, 37, 40, 45, 48, 49, 53, 55, 56, 57, 59, 67, 69, 82, 85, 91, 92, 97, 99, 101, 104, 105, 107, 112, 113, 114, 115, 116, 117, 118, 125, 126, 136, 137, 140, 145, 162, 163, 164, 170, 171, 172, 173, 176], "paramet": [0, 2, 4, 8, 11, 12, 13, 15, 18, 19, 20, 23, 25, 26, 27, 39, 44, 53, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181], "creat": [0, 5, 9, 10, 18, 19, 51, 54, 56, 57, 59, 63, 83, 97, 99, 100, 101, 105, 132, 134, 135, 137, 140, 142, 145, 148, 157, 161, 176, 179], "which": [0, 1, 4, 5, 7, 11, 12, 13, 15, 16, 18, 20, 23, 24, 25, 26, 27, 29, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 59, 62, 65, 66, 67, 69, 70, 71, 72, 73, 79, 82, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 131, 132, 136, 139, 140, 145, 150, 151, 157, 158, 161, 164, 165, 171, 177], "inherit": [0, 6, 20, 23, 38, 47, 49, 51, 142], "l2prior": 0, "def": [0, 4, 6, 16, 19, 20, 23, 25, 26, 37, 38, 39, 101, 161], "__init__": [0, 6, 19, 20, 23, 38, 161], "self": [0, 3, 6, 19, 20, 23, 33, 38, 55, 56, 57, 59, 61, 65, 66, 67, 69, 71, 72, 73, 75, 82, 93, 99, 102, 105, 110, 112, 132, 134, 135, 139, 140, 142, 144, 145, 147, 148, 150, 157, 161, 164, 165, 167, 168, 171, 173, 176], "arg": [0, 11, 16, 20, 37, 38, 39, 45, 49, 83, 91, 92, 94, 95, 97, 99, 100, 101, 104, 109, 110, 112, 113, 114, 115, 116, 117, 126, 140, 144, 145, 170, 171], "kwarg": [0, 6, 19, 20, 37, 38, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90, 99, 101, 104, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 148, 150, 151, 164, 170, 171, 172, 173], "super": [0, 6, 10, 19, 22, 23, 38, 41, 56, 57, 59, 70, 82, 85, 97, 99, 105, 110, 112, 113, 118, 136, 137, 140, 145, 161, 164, 165, 168, 171, 173, 176, 181], "explicit_prior": [0, 20, 112], "true": [0, 1, 2, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 47, 57, 59, 61, 62, 63, 66, 69, 75, 76, 80, 81, 82, 84, 86, 87, 88, 90, 93, 96, 97, 101, 107, 108, 111, 112, 117, 119, 120, 121, 126, 132, 136, 139, 140, 147, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 175, 179, 180, 181], "g": [0, 1, 3, 10, 11, 12, 13, 16, 19, 20, 23, 26, 30, 36, 37, 43, 44, 45, 46, 49, 51, 53, 59, 61, 65, 66, 67, 69, 70, 83, 84, 91, 92, 97, 100, 101, 104, 107, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 131, 135, 139, 147, 151, 154, 156, 158, 160, 165, 171, 172, 173, 175], "5": [0, 2, 4, 5, 6, 7, 8, 11, 15, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 45, 68, 72, 73, 81, 87, 88, 90, 91, 92, 93, 97, 99, 101, 105, 108, 131, 132, 135, 140, 152, 154, 156, 157, 159, 163, 168, 170], "view": [0, 7, 26, 27, 168], "shape": [0, 2, 7, 11, 13, 15, 16, 24, 25, 26, 27, 36, 37, 78, 79, 83, 87, 88, 90, 91, 92, 94, 96, 100, 102, 115, 126, 132, 143, 148, 150, 174, 179], "dim": [0, 3, 6, 7, 24, 26, 27, 89, 90, 140, 154, 156], "return": [0, 1, 4, 6, 12, 13, 16, 19, 20, 21, 23, 24, 25, 26, 27, 30, 37, 38, 39, 44, 49, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 84, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 156, 161, 164, 165, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 182, 183, 184], "specifi": [0, 7, 12, 13, 18, 19, 20, 21, 39, 40, 82, 112], "select": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 39, 40, 97, 109], "fidel": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 39, 40, 45, 48, 53, 83, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 111, 118, 120, 158, 159, 172, 173], "term": [0, 4, 12, 13, 18, 19, 20, 21, 25, 26, 29, 35, 36, 37, 39, 40, 45, 48, 49, 53, 83, 91, 92, 96, 97, 98, 99, 100, 101, 103, 104, 107, 112, 113, 116, 118, 120, 159, 172, 173], "specif": [0, 6, 18, 20, 21, 53, 97, 98, 101], "given": [0, 11, 15, 16, 25, 52, 62, 63, 97, 101, 109, 114, 120, 121, 122, 123, 124, 125, 139, 140, 149, 166], "note": [0, 23, 25, 26, 35, 36, 37, 40, 47, 99, 102, 111, 120, 123, 144, 164, 165], "have": [0, 2, 3, 10, 15, 21, 24, 25, 26, 30, 44, 51, 55, 63, 81, 99, 140, 142, 145, 149, 150, 154, 156, 157, 171, 175], "params_algo": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 38, 39, 40, 45, 49, 97, 118, 171, 172, 173, 181], "stepsiz": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 39, 40, 45, 49, 97, 99, 101, 102, 103, 104, 105, 111, 112, 115, 116, 117, 118, 119, 121, 122, 124, 125, 171, 172, 173], "log": [0, 10, 12, 13, 16, 17, 21, 23, 26, 27, 35, 36, 37, 38, 40, 44, 52, 56, 83, 100, 105, 106, 108, 109, 111, 114, 126, 132, 134, 135, 137, 139, 140, 141, 145, 150, 158, 161, 162, 163, 166, 175, 177, 179], "verbos": [0, 2, 8, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 62, 63, 80, 91, 92, 97, 126, 140, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "plot_metr": [0, 12, 13, 18, 20, 21, 35, 38, 40, 164, 165], "converg": [0, 5, 6, 11, 12, 13, 18, 19, 20, 21, 24, 38, 40, 49, 62, 63, 91, 92, 97, 99, 101, 102, 103, 107, 111, 112, 115, 123, 140, 160, 161, 162, 163], "metric": [0, 2, 8, 12, 13, 18, 19, 20, 21, 23, 24, 27, 35, 36, 37, 38, 39, 40, 61, 64, 65, 66, 67, 68, 69, 70, 97, 101, 164, 170, 180], "along": [0, 12, 13, 19, 21, 38, 40, 88, 97, 101, 164, 167, 169], "curv": [0, 8, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "early_stop": [0, 12, 13, 18, 19, 20, 21, 97, 101], "stop": [0, 2, 18, 19, 20, 80, 97, 98, 101, 126, 127, 128], "when": [0, 7, 19, 20, 23, 26, 27, 31, 42, 45, 47, 51, 66, 67, 80, 81, 92, 93, 99, 101, 108, 111, 112, 126, 140, 147, 159], "criteria": [0, 18, 20, 161], "reach": [0, 19, 20, 97, 101], "crit_conv": [0, 20, 97, 102, 103, 161, 163], "cost": [0, 12, 13, 19, 20, 97, 101, 107, 118, 119, 120, 121, 122, 140, 172, 173], "differ": [0, 2, 15, 20, 26, 30, 31, 36, 37, 46, 54, 66, 67, 74, 80, 90, 91, 92, 115, 143, 157, 158, 174], "between": [0, 2, 5, 16, 18, 20, 21, 25, 26, 45, 48, 49, 61, 62, 69, 76, 92, 93, 97, 99, 107, 111, 112, 140, 144, 145, 151, 159, 161, 163, 165, 179], "consecut": [0, 20, 99, 111, 112], "iter": [0, 1, 2, 4, 5, 6, 10, 12, 13, 18, 19, 20, 21, 24, 25, 26, 27, 29, 35, 39, 40, 41, 53, 56, 57, 59, 62, 63, 70, 80, 91, 92, 95, 97, 98, 99, 101, 102, 103, 105, 107, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 140, 145, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 176, 181], "smaller": [0, 12, 13, 20, 49, 69, 81, 99, 111, 112, 126, 129, 130, 136, 143, 162, 163], "than": [0, 1, 4, 7, 20, 25, 36, 39, 49, 54, 99, 111, 112, 126, 129, 130, 132, 136, 140, 143, 150, 151, 154, 156, 162, 163, 179], "thres_conv": [0, 20, 97, 160], "1e": [0, 2, 5, 6, 8, 11, 12, 16, 20, 29, 30, 31, 32, 35, 37, 38, 39, 40, 60, 63, 91, 92, 96, 97, 101, 102, 103, 115, 126, 127, 128, 170], "backtrack": [0, 20, 97], "fals": [0, 1, 4, 7, 8, 11, 15, 16, 18, 19, 20, 21, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 49, 57, 59, 62, 63, 64, 69, 75, 79, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 97, 101, 107, 108, 109, 117, 118, 119, 120, 121, 126, 132, 147, 148, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173, 175, 177, 179], "backtrak": [0, 20], "automat": [0, 20, 21, 26, 42, 44, 51, 99, 111, 112, 113, 140, 145], "adjust": [0, 20, 134], "max_it": [0, 4, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 35, 36, 37, 38, 39, 40, 62, 63, 95, 97, 101, 102, 103, 118, 126, 127, 128, 140, 145, 158, 159, 160, 161, 162, 163], "500": 0, "maximum": [0, 16, 24, 25, 52, 62, 63, 91, 92, 97, 101, 102, 103, 114, 118, 126, 127, 128, 129, 140, 145, 152, 160, 166, 169, 170, 175, 179], "ip": [0, 18, 19, 20, 21], "model": [0, 9, 10, 11, 25, 28, 29, 30, 31, 32, 35, 36, 37, 40, 44, 45, 47, 48, 49, 52, 53, 54, 56, 61, 62, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 114, 119, 120, 121, 126, 130, 132, 134, 136, 137, 138, 139, 140, 141, 143, 145, 149, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 173, 175, 176, 177, 179, 181], "g_first": [0, 4, 20, 37, 39, 49, 107, 118, 119, 120, 121, 172, 173], "can": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 85, 89, 90, 93, 94, 95, 97, 101, 105, 108, 114, 117, 118, 130, 132, 134, 136, 139, 140, 143, 144, 145, 148, 150, 151, 154, 156, 157, 158, 161, 164, 165, 170, 171, 172, 173, 181], "batch_siz": [0, 1, 8, 15, 16, 18, 20, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 59, 79, 83, 87, 88, 100], "wandb_vi": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 164, 165], "plot": [0, 1, 5, 6, 7, 8, 11, 15, 18, 20, 25, 26, 29, 30, 31, 32, 35, 38, 39, 42, 45, 97, 164, 165, 170, 180, 181], "weight": [0, 4, 8, 11, 15, 16, 18, 19, 20, 21, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40, 61, 66, 74, 79, 81, 82, 83, 85, 89, 90, 100, 108, 125, 126, 164, 165, 171], "bia": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 82, 87, 88, 90, 93], "plot_imag": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 164, 165], "hdf5dataset": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43], "shuffl": [0, 1, 8, 16, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 79, 85], "test_dataload": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 164], "save_fold": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 164], "process": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 46, 59, 77, 92, 102, 117, 132, 140, 145, 148, 159], "out": [0, 8, 18, 20, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 55, 63, 132, 161, 162, 163], "71": [0, 2, 16, 26, 29, 35, 36, 39, 40], "current": [0, 13, 19, 23, 24, 25, 26, 38, 87, 88, 97, 101, 107, 119, 120, 121, 122, 125, 126], "crit": [0, 13, 24, 91, 92], "7": [0, 5, 8, 12, 15, 16, 20, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 78, 87, 130, 131, 136, 139, 159], "05e": 0, "06": [0, 8, 13, 15, 16, 20, 25, 26, 29, 35, 36, 37, 39, 40, 41, 56], "object": [0, 2, 5, 7, 11, 12, 13, 24, 27, 29, 35, 36, 37, 38, 39, 40, 49, 58, 107, 122, 126, 140, 144, 145, 170, 174, 179], "00e": [0, 13, 24], "05": [0, 7, 12, 13, 16, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 51, 91, 92, 97, 102, 103, 118, 126, 127, 128, 159, 162, 163], "33": [0, 8, 16, 20, 24, 25, 26, 29, 36, 40, 56], "02": [0, 8, 16, 17, 20, 21, 23, 24, 25, 26, 29, 30, 32, 35, 36, 37, 38, 39, 56, 81, 106, 141, 159], "04": [0, 9, 16, 20, 22, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 39, 56], "24": [0, 8, 16, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 56], "138": [0, 16, 26, 36], "67": [0, 5, 16, 20, 24, 25, 26, 29, 35, 36, 40], "01": [0, 4, 8, 9, 12, 14, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 45, 56, 71, 72, 73, 80, 131], "59": [0, 2, 8, 16, 20, 26, 29, 36, 39], "15": [0, 8, 12, 16, 20, 23, 25, 26, 29, 35, 36, 37, 38, 39, 40, 44, 90], "9": [0, 8, 9, 13, 16, 20, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 69, 86, 97], "63e": 0, "07": [0, 14, 16, 26, 29, 32, 36, 37, 56], "28": [0, 8, 15, 16, 25, 26, 29, 30, 35, 36, 37, 38, 43, 51], "psnr": [0, 2, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 97, 164, 170, 175], "No": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 83, 100], "learn": [0, 2, 8, 15, 16, 18, 20, 31, 32, 33, 35, 39, 40, 41, 42, 44, 56, 57, 59, 61, 65, 66, 70, 75, 79, 80, 82, 87, 88, 93, 98, 99, 100, 105, 107, 110, 112, 117, 120, 124, 132, 134, 137, 139, 140, 142, 145, 151, 164, 165, 166, 167, 168, 171, 173, 176, 181], "rec": [0, 5, 6, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "16": [0, 5, 8, 15, 16, 17, 18, 21, 25, 26, 27, 29, 35, 36, 37, 38, 39, 56, 83, 100, 130, 131, 136, 140, 150], "91": [0, 16, 20, 26, 30, 35, 36], "29": [0, 2, 7, 16, 23, 24, 25, 26, 27, 29, 35, 36, 38, 39], "db": [0, 2, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "18": [0, 8, 16, 20, 21, 24, 25, 26, 27, 29, 32, 35, 36, 37, 38, 39, 40, 92], "39": [0, 4, 8, 11, 14, 16, 22, 26, 29, 35, 36, 39, 40, 56], "87": [0, 16, 18, 19, 20, 25, 26, 35, 36, 40], "38867696126302": 0, "874485831587726": 0, "909195582071941": 0, "2942944269415273": 0, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 66, 74, 76, 91, 92, 94, 97, 99, 105, 112, 115, 118, 131, 134, 137, 140, 145, 169, 175, 176, 179, 180], "run": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 60, 64, 76, 77, 78, 79, 80, 82, 86, 87, 88, 89, 90, 93, 94, 95, 97, 118, 157, 158, 159, 160, 161, 163, 172, 173], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 49, 68, 81, 83, 97, 100, 132, 134, 136, 139, 148, 149, 160, 164, 165], "script": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "minut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "318": [0, 9, 56], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 49, 83, 97, 100, 107, 129, 139, 140, 142, 143, 149], "jupyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "notebook": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "demo_custom_prior": [0, 9, 56], "ipynb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 77], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 56], "galleri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 56, 179], "sphinx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "deep": [1, 9, 10, 18, 41, 42, 50, 56, 57, 59, 70, 75, 78, 79, 80, 82, 97, 98, 99, 105, 110, 112, 118, 131, 134, 137, 139, 140, 145, 155, 164, 165, 170, 171, 172, 175, 176, 177, 179], "invers": [1, 2, 5, 6, 7, 8, 15, 16, 20, 23, 24, 27, 29, 30, 32, 42, 45, 46, 48, 50, 51, 53, 54, 55, 61, 65, 66, 70, 71, 72, 73, 75, 108, 126, 129, 131, 138, 139, 142, 144, 145, 151, 157, 164, 166], "problem": [1, 2, 6, 8, 15, 16, 24, 29, 30, 35, 36, 39, 42, 45, 46, 49, 50, 53, 54, 55, 80, 83, 91, 92, 94, 95, 97, 98, 100, 101, 107, 130, 132, 134, 135, 136, 138, 140, 143, 151, 157, 159], "natur": [1, 15, 16, 31, 54, 81, 100], "contain": [1, 3, 4, 19, 29, 35, 36, 37, 39, 40, 44, 46, 49, 51, 52, 53, 57, 59, 66, 84, 94, 97, 101, 107, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 149, 161, 162, 163, 166, 167, 169, 172, 173, 177, 181], "set3": 1, "imagefold": 1, "you": [1, 6, 10, 11, 24, 25, 26, 27, 29, 30, 31, 32, 35, 40, 42, 51, 55], "ani": [1, 6, 42, 45, 55, 61, 65, 66, 67, 69, 70, 84, 108, 120, 140, 142, 145, 164, 165, 170, 171], "other": [1, 5, 25, 43, 47, 49, 61, 65, 66, 67, 69, 70, 77, 94, 140, 145, 164, 165, 174], "long": [1, 26, 165], "set": [1, 2, 4, 7, 11, 15, 20, 23, 24, 25, 27, 35, 36, 37, 38, 40, 46, 47, 51, 52, 57, 59, 61, 62, 63, 65, 66, 67, 69, 70, 79, 80, 81, 82, 85, 89, 90, 94, 102, 105, 108, 114, 117, 119, 120, 121, 126, 137, 139, 140, 141, 145, 146, 147, 152, 153, 161, 163, 164, 165], "up": [1, 4, 6, 16, 35, 36, 38, 40, 51, 81, 92], "oper": [1, 9, 10, 15, 25, 26, 31, 32, 33, 43, 44, 45, 46, 48, 49, 52, 55, 56, 57, 59, 61, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 83, 91, 92, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 115, 116, 117, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 174, 176, 177, 179], "32": [1, 2, 4, 6, 8, 15, 16, 18, 20, 21, 23, 24, 26, 27, 29, 31, 32, 35, 36, 37, 38, 39, 40, 44, 76, 83, 87, 88, 100, 132, 136, 140, 143, 150, 157, 159], "batch": [1, 12, 13, 16, 18, 20, 29, 30, 36, 37, 58, 59, 77, 79, 80, 81, 82, 83, 93, 96, 97, 99, 100, 102, 105, 108, 126, 149, 154, 156, 164, 179], "channel": [1, 2, 3, 5, 6, 7, 11, 12, 13, 15, 18, 20, 38, 44, 58, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 93, 100, 108, 132, 133, 139, 142, 148, 149, 150, 179], "dimens": [1, 12, 13, 18, 20, 36, 76, 81, 83, 88, 90, 94, 99, 100, 102, 103, 111, 115, 117, 125, 126, 134, 154, 156, 167, 169], "displai": [1, 130, 131, 136, 143], "unsqueez": [1, 6, 7, 11, 12, 13, 18, 20, 24, 27, 38, 99, 134], "zip": [1, 8, 10, 12, 18, 26, 39, 40], "385k": [1, 12, 18, 40], "ib": [1, 8, 12, 18, 29, 39, 40], "59mib": 1, "denois": [1, 2, 4, 10, 14, 16, 17, 18, 19, 21, 22, 23, 27, 29, 33, 35, 36, 39, 40, 45, 48, 49, 52, 53, 55, 56, 57, 59, 67, 68, 71, 72, 73, 75, 77, 79, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 105, 110, 112, 113, 114, 115, 117, 118, 134, 136, 137, 139, 140, 141, 145, 146, 147, 152, 153, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 175, 176, 177, 179], "ignor": [1, 44, 60, 64, 76, 78, 86, 87, 88, 89], "attribut": [1, 25, 47, 119, 120, 121, 137, 141, 146, 147, 152, 153, 181], "e": [1, 3, 6, 10, 11, 19, 23, 24, 25, 29, 30, 31, 32, 43, 44, 46, 49, 51, 52, 53, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 79, 82, 83, 84, 85, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 111, 114, 117, 118, 130, 131, 132, 133, 135, 139, 140, 142, 144, 147, 151, 154, 156, 157, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175], "label": [1, 16, 32, 36, 45, 49, 81, 97], "physic": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 48, 49, 52, 59, 61, 65, 66, 67, 68, 69, 71, 72, 73, 75, 80, 83, 96, 97, 99, 100, 101, 102, 103, 105, 107, 119, 120, 121, 122, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170], "dinv_dataset_path": [1, 18, 20], "135": [1, 8, 16, 18, 26], "10it": [1, 16, 37, 39], "over": [1, 26, 45, 68, 84, 86, 91, 92, 101, 117, 151], "pair": [1, 8, 30, 39, 43, 46, 57, 59, 68, 69, 164], "signal": [1, 6, 7, 45, 46, 48, 54, 57, 59, 61, 65, 66, 70, 75, 102, 114, 117, 129, 130, 132, 133, 134, 136, 140, 143, 144, 145, 148, 149, 151, 175], "adapt": [1, 54, 67, 71, 72, 73, 81, 90, 91, 92, 97, 98], "build": [1, 10, 19, 27, 28, 44, 47, 53, 55, 56, 58, 86, 99, 105, 109, 112, 114, 118, 131, 134, 137, 140, 145, 161, 163, 172, 173, 175, 176, 177, 179], "custom": [1, 4, 9, 10, 21, 22, 28, 39, 41, 45, 55, 56, 57, 59, 70, 82, 86, 97, 99, 105, 107, 110, 112, 114, 118, 124, 131, 132, 134, 136, 137, 140, 143, 145, 150, 155, 161, 163, 164, 165, 171, 172, 173, 175, 176, 177, 179, 180, 181], "case": [1, 3, 11, 12, 19, 26, 36, 43, 44, 45, 47, 59, 81, 96, 102, 103, 107, 132, 140, 144, 145, 150, 151, 158], "doesn": [1, 114], "t": [1, 3, 16, 25, 26, 36, 37, 68, 81, 86, 91, 92, 101, 111, 114, 125, 138, 140, 149, 154, 156, 158, 159, 164, 166, 170], "meet": [1, 27], "need": [1, 4, 11, 15, 23, 25, 39, 42, 47, 49, 60, 64, 76, 78, 86, 87, 88, 89, 94, 120, 126, 147, 165], "489": [1, 9, 56], "demo_dataset": [1, 9, 56], "noisi": [2, 11, 12, 13, 15, 16, 23, 24, 25, 26, 27, 44, 51, 67, 68, 71, 72, 73, 77, 79, 81, 82, 83, 90, 91, 92, 93, 94, 95, 137, 139, 141, 143, 144, 145, 146, 147, 152, 153], "incomplet": [2, 10, 24, 27, 33, 56, 57, 59, 61, 65, 66, 75, 93, 132, 134, 139, 140, 145, 151, 164, 165, 176], "base": [2, 15, 23, 26, 43, 45, 49, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 174], "ulyanov": [2, 80], "2018": [2, 38, 80], "minim": [2, 12, 13, 16, 30, 36, 39, 45, 49, 80, 83, 91, 97, 100, 107, 123, 128, 158], "loss": [2, 8, 10, 16, 27, 29, 30, 33, 35, 36, 37, 38, 39, 40, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 93, 96, 99, 105, 134, 135, 140, 145, 147, 164, 165, 166, 176], "theta": [2, 8, 16, 30, 45, 80, 158, 159, 166], "af_": 2, "z": [2, 19, 38, 45, 49, 52, 68, 71, 72, 73, 80, 101, 103, 106, 107, 111, 114, 119, 121, 134, 136, 137, 140, 145, 146, 152, 163], "f_": [2, 8], "decod": [2, 45, 78, 79, 80], "network": [2, 9, 10, 16, 25, 26, 27, 45, 48, 50, 53, 56, 57, 59, 62, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 85, 89, 90, 93, 108, 130, 132, 134, 136, 139, 140, 143, 145, 151, 158, 159, 164, 165, 166, 176], "should": [2, 3, 19, 21, 29, 35, 49, 59, 60, 64, 68, 69, 71, 72, 73, 76, 78, 80, 86, 87, 88, 89, 90, 94, 112, 118, 120, 124, 125, 130, 132, 134, 136, 138, 140, 141, 142, 143, 150, 151, 154, 156, 157, 159, 161, 163, 164, 171, 172, 173, 179], "earli": [2, 20, 80, 98], "avoid": [2, 23, 80, 96, 109, 161, 166], "overfit": [2, 80, 166], "adam": [2, 8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 80, 166], "optim": [2, 4, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 52, 53, 56, 80, 82, 83, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 137, 140, 145, 150, 151, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181], "load_url_imag": [2, 7, 15, 19, 21, 23, 24, 25, 26, 27, 45], "lionel": [2, 23, 24, 27], "messi": [2, 23, 24, 27], "wikipedia": [2, 23, 24, 27, 127], "url": [2, 4, 7, 15, 16, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 45, 90, 177], "http": [2, 4, 10, 11, 15, 16, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 36, 38, 45, 55, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 81, 82, 84, 87, 88, 90, 91, 92, 120, 127, 132, 136, 138, 149, 157, 158, 159, 162, 163, 164, 165, 179], "upload": [2, 23, 24, 27], "wikimedia": [2, 23, 24, 27], "org": [2, 23, 24, 27, 61, 62, 63, 64, 66, 68, 71, 72, 73, 75, 82, 84, 87, 88, 127, 132, 136, 138, 149, 157, 158, 159, 162, 163, 179], "common": [2, 23, 24, 27, 35, 36, 40, 49, 117, 166], "b": [2, 3, 4, 15, 16, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 37, 39, 51, 71, 72, 73, 86, 90, 96, 99, 102, 105, 125, 127, 142, 144, 148, 149, 154, 156, 161, 162, 163, 175, 179], "b4": [2, 23, 24, 27], "argentina": [2, 23, 24, 27], "2022": [2, 23, 24, 27], "fifa": [2, 23, 24, 27], "world": [2, 23, 24, 27], "cup_": [2, 23, 24, 27], "28crop": [2, 23, 24, 27], "jpg": [2, 23, 24, 27], "_c": [2, 7, 27], "0x7f09fbe80a90": [2, 7, 27], "inpaint": [2, 4, 8, 10, 14, 17, 24, 26, 27, 30, 41, 45, 55, 56, 57, 59, 70, 94, 97, 99, 100, 102, 105, 110, 112, 117, 118, 134, 135, 137, 140, 145, 157, 159, 164, 165, 171, 173, 175, 176, 177, 179, 180], "level": [2, 3, 4, 7, 11, 13, 15, 19, 21, 23, 24, 25, 26, 27, 36, 39, 40, 44, 49, 52, 77, 79, 81, 82, 84, 90, 93, 94, 95, 98, 105, 110, 111, 114, 117, 141, 149, 157, 158, 159, 162, 163], "mask": [2, 4, 6, 7, 8, 13, 15, 23, 24, 26, 27, 29, 30, 31, 39, 45, 67, 69, 134, 139, 142, 150, 157, 159], "tensor_s": [2, 7, 13, 24, 26, 27, 30, 134, 139, 157, 159], "appli": [2, 11, 12, 13, 16, 19, 23, 24, 25, 26, 27, 36, 40, 45, 49, 50, 77, 81, 84, 91, 92, 93, 94, 97, 114, 115, 117, 130, 131, 134, 136, 139, 140, 142, 143, 144, 149, 150, 167, 168, 169], "onli": [2, 6, 8, 12, 13, 16, 18, 19, 20, 23, 25, 26, 29, 30, 31, 32, 35, 38, 39, 49, 59, 79, 80, 81, 82, 85, 89, 90, 94, 95, 99, 112, 117, 139, 140, 155, 158, 161, 164, 165, 170, 179], "work": [2, 3, 4, 7, 8, 20, 24, 25, 26, 36, 39, 80], "certain": [2, 43, 80], "recommend": [2, 4, 5, 6, 7, 8, 25, 31, 32, 36, 39, 47, 49, 55, 80, 92, 117, 132, 140, 150], "convdecod": [2, 80], "rate": [2, 80, 89, 90, 165, 166], "manual": [2, 21], "obtain": [2, 5, 7, 23, 27, 50, 52, 53, 68, 84, 157, 158, 159, 161, 162, 168], "good": [2, 8, 39, 151], "howev": [2, 11, 29, 47, 61, 65, 66, 67, 69, 70, 80, 143], "valu": [2, 5, 6, 7, 15, 20, 23, 24, 25, 29, 32, 35, 36, 37, 49, 51, 52, 54, 71, 72, 73, 80, 81, 83, 86, 90, 91, 96, 97, 100, 101, 108, 114, 115, 118, 126, 131, 134, 141, 142, 147, 150, 151, 157, 159, 162, 163, 165, 172, 173, 175, 179], "mai": [2, 3, 49, 80, 93, 97, 107, 147], "experi": [2, 80], "small": [2, 11, 16, 32, 35, 40, 49, 72, 73, 83, 91, 96, 100, 117, 151], "reduc": [2, 25, 26, 29, 30, 31, 32, 83, 100, 117], "runtim": 2, "could": 2, "improv": [2, 75], "more": [2, 4, 11, 16, 23, 39, 45, 49, 51, 53, 79, 81, 82, 83, 84, 85, 89, 90, 95, 97, 98, 100, 104, 118, 127, 132, 140, 141, 144, 145, 151, 162, 163, 164, 165, 168, 170, 172, 173, 179], "lr": [2, 8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "64": [2, 5, 6, 7, 8, 12, 13, 16, 19, 20, 25, 26, 29, 30, 31, 32, 35, 36, 37, 40, 79, 82, 85, 89], "per": [2, 3, 24, 27, 29, 30, 36, 44, 52, 79, 81, 82, 89, 94, 100, 140, 149, 150, 167, 169], "layer": [2, 29, 38, 40, 44, 53, 76, 78, 79, 81, 82, 87, 88, 89, 90, 93], "in_siz": [2, 78], "size": [2, 3, 7, 8, 11, 16, 18, 20, 23, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 48, 49, 51, 53, 54, 58, 59, 69, 71, 72, 73, 78, 80, 81, 83, 86, 90, 96, 97, 99, 100, 101, 102, 103, 105, 108, 109, 117, 120, 123, 126, 128, 129, 130, 131, 132, 134, 136, 139, 140, 141, 142, 143, 145, 149, 150, 151, 154, 156, 162, 163, 170, 174, 175, 177, 179], "backbon": [2, 8, 36, 47, 53], "img_shap": [2, 7, 19, 36, 37, 43, 51, 78, 132, 148, 150], "f": [2, 3, 5, 6, 12, 13, 19, 21, 23, 24, 25, 27, 43, 45, 49, 53, 62, 63, 72, 86, 91, 96, 97, 99, 101, 103, 105, 107, 112, 118, 119, 120, 121, 122, 123, 124, 125, 128, 134, 140, 142, 159, 161, 172, 173], "deepimageprior": [2, 78], "learning_r": [2, 8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 80, 166], "input_s": [2, 80, 154, 156], "somewhat": 2, "surpris": 2, "sinc": [2, 23, 26, 27, 47, 60, 64, 76, 78, 86, 87, 88, 89, 94, 101, 102, 103, 132, 150], "mani": [2, 45, 53, 55, 136], "potenti": [2, 20, 37], "data": [2, 16, 43, 45, 46, 47, 48, 53, 58, 59, 61, 65, 66, 67, 69, 70, 71, 72, 73, 83, 89, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 117, 118, 119, 120, 121, 122, 125, 126, 158, 159, 164, 165, 166, 172, 173], "architectur": [2, 4, 8, 25, 29, 31, 32, 35, 39, 40, 44, 45, 47, 53, 55, 75, 76, 78, 79, 82, 85, 89, 90, 93], "act": [2, 32, 49, 51, 97, 141], "implicit": [2, 49, 53, 112, 170], "provid": [2, 6, 7, 12, 13, 18, 19, 20, 21, 23, 45, 49, 50, 52, 53, 54, 59, 94, 108, 143, 151, 154, 156, 164], "while": [2, 6, 29, 45, 49, 60, 64, 76, 78, 86, 87, 88, 89, 97, 126], "phenomenon": 2, "yet": 2, "well": [2, 5, 6, 12, 13, 26, 45, 50, 55, 61, 65, 66, 67, 69, 70, 78, 101, 107, 130, 132, 134, 136, 140, 143, 151, 164, 171], "understood": 2, "some": [2, 6, 7, 12, 13, 23, 26, 44, 45, 47, 49, 51, 53, 54, 109, 130, 132, 134, 136, 140, 143, 145, 151], "effort": 2, "explain": [2, 55], "For": [2, 4, 8, 11, 12, 13, 16, 19, 21, 25, 26, 29, 35, 36, 37, 39, 40, 43, 45, 47, 49, 91, 92, 97, 112, 117, 127, 132, 141, 149, 162, 163, 170], "see": [2, 3, 19, 23, 26, 27, 32, 36, 37, 39, 45, 48, 49, 51, 53, 66, 67, 69, 72, 73, 78, 79, 81, 82, 83, 85, 89, 90, 91, 92, 95, 97, 98, 100, 101, 118, 119, 127, 132, 140, 145, 149, 150, 151, 164, 165, 168, 170, 171, 172, 173, 179], "neural": [2, 8, 16, 26, 27, 38, 50, 62, 78, 93, 108], "tangent": 2, "link": [2, 10, 25, 48, 81, 161, 162, 163], "cnn": [2, 18, 79, 98], "non": [2, 27, 50, 126, 130, 132, 134, 136, 138, 140, 143, 144, 145, 151, 171], "local": [2, 31, 42], "linear": [2, 5, 7, 8, 12, 13, 16, 19, 21, 23, 24, 25, 26, 27, 36, 37, 39, 74, 75, 83, 91, 92, 96, 99, 100, 101, 115, 125, 127, 130, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 150, 151, 154, 156, 164], "x_lin": [2, 12, 13, 19, 21, 23, 24, 27], "a_adjoint": [2, 4, 6, 7, 12, 13, 19, 21, 23, 24, 27, 38, 39, 51, 97, 99, 101, 105, 130, 132, 134, 136, 140, 143, 151, 154, 156], "print": [2, 4, 5, 6, 8, 12, 13, 15, 16, 19, 21, 23, 24, 27, 29, 30, 31, 32, 39, 62, 63, 80, 91, 92, 97, 99, 105, 140, 157, 158, 159, 160, 161, 162, 163, 166], "cal_psnr": [2, 11, 12, 13, 15, 16, 19, 21, 23, 24, 27, 140, 157, 159], "2f": [2, 5, 6, 11, 12, 13, 15, 16, 19, 21, 23, 24, 27, 62], "titl": [2, 3, 5, 6, 7, 12, 13, 19, 21, 23, 24, 25, 26, 27, 179], "ground": [2, 8, 12, 13, 15, 16, 19, 21, 23, 24, 25, 26, 27, 36, 37, 39, 70, 97, 101, 164, 165, 170], "truth": [2, 8, 12, 13, 15, 16, 19, 21, 23, 24, 25, 26, 27, 36, 37, 39, 70, 97, 101, 164, 170], "11": [2, 8, 16, 20, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 92], "106": [2, 16, 26, 36], "57it": [2, 8, 29, 36, 38], "23": [2, 5, 8, 16, 19, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39], "110": [2, 16, 26, 36], "16it": [2, 16, 26, 37], "35": [2, 8, 15, 16, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40], "109": [2, 16, 20, 26], "33it": [2, 16, 29, 30, 35], "47": [2, 8, 16, 25, 26, 29, 35, 36, 39], "67it": [2, 24, 29, 36, 38, 39, 40], "111": [2, 16, 26], "34it": [2, 8, 16, 35], "78it": [2, 8, 16, 25, 32, 36, 38], "83": [2, 16, 25, 26, 31, 35, 36, 40], "26it": [2, 16], "95": [2, 16, 26, 29, 35, 36, 38, 40], "70it": [2, 8, 24, 25, 36, 38, 39], "13it": [2, 8, 37], "8": [2, 8, 12, 13, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 83, 84, 90, 92, 100, 115, 130, 131, 140], "58": [2, 16, 26, 29, 35, 36, 40], "19": [2, 8, 16, 17, 24, 25, 26, 29, 31, 32, 35, 36, 37, 38, 39], "61": [2, 16, 26, 29, 35, 36], "175": [2, 9, 16, 26, 56], "demo_dip": [2, 9, 56], "singlephotonlidar": 3, "matplotlib": [3, 11, 20, 25, 179], "pyplot": [3, 11, 25], "plt": [3, 11, 25], "config": [3, 25, 89], "get": [3, 25, 26, 29, 30, 31, 32, 42, 81, 97, 126, 158, 159], "nice": [3, 25], "config_matplotlib": [3, 25], "bin": [3, 149], "pixel": [3, 4, 8, 13, 19, 24, 26, 27, 32, 36, 37, 39, 51, 76, 79, 85, 130, 131, 136, 139, 140, 143, 145, 149, 150, 151, 154, 156, 175], "impuls": [3, 149], "respons": [3, 149], "defin": [3, 5, 6, 11, 15, 16, 21, 25, 29, 30, 31, 32, 43, 45, 49, 51, 53, 60, 61, 64, 65, 66, 68, 70, 76, 78, 83, 86, 87, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 107, 108, 114, 119, 120, 121, 122, 125, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 148, 150, 151, 157, 158, 159, 161], "y_": [3, 149], "j": [3, 26, 36, 91, 92, 97, 117, 132, 148, 149], "mathcal": [3, 15, 16, 25, 26, 27, 30, 39, 46, 52, 68, 71, 72, 73, 84, 102, 114, 132, 137, 141, 146, 147, 148, 149, 152, 153, 158, 159, 163, 166], "h": [3, 11, 16, 37, 80, 90, 101, 109, 130, 131, 132, 136, 139, 142, 148, 149, 150, 154, 156, 175, 179], "d_": [3, 39, 45, 80, 149, 158, 159], "r_": [3, 23, 30, 149], "b_": [3, 148, 149], "poisson": [3, 7, 16, 31, 32, 52, 72, 73, 106, 111, 141, 146, 147, 149], "scene": [3, 138, 149], "intens": [3, 138, 149], "background": [3, 111, 149], "irf_sigma": 3, "peak": [3, 149, 175], "locat": 3, "around": [3, 54], "50th": 3, "ratio": [3, 7, 69, 90, 160, 175], "10": [3, 5, 6, 8, 11, 15, 16, 20, 23, 24, 25, 26, 27, 29, 30, 32, 35, 36, 37, 38, 39, 40, 62, 63, 82, 95, 125, 130, 131, 132, 136, 148, 151, 157, 161, 162, 166, 175], "w": [3, 11, 18, 26, 37, 38, 80, 90, 98, 111, 129, 130, 131, 132, 139, 140, 142, 148, 149, 150, 154, 156, 164, 175, 179], "first": [3, 5, 7, 11, 12, 13, 18, 20, 25, 26, 37, 38, 49, 50, 74, 83, 97, 99, 100, 107, 126, 129, 142, 143, 149, 150, 154, 156, 164, 167, 169, 179], "third": [3, 149], "associ": [3, 7, 25, 36, 43, 44, 59, 61, 65, 66, 67, 68, 69, 71, 72, 73, 91, 92, 97, 99, 101, 105, 115, 161], "sbr": 3, "50": [3, 4, 8, 15, 16, 24, 25, 26, 28, 29, 30, 31, 35, 36, 38, 39, 40, 44, 63, 90, 99, 101, 112, 125, 140, 145, 149, 170], "bkg_level": 3, "d": [3, 11, 23, 27, 39, 49, 52, 62, 64, 74, 81, 84, 91, 92, 96, 99, 100, 102, 103, 105, 106, 110, 111, 113, 114, 115, 132, 138, 148, 149], "ones": [3, 4, 6, 7, 23, 25, 26, 36, 39, 44, 54, 130, 131, 140, 142, 151, 157, 159, 178], "r": [3, 6, 19, 20, 23, 25, 26, 31, 32, 38, 39, 45, 49, 62, 63, 67, 68, 69, 71, 72, 73, 79, 85, 86, 91, 97, 102, 111, 132, 134, 139, 149, 164], "ones_lik": [3, 13], "cat": [3, 6, 7, 26, 93], "shown": [3, 38, 45], "blue": 3, "red": [3, 10, 22, 56, 57, 59, 85, 97, 99, 105, 112, 114, 118, 136, 137, 140, 145, 164, 176], "xhat": [3, 11, 24, 25, 26, 97, 157, 159], "a_dagg": [3, 5, 6, 7, 16, 38, 51, 129, 132, 134, 138, 140, 144, 145, 149, 151], "figur": [3, 25, 179], "subplot": [3, 25], "detach": [3, 4, 7, 16, 25, 26, 36, 39], "numpi": [3, 11, 23, 24, 25, 26, 157], "stem": 3, "linefmt": 3, "markerfmt": 3, "tight_layout": [3, 25], "home": [3, 4, 7, 15, 16, 19, 20, 21, 25, 26, 27, 29, 30, 31, 32, 36, 39], "runner": [3, 4, 7, 15, 16, 19, 20, 21, 25, 26, 27, 29, 30, 31, 32, 36, 39], "77": [3, 16, 25, 26, 29, 36], "userwarn": [3, 4, 7, 25, 36, 39], "pad": [3, 8, 29, 30, 31, 32, 35, 38, 40, 86, 93, 94, 109, 129, 130, 131, 136, 143, 167, 168, 169], "same": [3, 4, 23, 29, 30, 31, 32, 39, 44, 49, 86, 91, 92, 94, 97, 99, 102, 103, 106, 111, 115, 118, 129, 130, 132, 136, 143, 148, 166, 172, 173, 175, 178, 179, 182, 183, 184], "even": [3, 26], "length": [3, 4, 29, 36, 37, 38, 39, 40, 97, 179], "odd": 3, "dilat": [3, 8, 30, 31, 32, 168], "requir": [3, 6, 19, 23, 24, 29, 39, 47, 49, 52, 97, 114, 120, 157, 159, 161, 162, 163], "zero": [3, 5, 6, 7, 23, 25, 26, 37, 54, 94, 96, 126, 130, 131, 136, 139, 140, 167, 184], "copi": [3, 4, 7, 11, 25, 35, 36, 37, 39, 40], "trigger": 3, "intern": [3, 20, 99, 111, 112, 126], "aten": 3, "src": 3, "nativ": 3, "cpp": 3, "1040": 3, "nn": [3, 4, 7, 11, 23, 36, 37, 39, 44, 47, 51, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 90, 93, 108, 130, 132, 135, 139, 143, 144, 147, 148, 150, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 181], "conv1d": 3, "irf": 3, "266": [3, 9, 56], "demo_lidar": [3, 9, 56], "wai": [4, 29, 30, 31, 32, 42, 55], "purpos": 4, "unfold": [4, 29, 30, 35, 38, 41, 55, 56, 57, 59, 70, 82, 87, 88, 94, 99, 102, 105, 110, 112, 134, 136, 137, 139, 140, 145, 164, 165, 170, 171, 172, 173, 176, 181], "chambol": [4, 10, 38, 41, 56, 57, 59, 70, 91, 92, 94, 99, 102, 110, 112, 118, 120, 134, 139, 140, 145, 164, 165, 171, 172, 173, 176], "pock": [4, 10, 38, 41, 56, 57, 59, 70, 91, 92, 94, 99, 102, 110, 112, 118, 120, 134, 139, 140, 145, 164, 165, 171, 172, 173, 176], "algorithm": [4, 6, 10, 22, 28, 29, 39, 41, 49, 55, 56, 57, 59, 70, 82, 86, 87, 88, 91, 92, 95, 97, 98, 99, 101, 102, 103, 105, 107, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 136, 137, 140, 145, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181], "its": [4, 6, 12, 13, 19, 25, 36, 37, 38, 39, 46, 51, 91, 92, 97, 108, 126, 134], "describ": [4, 18, 27, 30, 50, 98, 108, 129, 139, 140, 141, 145, 157, 158, 159], "constrain": [4, 10, 41, 56, 57, 59, 70, 92, 94, 99, 102, 110, 112, 134, 139, 140, 145, 164, 165, 171, 173, 176], "importlib": 4, "indicatorl2": [4, 39], "prior": [4, 9, 11, 14, 15, 17, 18, 19, 21, 29, 35, 36, 39, 40, 41, 44, 48, 52, 53, 55, 56, 57, 58, 59, 70, 78, 79, 80, 83, 92, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 131, 132, 134, 137, 139, 140, 141, 145, 151, 155, 161, 162, 163, 164, 165, 166, 171, 172, 173, 175, 176, 177, 179, 180, 181], "pnp": [4, 10, 22, 28, 29, 35, 39, 44, 49, 55, 56, 57, 59, 62, 79, 82, 97, 98, 99, 105, 107, 112, 114, 118, 131, 134, 137, 139, 140, 145, 150, 151, 159, 161, 163, 164, 165, 175, 176, 177, 179, 180], "unfolded_build": [4, 29, 36, 37, 38, 39, 40, 53], "get_weights_url": [4, 29, 30, 31, 32], "dataset": [4, 7, 9, 10, 11, 15, 16, 21, 26, 44, 45, 46, 55, 56, 57, 58, 59, 83, 100, 134, 135, 137, 140, 141, 145, 164, 165, 176, 179], "degrad": [4, 11, 21, 31, 32, 44], "ckpt_dir": [4, 8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "ckpt": [4, 8, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "miss": [4, 13], "rather": [4, 7, 25, 36, 39, 52, 54, 114], "complex": [4, 7, 11, 117, 132, 142, 150, 179], "consist": [4, 7, 19, 25, 26, 29, 30, 39, 44, 48, 53, 65, 66, 67, 69, 70, 97, 143], "radiu": [4, 39, 102, 103], "trainabl": [4, 8, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 67, 68, 69, 71, 72, 73, 93, 171], "soft": [4, 10, 11, 37, 39, 41, 56, 57, 59, 70, 94, 95, 99, 103, 105, 112, 117, 124, 132, 140, 145, 164, 165, 171, 173, 176, 181], "threshold": [4, 10, 11, 37, 39, 41, 56, 57, 59, 70, 94, 95, 97, 99, 103, 105, 112, 117, 124, 132, 140, 145, 160, 161, 163, 164, 165, 171, 173, 176, 181], "wavelet": [4, 10, 14, 36, 39, 56, 94, 95, 97, 99, 105, 112, 117, 118, 134, 137, 139, 140, 145, 175, 176, 179, 180], "basi": [4, 11, 36, 39], "If": [4, 5, 6, 16, 29, 30, 36, 37, 39, 42, 52, 55, 59, 64, 69, 71, 72, 73, 75, 79, 80, 81, 82, 84, 85, 89, 90, 94, 97, 100, 102, 107, 108, 114, 117, 118, 119, 120, 121, 129, 130, 132, 134, 136, 139, 140, 143, 145, 147, 150, 151, 152, 155, 161, 162, 163, 165, 170, 172, 173, 175, 177, 179], "initi": [4, 11, 16, 20, 25, 26, 29, 35, 36, 37, 39, 40, 79, 80, 81, 82, 85, 89, 90, 97, 100, 101, 108, 126, 144, 145, 158, 159, 181], "list": [4, 5, 7, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 47, 49, 54, 55, 59, 66, 79, 80, 83, 85, 89, 94, 95, 97, 100, 117, 118, 129, 130, 132, 134, 136, 138, 143, 144, 145, 151, 157, 164, 165, 168, 171, 172, 173, 174, 179], "distinct": [4, 29, 36, 37, 38, 39, 40, 49, 97, 118, 172, 173], "each": [4, 15, 23, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 49, 67, 72, 73, 77, 80, 87, 88, 89, 90, 94, 95, 97, 98, 100, 101, 107, 118, 126, 140, 145, 164, 165, 171, 172, 173, 179], "cp": [4, 39, 49, 118, 172, 173], "fix": [4, 18, 29, 35, 36, 37, 39, 40, 49, 53, 97, 101, 107, 140, 145, 170], "across": [4, 29, 36, 37, 39, 40, 59, 97, 150, 165, 170], "singl": [4, 9, 10, 11, 19, 24, 29, 31, 35, 36, 37, 38, 39, 40, 44, 45, 49, 52, 54, 56, 59, 67, 94, 97, 107, 118, 119, 120, 121, 122, 123, 124, 125, 130, 131, 140, 142, 145, 149, 150, 172, 173, 174, 176, 179], "30": [4, 8, 15, 16, 18, 21, 23, 24, 25, 26, 29, 30, 35, 36, 38, 39], "20": [4, 7, 8, 9, 12, 13, 15, 16, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 82, 175], "unrol": [4, 29, 35, 36, 37, 38, 39, 40, 44, 53, 164, 165, 170], "waveletdenois": [4, 11, 36, 39, 95, 117], "wv": [4, 11, 13, 36, 39, 94, 95, 117], "db8": [4, 11, 13, 36, 39, 94, 95, 117], "rang": [4, 6, 9, 10, 11, 13, 16, 25, 26, 29, 30, 36, 38, 39, 47, 56, 63, 81, 90, 101, 145, 149, 159, 160, 165, 166, 167, 176], "lamb": [4, 12, 13, 20, 29, 36, 37, 99, 112, 125], "sigma_denois": [4, 18, 20, 27, 29, 35, 39, 40, 110, 113, 114], "g_param": [4, 18, 19, 20, 21, 23, 29, 35, 36, 37, 38, 39, 40, 45, 49, 101, 118, 171], "k": [4, 7, 18, 19, 23, 27, 36, 37, 38, 39, 45, 49, 53, 91, 94, 95, 97, 98, 101, 107, 119, 120, 121, 122, 123, 124, 125, 162, 163, 171], "k_adjoint": [4, 38, 39], "trainable_param": [4, 29, 35, 36, 37, 39, 40, 171], "becaus": [4, 39], "custom_init_cp": [4, 39], "x_init": [4, 39, 97, 100, 101, 144, 145, 158, 159, 161], "u_init": [4, 39], "est": [4, 19, 20, 38, 39, 97, 101, 107, 119, 120, 121, 122], "custom_init": [4, 38, 39, 97], "To": [4, 7, 15, 25, 35, 36, 39, 40, 68, 112], "construct": [4, 7, 25, 36, 39, 51], "tensor": [4, 5, 6, 7, 19, 20, 25, 26, 36, 38, 39, 43, 54, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 167, 168, 169, 170, 174, 175, 177, 178, 179, 182, 183, 184], "sourcetensor": [4, 7, 25, 36, 39], "clone": [4, 7, 11, 16, 25, 26, 36, 39], "requires_grad_": [4, 7, 16, 25, 26, 36, 39, 63], "el": [4, 36, 39], "param_valu": [4, 36, 39], "state_dict": [4, 29, 30, 31, 32, 39], "model_nontrain": 4, "pth": [4, 19, 21, 27, 29, 30, 31, 32, 39, 132, 139, 144, 148, 150], "pgd": [4, 12, 13, 20, 21, 35, 36, 37, 39, 45, 49, 53, 97, 101, 107, 118, 124, 170, 172, 173], "prior_new": [4, 39], "params_algo_new": [4, 39], "model_new": [4, 39], "init": 4, "n": [4, 11, 15, 16, 20, 25, 26, 27, 30, 34, 48, 51, 52, 62, 63, 68, 71, 72, 81, 114, 132, 134, 137, 139, 140, 143, 144, 145, 146, 148, 150, 152, 158, 159, 163, 175], "file_nam": [4, 29, 30, 31, 32], "demo_unfolded_cp_ptwt": 4, "find_spec": 4, "ptwt": 4, "demo_unfolded_cp": 4, "model_nam": [4, 29, 30, 31, 32], "ckpt_state_dict": 4, "hub": [4, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32], "load_state_dict_from_url": [4, 29, 30, 31, 32], "map_loc": [4, 29, 30, 31, 32], "storag": [4, 29, 30, 31, 32], "loc": [4, 29, 30, 31, 32], "load_state_dict": [4, 29, 30, 31, 32, 39, 126, 132, 139, 144, 148, 150], "after": [4, 11, 16, 23, 42, 90, 101, 161, 181], "0100": 4, "requires_grad": [4, 63], "huggingfac": [4, 11, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32, 44, 45], "co": [4, 11, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32, 45], "resolv": [4, 11, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32, 45], "main": [4, 6, 11, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32, 42, 45], "cach": [4, 15, 16, 19, 20, 21, 26, 27, 29, 30, 31, 32], "3k": 4, "96mb": 4, "0545": 4, "0512": 4, "0481": [4, 36], "0484": [4, 36], "0526": [4, 36], "0535": 4, "0427": [4, 36], "244": [4, 9, 56], "demo_load": [4, 9, 56], "gener": [4, 7, 10, 11, 15, 16, 19, 20, 21, 26, 38, 42, 43, 44, 53, 59, 61, 66, 80, 83, 91, 100, 102, 103, 107, 108, 120, 132, 140, 145, 148, 154, 156, 157, 158, 159, 161, 164, 165, 167, 169], "new": [5, 6, 20, 23, 39, 51, 125, 126, 142, 161], "particular": [5, 53, 92, 120, 151], "pan": 5, "sharpen": 5, "downsampl": [5, 7, 16, 20, 35, 40, 79, 85, 93, 140, 143], "grayscal": [5, 6, 7, 15, 19, 21, 44, 45, 51, 133, 143, 177], "exist": [5, 53, 132, 139, 140, 144, 145, 148, 150, 151], "mathemat": 5, "equival": [5, 26, 68], "begin": [5, 11, 12, 13, 16, 19, 25, 26, 36, 39, 45, 49, 53, 97, 102, 117, 119, 120, 121, 122, 123, 124, 125, 140, 145, 158, 159, 170, 171], "bmatrix": [5, 140, 145], "y_1": [5, 69], "y_2": [5, 69], "a_1": [5, 31, 67, 69, 140, 145], "a_2": [5, 31, 67, 69, 140, 145], "two": [5, 15, 16, 25, 26, 29, 30, 31, 49, 67, 69, 99, 105, 107, 111, 112, 129, 140, 145, 151, 174], "one": [5, 11, 26, 30, 42, 45, 47, 49, 55, 57, 60, 62, 63, 64, 76, 78, 86, 87, 88, 89, 94, 126, 130, 131, 132, 134, 136, 138, 140, 143, 151, 154, 156, 161, 162, 163], "anoth": 5, "convert": [5, 6, 24, 52, 81, 133, 134, 177], "pansharpen": [5, 7], "factor": [5, 7, 15, 20, 36, 37, 40, 68, 90, 102, 105, 136, 140, 142, 143, 160, 165, 168], "physics1": [5, 140], "physics2": [5, 6, 140], "decolor": [5, 6], "physics_stack": 5, "tensorlist": [5, 140, 143, 145, 178, 182, 183, 184], "ad": [5, 10, 25, 48, 54, 68, 137, 140, 141, 146, 147, 152, 153], "multipli": [5, 49, 54, 119, 140, 165, 174], "etc": [5, 6, 23, 49, 52, 53, 54, 55, 59, 61, 101, 174], "It": [5, 12, 13, 16, 29, 48, 53, 54, 59, 61, 74, 81, 82, 86, 105, 108, 127, 131, 132, 136, 140, 141, 143, 144, 145, 150, 157, 174], "also": [5, 6, 7, 21, 24, 26, 32, 36, 37, 42, 45, 49, 51, 52, 53, 54, 55, 59, 79, 81, 82, 85, 89, 90, 94, 103, 112, 114, 140], "possibl": [5, 35, 42, 45, 47, 81, 82, 97, 143, 170, 175], "fill": [5, 178, 182, 183, 184], "line": [5, 10, 45, 139, 142, 151], "similarli": [5, 39, 49, 112], "48": [5, 8, 14, 15, 16, 23, 26, 29, 35, 36, 37, 150], "xlin": [5, 6], "pseudo": [5, 6, 51, 75, 131, 139, 142, 144, 151], "high": [5, 7, 143], "re": [5, 7, 80, 142], "low": [5, 7, 19, 52, 114, 136, 141, 143], "transpos": [5, 6, 75, 79, 85, 97, 99, 101, 105, 130, 132, 134, 136, 140, 143, 151], "linearphys": [5, 6, 51, 83, 97, 99, 100, 101, 105, 130, 132, 134, 136, 143, 144, 151, 158, 159], "adjointness_test": [5, 6, 140], "unit": [5, 6, 25, 132, 140], "compute_norm": [5, 6, 140, 163], "power": [5, 6, 21, 25, 62, 63, 81, 140, 150], "physics_concat": 5, "6": [5, 8, 11, 15, 16, 19, 20, 24, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 41, 58, 83, 88, 90, 100, 108, 109], "699": [5, 9, 56], "demo_pansharpen": [5, 9, 56], "offer": [6, 45], "larg": [6, 51, 55, 80, 81, 83, 91, 100, 117, 132], "might": [6, 83, 100, 159], "want": [6, 12, 13, 20, 62, 63], "your": [6, 9, 10, 19, 28, 42, 55, 56, 57, 59, 86, 98, 99, 105, 112, 114, 131, 134, 135, 137, 140, 145, 161, 163, 175, 176, 177, 179], "own": [6, 9, 10, 19, 38, 56, 57, 59, 79, 81, 82, 85, 89, 90, 134, 135, 137, 140, 145, 176, 179], "walk": 6, "through": [6, 26, 61, 62, 63], "creation": 6, "rgb": [6, 7, 83, 100, 133, 138, 143], "averag": [6, 11, 24, 27, 44, 79, 84, 85, 106, 130, 131, 140, 141], "exploit": [6, 23, 31, 32], "singular": [6, 23, 24, 51, 131, 134, 142, 150, 157], "decomposit": [6, 23, 24, 51, 94, 95, 117, 131, 134, 139, 142, 150, 157], "speed": [6, 59, 92], "evalu": [6, 24, 26, 35, 36, 37, 63, 92, 101, 108, 109, 126, 140, 145, 165], "remain": [6, 25], "structur": [6, 51, 79, 142], "onc": [6, 8, 26, 39, 83, 97, 100], "adjoint": [6, 12, 13, 21, 39, 48, 51, 91, 92, 100, 115, 140, 151, 154, 156], "must": [6, 7, 12, 13, 19, 21, 63, 79, 133, 157, 159, 174], "colour": [6, 133], "2989": 6, "5870": 6, "1140": 6, "96": [6, 8, 15, 16, 26, 29, 35, 36, 37], "128": [6, 8, 16, 26, 29, 30, 31, 32, 36, 38, 39, 44, 79, 81, 85, 90], "mea": 6, "45": [6, 7, 16, 26, 29, 35, 36, 38, 151], "close": [6, 11, 23, 24, 51, 68, 94, 95, 102, 103, 106, 132, 136, 140, 144, 145, 151], "form": [6, 8, 11, 24, 37, 42, 45, 49, 51, 53, 94, 95, 97, 101, 102, 103, 106, 107, 131, 132, 140, 142, 144, 145, 151, 171], "svd": [6, 134, 139], "implement": [6, 7, 10, 11, 19, 28, 36, 37, 38, 49, 55, 56, 81, 82, 90, 92, 98, 99, 101, 105, 107, 111, 112, 120, 126, 131, 134, 137, 139, 140, 145, 157, 158, 159, 176, 177, 179], "decomposablephys": [6, 23, 24, 51, 131, 133, 135, 139, 142, 150, 157], "so": [6, 26, 40, 142], "decolorizesvd": 6, "447": 6, "v_adjoint": [6, 23, 134], "6687": 6, "3132": 6, "2550": 6, "v": [6, 19, 23, 53, 97, 99, 101, 105, 107, 134, 140, 144, 145, 170], "y2": [6, 51], "xlin2": 6, "solut": [6, 11, 12, 13, 49, 53, 92, 94, 95, 97, 101, 107, 132, 140, 151, 170], "moreov": [6, 16, 26, 97], "sampl": [6, 20, 26, 28, 30, 36, 37, 44, 52, 55, 56, 61, 66, 84, 86, 89, 99, 105, 112, 114, 131, 132, 134, 137, 139, 140, 142, 145, 148, 151, 152, 157, 158, 159, 160, 161, 162, 163, 165, 168, 175, 176, 177, 179], "ddrm": [6, 24], "start": [6, 29, 30, 31, 32, 107], "xprox": 6, "prox_l2": [6, 51, 134, 136, 140], "elaps": [6, 23, 24, 27], "xprox2": 6, "2e": [6, 13], "14": [6, 8, 13, 16, 25, 26, 29, 32, 35, 36, 37, 38, 39, 40, 56], "24e": 6, "295": [6, 9, 56], "demo_phys": [6, 9, 56], "deepinvers": [7, 42, 57], "restrict": [7, 151, 158], "ourselv": 7, "2d": [7, 94, 142, 150, 167, 168, 169], "found": [7, 24, 95], "get_image_url": [7, 15, 19, 21, 25, 26], "cbsd_0010": [7, 15], "png": [7, 15, 21, 25, 26, 45, 179], "dtype": [7, 25, 26, 37, 97, 101, 132, 140, 148, 150, 151, 154, 156], "float": [7, 37, 49, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 80, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 126, 127, 128, 132, 134, 137, 138, 139, 140, 141, 145, 146, 147, 149, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 175], "interpol": [7, 20, 26, 62, 151, 168, 179], "basic": [7, 9, 54, 55, 56, 130, 131, 140], "demo_physics_tour": [7, 9, 56], "ident": [7, 15, 19, 62, 97, 101, 125, 134, 135, 140, 145, 161, 162, 163], "poissonnois": [7, 31, 32], "result": [7, 16, 25, 26, 53, 54, 140, 145, 159, 160, 162, 163, 164, 165], "unless": 7, "explicit": [7, 9, 10, 20, 37, 55, 56, 57, 59, 97, 99, 105, 112, 118, 131, 134, 137, 140, 145, 155, 162, 164, 176], "consid": [7, 15, 16, 26, 83, 100, 108], "compressedsens": [7, 36, 37, 43, 51], "matrix": [7, 23, 36, 37, 63, 125, 130, 132, 134, 136, 139, 140, 143, 148, 150, 151], "take": [7, 16, 23, 25, 26, 32, 44, 46, 49, 60, 64, 72, 73, 76, 78, 79, 81, 86, 87, 88, 89, 100, 101, 107, 108, 109, 151, 165, 166], "2048": 7, "64x64": [7, 25, 26], "correspond": [7, 16, 19, 20, 25, 26, 36, 37, 44, 49, 97, 106, 107, 120, 125, 140, 141, 142, 144, 145], "m": [7, 19, 32, 36, 37, 42, 43, 48, 51, 69, 71, 72, 73, 92, 96, 125, 132, 134, 139, 140, 145, 148, 150, 162], "fast": [7, 36, 37, 76, 92, 131, 132, 139, 142, 150, 169], "channelwis": [7, 132, 148], "spars": [7, 77], "radon": [7, 16, 151], "mix": [7, 32], "img_width": [7, 16, 21, 38, 151], "angl": [7, 10, 15, 17, 21, 38, 44, 56, 58, 83, 99, 100, 106, 108, 109, 112, 140, 141, 145, 151, 155, 166, 167, 175, 179], "poissongaussiannois": 7, "gain": [7, 32, 72, 73, 111, 146, 147], "min": [7, 12, 13, 16, 26, 39, 45, 49, 83, 91, 92, 94, 95, 97, 100, 120, 140, 144, 145, 152, 179], "max": [7, 11, 24, 26, 27, 64, 79, 85, 104, 152, 179], "sinogram": 7, "backproject": [7, 16, 88], "subsampl": [7, 132, 136, 142, 150], "indic": [7, 39, 45, 59, 94, 101, 102, 117, 161, 166], "coeffici": [7, 94, 95, 117], "cartesian": 7, "approxim": [7, 16, 23, 27, 37, 44, 52, 71, 72, 73, 84, 94, 100, 114, 117, 151, 158, 162], "real": [7, 29, 142], "part": [7, 29, 53, 79, 142], "imaginari": [7, 29, 142], "rand": [7, 51, 137, 141, 146, 147, 152, 153, 179], "75": [7, 16, 25, 26, 29, 36, 38, 40, 168], "int": [7, 8, 23, 25, 27, 29, 30, 31, 32, 35, 38, 39, 40, 58, 59, 62, 63, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 108, 109, 111, 112, 115, 117, 118, 126, 127, 128, 129, 132, 136, 140, 142, 143, 145, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 177, 179], "x2": [7, 91, 92], "zeros_lik": [7, 11, 37, 38, 140], "space": [7, 16, 29, 38, 76, 83, 100, 109, 151], "singlepixelcamera": [7, 19], "binari": [7, 30, 134, 139, 142, 150], "pattern": [7, 18, 42, 98, 150], "hadamard": [7, 19, 150], "degre": [7, 16, 29, 44, 84, 151, 155, 167], "459": [7, 9, 56], "32x32": [8, 39, 136, 140, 143, 150, 157, 159], "avail": [8, 11, 39, 44, 45, 53, 79, 81, 82, 85, 89, 90, 94, 95, 102, 103, 117], "128x128": [8, 29, 39], "train_dataset_nam": [8, 29, 31, 32, 35, 36, 37, 38, 39, 40], "test_dataset_nam": [8, 35, 39, 40], "test_transform": [8, 35, 39, 40], "train_transform": [8, 35, 39, 40], "randomcrop": [8, 35, 39, 40], "8m": [8, 26, 30, 39, 40], "604k": 8, "04mib": 8, "85m": 8, "3mib": [8, 29], "66": [8, 16, 26, 29, 35, 36, 39, 40], "13": [8, 16, 20, 25, 26, 29, 30, 35, 36, 37, 38, 39], "0m": [8, 26, 29, 39, 40], "7mib": [8, 29, 40], "6mib": [8, 29, 40], "randomli": [8, 26, 39, 84, 109, 167, 169], "probabl": [8, 16, 32, 39, 72, 73, 132, 139, 150], "probability_mask": [8, 39], "1000": [8, 25, 26, 35, 36, 37, 38, 40, 76, 81, 91, 92, 115, 158, 159, 161, 162, 163], "my_dataset_nam": [8, 29, 30, 31, 35, 36, 37, 39, 40], "demo_training_inpaint": [8, 39], "deepinv_datasets_path": [8, 29, 30, 31, 32, 39], "dataset_filenam": [8, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59], "str": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 57, 59, 79, 81, 82, 83, 84, 85, 89, 90, 93, 94, 95, 97, 100, 108, 117, 118, 126, 129, 130, 131, 132, 136, 143, 148, 149, 150, 151, 154, 156, 158, 159, 164, 165, 166, 168, 172, 173, 177, 179, 180, 181], "train_batch_s": [8, 35, 36, 37, 38, 39, 40], "test_batch_s": [8, 35, 36, 37, 38, 39, 40], "train_dataload": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 165], "56it": [8, 32, 36, 38], "55it": [8, 16, 36], "phi_": [8, 30], "top": [8, 10, 19, 23, 30, 32, 38, 39, 48, 53, 71, 72, 73, 75, 94, 95, 97, 99, 106, 111, 120, 130, 132, 134, 136, 140, 143, 144, 145, 151, 154, 156], "post": [8, 24, 27], "u": [8, 19, 23, 25, 26, 30, 31, 32, 38, 48, 53, 68, 71, 72, 73, 79, 87, 93, 96, 99, 102, 103, 105, 106, 107, 111, 134, 140, 152, 153, 170], "net": [8, 25, 30, 31, 32, 79, 93], "unet": [8, 30, 31, 32, 81, 89], "in_channel": [8, 19, 21, 29, 30, 31, 32, 35, 47, 79, 81, 82, 85, 87, 88, 93], "out_channel": [8, 19, 21, 29, 30, 31, 32, 35, 47, 79, 81, 82, 85, 87, 88, 93], "batch_norm": [8, 93], "artifactremov": [8, 30, 31, 32, 47, 130, 132, 134, 136, 140, 143, 151, 164, 165], "supervis": [8, 33, 35, 36, 37, 38, 39, 40, 55, 56, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 82, 93, 99, 105, 110, 112, 134, 135, 139, 140, 142, 145, 147, 164, 165, 167, 168, 171, 173, 176], "mean": [8, 11, 23, 24, 25, 26, 27, 36, 39, 48, 49, 52, 65, 66, 67, 69, 70, 71, 72, 73, 160, 161, 162, 163], "error": [8, 24, 25, 27, 39, 61, 64, 65, 66, 67, 69, 70, 112, 151], "easili": [8, 25, 26, 39, 42, 43, 45, 59], "done": [8, 12, 13, 24, 25, 26, 35, 36, 37, 38, 39, 40, 42, 43, 94, 143], "suploss": [8, 35, 36, 37, 38, 39, 40], "few": [8, 16, 39, 140], "epoch": [8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 165, 166], "keep": [8, 26, 35, 39, 94, 132, 139, 140, 145, 150, 161, 162, 163], "short": [8, 39], "qualiti": [8, 39], "least": [8, 39], "5e": [8, 29, 30, 31, 32, 35, 40], "inform": [8, 29, 30, 31, 32, 39, 44, 46, 97, 126, 140, 164, 165], "mse": [8, 35, 36, 37, 38, 39, 40, 61, 65, 66, 67, 69, 70], "schedul": [8, 24, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 159, 165], "weight_decai": [8, 29, 30, 31, 32, 35, 37, 39, 40], "lr_schedul": [8, 29, 30, 31, 32, 35, 38, 39, 40], "steplr": [8, 29, 30, 31, 32, 35, 38, 39, 40], "step_siz": [8, 23, 27, 29, 30, 31, 32, 35, 39, 40, 128, 161, 162, 163], "eval_dataload": [8, 29, 30, 31, 32, 35, 36, 37, 38, 40, 165], "save_path": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 132, 139, 144, 148, 150, 165], "2067779": 8, "eval_psnr": [8, 29, 30, 31, 32, 35, 36, 37, 38, 40], "total_loss": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "114": [8, 16, 26, 36], "train_psnr": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "43": [8, 12, 15, 16, 25, 26, 29, 35, 36], "0828": [8, 37], "0921": 8, "24it": [8, 29, 35], "0865": 8, "074": 8, "0713": 8, "12": [8, 11, 16, 20, 25, 26, 29, 30, 35, 36, 37, 38, 39, 96], "0625": 8, "36it": [8, 29, 36, 37, 40], "0856": [8, 143], "0786": 8, "0747": 8, "0698": 8, "22": [8, 15, 16, 20, 22, 23, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 56], "93it": [8, 16, 30, 36, 38], "0718": 8, "0681": 8, "0697": 8, "0673": [8, 36], "31": [8, 12, 16, 26, 29, 35, 36], "22it": [8, 26, 29, 40], "064": [8, 20], "0643": [8, 36], "0654": [8, 36], "0632": 8, "38": [8, 16, 26, 29, 35, 36, 40], "0617": [8, 36], "071": [8, 20], "0701": 8, "0728": 8, "46": [8, 16, 26, 29, 36, 40], "29it": [8, 29, 38], "0724": [8, 31], "0725": 8, "0709": 8, "0689": 8, "54": [8, 16, 20, 26, 29, 35, 36, 40], "27": [8, 16, 20, 25, 26, 29, 35, 36, 38, 40, 41, 56], "48it": [8, 29, 30, 35, 36, 38], "0691": 8, "0688": 8, "0684": 8, "0683": 8, "62": [8, 16, 23, 26, 29, 35, 36], "64it": [8, 30, 32, 36, 38, 39], "0675": [8, 31], "066": 8, "0638": 8, "70": [8, 16, 24, 25, 26, 29, 35, 36, 38, 139], "0639": 8, "0635": 8, "0644": 8, "0634": [8, 36, 39], "78": [8, 16, 26, 29, 30, 35, 36, 37], "87it": [8, 16, 36, 38], "062": 8, "0613": 8, "063": 8, "0637": 8, "86": [8, 16, 20, 26, 29, 35, 36], "80it": [8, 16, 32, 36, 38], "0629": 8, "0646": 8, "94": [8, 15, 16, 26, 29, 35, 36, 39], "83it": [8, 16, 29, 36, 38], "40it": [8, 29, 32, 35, 38], "0112": [8, 39], "085": [8, 37], "0621": [8, 36], "0555": [8, 36], "72it": [8, 24, 25, 32, 36, 38, 39], "0461": 8, "0446": [8, 36], "0472": [8, 36], "0471": [8, 36, 39], "69it": [8, 24, 25, 36, 38, 39], "0449": 8, "0409": [8, 36], "0389": [8, 36], "0429": [8, 36], "71it": [8, 16, 24, 25, 36, 38, 39], "0403": [8, 36], "0383": 8, "0388": [8, 36], "037": 8, "0366": 8, "0372": 8, "0364": [8, 36], "40": [8, 15, 16, 24, 25, 26, 29, 30, 35, 36, 37, 38, 40], "66it": [8, 32, 36, 37, 38, 39], "0363": 8, "0351": [8, 142], "0339": 8, "0329": 8, "73it": [8, 16, 25, 36, 38, 39], "0318": 8, "0316": 8, "0307": 8, "17": [8, 16, 19, 23, 25, 26, 29, 31, 32, 35, 36, 37, 38, 39, 40, 179], "0301": 8, "0294": 8, "0291": 8, "0282": 8, "028": [8, 20], "47it": [8, 16, 29, 35, 38], "0275": 8, "0272": 8, "0269": 8, "0264": 8, "72": [8, 16, 26, 29, 35, 36, 37, 91], "36": [8, 16, 20, 26, 28, 29, 32, 36, 37, 40, 56], "42it": [8, 16, 29, 35, 37], "026": 8, "0254": 8, "025": [8, 20], "0248": 8, "80": [8, 15, 16, 24, 25, 26, 29, 30, 32, 35, 36, 37, 38, 40], "21it": [8, 16, 26, 29, 37], "0247": 8, "0245": 8, "0241": [8, 136], "0238": 8, "88": [8, 15, 16, 26, 29, 35, 36, 37, 39], "44": [8, 16, 26, 27, 29, 36, 37], "61it": [8, 30, 36, 38, 40], "0234": 8, "0231": 8, "0228": 8, "0225": 8, "96it": [8, 16, 30, 36, 38], "0223": 8, "0221": 8, "00893": 8, "0115": 8, "0104": 8, "0159": 8, "0164": [8, 39], "0157": 8, "0149": 8, "0148": 8, "68it": [8, 25, 30, 32, 36, 38, 39], "0147": 8, "0143": 8, "0138": [8, 39], "0131": 8, "0129": [8, 39], "0125": [8, 39], "013": [8, 20], "0128": [8, 39], "43it": [8, 29, 32, 35], "0123": 8, "012": [8, 20], "0116": [8, 39], "62it": [8, 36, 38], "0114": [8, 39], "011": [8, 20, 39], "0109": [8, 39], "0108": [8, 39], "0106": 8, "81it": [8, 24, 36, 38], "0119": [8, 39], "0117": 8, "84it": [8, 36, 38], "0113": 8, "0118": 8, "21": [8, 12, 16, 19, 20, 25, 26, 29, 30, 35, 36, 37, 39], "0107": [8, 39], "60it": [8, 24, 36, 38, 39, 40], "0105": [8, 39], "0103": 8, "65it": [8, 30, 32, 36], "00656": 8, "00719": 8, "00797": 8, "00977": 8, "0101": [8, 39], "00857": 8, "00851": 8, "00819": 8, "17it": [8, 18, 23, 26, 29, 31, 35, 36, 37], "00833": 8, "00822": 8, "00802": 8, "00752": 8, "18it": [8, 16, 26, 37], "00707": 8, "00696": 8, "00668": 8, "00662": 8, "06it": [8, 16, 29, 37], "0071": 8, "00683": 8, "00666": 8, "98it": [8, 16, 36, 38, 40], "00717": 8, "00754": 8, "00741": 8, "00723": 8, "00718": 8, "00735": 8, "00767": 8, "00761": 8, "00757": 8, "0074": 8, "00727": 8, "00759": 8, "00746": 8, "00734": 8, "00835": 8, "00823": 8, "0082": 8, "94it": [8, 16, 30, 36, 37, 38], "00817": 8, "0081": 8, "00798": [8, 39], "00786": 8, "00775": 8, "00772": 8, "00766": 8, "76it": [8, 16, 25, 36, 38, 39], "00812": 8, "00815": 8, "86it": [8, 16, 24, 36, 38], "backbone_net": [8, 30, 31, 32, 75], "maxpool": [8, 30, 31, 32, 79, 85], "maxpool2d": [8, 30, 31, 32], "kernel_s": [8, 29, 30, 31, 32, 35, 38, 40, 86, 129], "stride": [8, 29, 30, 31, 32, 35, 38, 40, 79, 85], "ceil_mod": [8, 30, 31, 32], "conv1": [8, 30, 31, 32], "sequenti": [8, 30, 31, 32, 77], "conv2d": [8, 29, 30, 31, 32, 35, 38, 40, 129, 130], "relu": [8, 29, 30, 31, 32, 35, 40, 79, 82, 85], "inplac": [8, 30, 31, 32], "conv2": [8, 30, 31, 32], "conv3": [8, 30], "up3": [8, 30], "upsampl": [8, 30, 31, 32, 79, 85, 90], "scale_factor": [8, 30, 31, 32], "mode": [8, 30, 31, 32, 40, 79, 82, 85, 89, 150, 168, 179], "nearest": [8, 30, 31, 32, 79, 81, 85, 90, 159], "up_conv3": [8, 30], "up2": [8, 30, 31, 32], "up_conv2": [8, 30, 31, 32], "conv_1x1": [8, 30, 31, 32], "now": [8, 11, 15, 16, 24, 25, 26, 35, 36, 37, 39, 170], "test_psnr": [8, 39, 164], "artifact_remov": [8, 39], "test_std_psnr": [8, 39, 164], "init_psnr": [8, 39], "init_std_psnr": [8, 39], "26": [8, 16, 24, 25, 26, 29, 32, 35, 36, 37, 38, 39], "674": [8, 9, 56], "demo_train_inpaint": [8, 9, 56], "620": 9, "execut": [9, 14, 17, 22, 28, 33, 34, 41, 56], "file": [9, 14, 17, 22, 28, 33, 34, 41, 42, 49, 56, 57, 83, 100, 108, 132, 139, 144, 148, 150, 177], "auto_exampl": [9, 14, 17, 22, 28, 33, 34, 41], "mem": [9, 14, 17, 22, 28, 33, 34, 41, 56], "mb": [9, 14, 17, 22, 28, 33, 34, 41, 56, 81], "reconstruct": [9, 10, 12, 13, 15, 19, 20, 21, 23, 25, 27, 28, 38, 43, 47, 48, 52, 53, 56, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 90, 93, 100, 130, 132, 134, 136, 137, 139, 140, 141, 143, 144, 145, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 179], "08": [9, 16, 22, 26, 28, 29, 31, 35, 36, 37, 40, 56, 115], "tour": [9, 10, 56, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 150, 151, 155, 176, 177, 179], "sens": [9, 10, 26, 37, 41, 43, 56, 57, 59, 61, 66, 70, 99, 105, 112, 117, 124, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 150, 151, 155, 164, 165, 171, 173, 176, 177, 179, 181], "imag": [9, 10, 14, 22, 25, 26, 28, 33, 41, 43, 44, 48, 50, 51, 52, 56, 57, 58, 59, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 105, 108, 109, 110, 112, 115, 117, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180], "deblur": [9, 10, 14, 22, 25, 41, 55, 56, 57, 59, 70, 79, 82, 92, 97, 98, 99, 105, 110, 112, 115, 118, 131, 134, 137, 140, 145, 155, 164, 165, 168, 170, 172, 175, 176, 179, 180], "stack": [9, 10, 56, 133, 134, 136, 140, 143, 145, 174, 176, 179], "concaten": [9, 10, 54, 56, 87, 88, 90, 133, 134, 136, 140, 143, 145, 167, 169, 174, 176, 179], "photon": [9, 10, 56, 106, 141, 145, 149, 176], "lidar": [9, 10, 56, 145, 149, 176], "depth": [9, 10, 11, 29, 35, 40, 56, 82, 87, 88, 89, 90, 138, 145, 149, 176], "load": [9, 10, 25, 43, 45, 51, 56, 59, 94, 99, 102, 110, 112, 132, 134, 139, 140, 144, 145, 148, 150, 165, 171, 173, 176, 177], "googl": [10, 16], "colab": 10, "them": [10, 35, 36, 37, 44, 60, 64, 76, 78, 86, 87, 88, 89, 94, 140], "pip": [10, 55], "instal": [10, 42], "git": [10, 55], "github": [10, 38, 42, 55, 67, 81, 90, 91, 92], "com": [10, 16, 32, 36, 55, 67, 81, 90], "egg": [10, 55], "variat": [10, 14, 16, 55, 56, 74, 91, 92, 97, 99, 105, 112, 115, 118, 131, 134, 137, 140, 145, 175, 176, 179, 180], "tv": [10, 14, 37, 55, 56, 74, 91, 92, 97, 99, 105, 112, 115, 118, 131, 134, 137, 140, 145, 175, 176, 179, 180], "3d": [10, 14, 56, 77, 94, 95, 117, 137, 175, 176, 179], "expect": [10, 16, 17, 56, 83, 100, 126, 134, 135, 137, 139, 140, 145, 175, 177, 179], "likelihood": [10, 16, 17, 23, 26, 48, 52, 56, 83, 100, 105, 106, 108, 109, 111, 126, 134, 135, 137, 139, 140, 145, 161, 162, 163, 166, 175, 177, 179], "epll": [10, 17, 44, 56, 126, 134, 135, 137, 139, 140, 145, 175, 177, 179], "limit": [10, 11, 15, 17, 44, 56, 58, 83, 99, 100, 106, 108, 109, 112, 140, 141, 145, 151, 166, 175, 179], "tomographi": [10, 17, 22, 38, 44, 56, 58, 82, 97, 99, 100, 105, 106, 108, 109, 110, 112, 118, 137, 140, 141, 145, 166, 175, 176, 177, 179, 180], "vanilla": [10, 22, 41, 56, 57, 59, 70, 82, 97, 99, 105, 110, 112, 118, 136, 137, 140, 145, 151, 164, 165, 171, 173, 175, 176, 177, 179, 180, 181], "ct": [10, 15, 16, 22, 41, 55, 56, 70, 82, 83, 87, 88, 97, 99, 100, 105, 107, 108, 110, 112, 118, 120, 137, 140, 141, 145, 151, 164, 165, 171, 173, 175, 176, 177, 179, 180], "dpir": [10, 22, 44, 55, 56, 57, 59, 79, 97, 99, 105, 110, 112, 118, 131, 134, 137, 140, 145, 164, 176], "resolut": [10, 22, 41, 56, 57, 59, 70, 82, 85, 89, 97, 99, 105, 110, 112, 113, 118, 136, 137, 140, 143, 145, 164, 165, 168, 171, 173, 176, 181], "condat": [10, 22, 45, 56, 82, 91, 92, 97, 99, 105, 107, 110, 112, 118, 134, 137, 140, 145, 150, 175, 176, 177, 179, 180], "vu": [10, 22, 45, 56, 82, 97, 99, 105, 107, 110, 112, 118, 134, 137, 140, 145, 150, 175, 176, 177, 179, 180], "primal": [10, 22, 39, 41, 45, 49, 56, 70, 82, 87, 88, 91, 92, 97, 99, 101, 105, 107, 110, 112, 118, 120, 134, 137, 140, 145, 150, 151, 164, 165, 171, 173, 175, 176, 177, 179, 180], "dual": [10, 22, 39, 41, 45, 49, 56, 70, 82, 87, 88, 91, 92, 97, 99, 102, 103, 105, 107, 110, 112, 118, 120, 134, 137, 140, 145, 150, 151, 164, 165, 171, 173, 175, 176, 177, 179, 180], "uncertainti": [10, 24, 28, 55, 56, 62, 82, 99, 105, 112, 114, 134, 137, 139, 140, 145, 161, 163, 175, 176, 177, 179], "quantif": [10, 28, 55, 56, 62, 82, 99, 105, 112, 114, 134, 137, 139, 140, 145, 161, 163, 175, 176, 177, 179], "ula": [10, 28, 56, 62, 82, 99, 105, 112, 114, 134, 137, 139, 140, 145, 161, 175, 176, 177, 179], "diffus": [10, 25, 28, 55, 56, 79, 81, 134, 137, 139, 140, 145, 157, 158, 159, 160, 161, 175, 176, 177, 179], "dp": [10, 28, 56, 81, 99, 105, 134, 139, 140, 145, 176, 177, 179], "diffpir": [10, 26, 28, 55, 56, 81, 99, 105, 111, 131, 134, 137, 140, 145, 176, 177, 179], "sure": [10, 27, 33, 42, 56, 57, 59, 71, 72, 73, 75, 93, 134, 135, 140, 145, 147, 164, 165, 176], "neighbor2neighbor": [10, 33, 56, 57, 59, 75, 93, 134, 135, 140, 145, 147, 164, 165, 176], "multipl": [10, 18, 19, 24, 32, 33, 52, 56, 57, 59, 64, 65, 66, 68, 72, 73, 75, 84, 93, 99, 134, 138, 139, 140, 145, 160, 164, 165, 176], "equivari": [10, 33, 46, 56, 57, 59, 61, 65, 82, 84, 99, 105, 110, 112, 134, 140, 142, 145, 164, 165, 167, 171, 173, 176], "mri": [10, 11, 33, 55, 56, 57, 59, 61, 65, 78, 82, 99, 105, 110, 112, 134, 140, 145, 164, 165, 167, 171, 173, 176], "lista": [10, 37, 39, 41, 56, 57, 59, 70, 99, 105, 112, 117, 124, 132, 140, 145, 164, 165, 171, 173, 176, 181], "compress": [10, 41, 43, 56, 57, 59, 70, 90, 99, 105, 112, 117, 124, 132, 140, 145, 164, 165, 171, 173, 176, 181], "equilibrium": [10, 41, 55, 56, 57, 59, 70, 82, 99, 105, 110, 112, 131, 134, 137, 140, 145, 155, 164, 165, 170, 172, 176], "deq": [10, 41, 53, 55, 56, 57, 59, 70, 82, 99, 105, 110, 112, 131, 134, 137, 140, 145, 155, 164, 165, 170, 172, 176], "scan": [10, 41, 56, 70, 87, 88, 99, 107, 112, 120, 137, 140, 145, 151, 164, 165, 171, 173, 176], "auto_examples_python": 10, "auto_examples_jupyt": 10, "brain": 11, "extend": [11, 15, 38, 47], "redund": 11, "dictionari": [11, 19, 29, 35, 36, 37, 40, 49, 97, 101, 107, 118, 119, 120, 121, 122, 125, 164, 165, 171, 172, 173, 180, 181], "doe": [11, 61, 62, 63, 77, 82, 102, 123, 140, 145, 171], "admit": 11, "np": [11, 20, 23, 24, 25, 26, 132, 157], "load_np_url": 11, "t1": 11, "brainweb": 11, "subject": 11, "id": [11, 16, 62], "convent": [11, 94, 133], "c": [11, 37, 39, 51, 72, 80, 81, 90, 102, 130, 131, 132, 134, 139, 148, 150, 154, 156, 175, 179], "height": [11, 58, 81, 87, 88, 100, 142, 151, 169, 179], "width": [11, 58, 81, 87, 88, 100, 142, 151, 169, 179], "volume_data": 11, "brainweb_t1_icbm_1mm_subject_0": 11, "npy": [11, 12, 13, 18, 20, 29], "from_numpi": [11, 25, 26], "output": [11, 12, 13, 19, 20, 21, 25, 26, 36, 37, 45, 63, 76, 78, 79, 81, 82, 83, 85, 87, 88, 93, 94, 97, 99, 100, 101, 102, 108, 126, 129, 130, 136, 143, 147, 149, 164, 165, 166, 168, 170], "list_imag": 11, "90": [11, 16, 24, 25, 26, 29, 35, 36, 38, 44, 84], "108": [11, 16, 26, 36], "figsiz": [11, 25, 179], "suptitl": [11, 25, 179], "groundtruth": [11, 26], "cmap": [11, 179], "viridi": 11, "tight": [11, 179], "fontsiz": [11, 179], "format": [11, 15, 16, 43, 59, 94, 166], "waveletprior": [11, 13, 36, 39], "precis": [11, 16, 49, 84, 97, 104, 140], "widehat": [11, 25, 26, 158, 159], "psi": [11, 13, 94, 95, 117], "_1": [11, 36, 97, 101, 103, 104], "operatornam": [11, 12, 13, 19, 25, 37, 39, 49, 53, 62, 84, 97, 99, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125, 159, 170, 171], "prox": [11, 12, 13, 19, 25, 36, 37, 38, 39, 49, 51, 99, 102, 103, 104, 105, 110, 111, 112, 115, 116, 117, 119, 120, 121, 123, 124, 125, 131, 140, 142, 159], "_": [11, 12, 13, 16, 19, 25, 26, 30, 36, 37, 39, 45, 49, 66, 84, 91, 92, 97, 99, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 125, 134, 158, 159, 166], "cdot": [11, 25, 26, 49, 52, 53, 94, 95, 97, 99, 102, 111, 114, 117, 125, 158, 159], "grow": 11, "cubic": [11, 117], "support": [11, 77, 108, 117, 129], "reason": 11, "db1": [11, 117], "db4": [11, 95, 117], "wavdict": 11, "wvdim": [11, 94, 95, 117], "th": [11, 16, 91, 92, 94, 95, 96, 104, 108, 163], "x_hat": [11, 45], "instead": [11, 26, 47, 60, 62, 64, 75, 76, 78, 86, 87, 88, 89, 92, 123], "seek": 11, "sparsiti": [11, 13], "formal": 11, "sum_": [11, 16, 30, 36, 68, 84, 96], "ell": 11, "l": [11, 18, 30, 46, 79, 85, 86, 91, 92, 98, 162, 163, 166], "lambda_": [11, 25, 36, 159], "psi_": 11, "As": [11, 15, 16, 18, 25, 26, 29, 30, 117], "previous": 11, "lambda_i": 11, "numer": [11, 23, 62, 63, 140, 151, 161, 162, 163], "conveni": [11, 12, 13, 23], "situat": 11, "propos": [11, 15, 16, 26, 37, 62, 63, 84, 100], "combett": 11, "write": [11, 12, 13, 20, 25, 26, 38, 47, 158, 159], "equat": [11, 12, 13, 16, 25, 26, 36, 39, 45, 49, 53, 97, 117, 119, 120, 121, 122, 123, 124, 125, 158, 159, 170], "align": [11, 19, 25, 26, 39, 45, 53, 119, 120, 121, 122, 123, 124, 125, 158, 159, 171], "text": [11, 12, 13, 36, 37, 68, 71, 73, 84, 97, 102, 103, 105, 125, 132, 134, 139, 152, 175], "ldot": 11, "quad": [11, 16, 45, 49, 68, 71, 73, 97, 144, 145], "x_": [11, 19, 23, 27, 36, 37, 39, 45, 49, 53, 97, 101, 107, 119, 120, 121, 122, 123, 124, 125, 140, 159, 163, 171], "omega_": 11, "g_": [11, 36], "z_": [11, 19, 23, 39, 49, 53, 97, 107, 119, 120, 121, 163, 171], "turn": [11, 15, 26, 44, 53, 84, 160, 170, 171], "sequenc": [11, 25, 81, 150, 158, 159], "x_n": 11, "mathbb": [11, 45, 49, 62, 63, 97, 132, 134, 139, 166], "origin": [11, 12, 13, 16, 26, 36, 44, 71, 80, 82, 157, 159, 168], "let": [11, 25, 26, 84], "sever": 11, "ll": [11, 26], "list_wv": [11, 95], "haar": 11, "db2": [11, 94], "db3": 11, "non_linear": [11, 94, 95], "list_prox": 11, "modulelist": [11, 29, 35, 36, 37, 38, 39, 40], "element": [11, 36, 40, 44, 48, 64, 76, 94, 129, 132, 138, 143, 148, 174], "z_p": 11, "repeat": [11, 38], "len": [11, 25], "p_p": 11, "x_cur": 11, "step": [11, 12, 13, 16, 18, 19, 20, 21, 23, 27, 29, 44, 45, 49, 53, 85, 93, 97, 101, 102, 103, 107, 118, 120, 123, 128, 151, 159, 162, 163, 164, 170, 171, 172, 173], "x_prev": [11, 19, 97, 101], "axi": [11, 25], "reflect": [11, 129, 130, 136, 143, 168], "readi": [11, 26], "increas": [11, 69, 83, 93, 100], "better": [11, 54], "rel": [11, 140], "criterion": [11, 91, 92, 97, 101, 102, 103, 115, 140], "rel_crit": 11, "linalg": 11, "flatten": [11, 24, 27, 94, 108, 117, 174], "readili": [11, 25, 26], "waveletdictdenois": 11, "586": [11, 14, 24, 28, 56], "demo_3d_wavelet": [11, 14, 56], "epsilon": [12, 13, 15, 23, 26, 72, 91, 96, 137, 146, 152, 153], "realiz": [12, 13, 25, 68, 142, 165], "goal": [12, 13], "recov": [12, 13], "load_degrad": [12, 13, 18, 20, 29], "plot_curv": [12, 13, 19, 21], "kernel_index": [12, 13, 18, 20], "chose": [12, 13, 18], "among": [12, 13, 18, 47, 49, 117], "levin09": [12, 13, 18], "mat": [12, 13, 18], "kernel_torch": [12, 13, 18, 20], "index": [12, 13, 18, 20, 126], "52mib": 12, "repres": [12, 13, 54, 83, 97, 100, 129, 143, 174], "tau": [12, 13, 19, 32, 39, 71, 72, 73, 97, 120], "tvprior": [12, 92], "n_it_max": [12, 91, 92, 115], "2000": 12, "cost_tv": 12, "x_tv": 12, "gamma": [12, 13, 19, 25, 31, 32, 36, 37, 45, 67, 72, 73, 92, 94, 97, 99, 102, 103, 104, 105, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 124, 125, 134, 136, 140, 146, 147, 171], "cost_tv_prox": 12, "1145": 12, "our": [12, 13, 19, 23, 26, 36, 37, 39, 42, 55, 120], "toward": [12, 13], "img": [12, 13, 16, 19, 21, 23, 24, 25, 26, 27, 58, 179], "underset": [12, 13, 16, 39, 45, 49, 83, 91, 92, 94, 95, 97, 100, 102, 103, 105, 120, 140, 144, 145], "dx": [12, 37, 91, 92, 115], "regularis": [12, 13, 25, 39, 49, 63, 97, 101, 118, 172, 173], "redefin": [12, 13, 38], "faster": [12, 13, 29, 42], "300": [12, 13, 43, 51], "x_gt": [12, 13, 19, 21, 97, 101, 170], "x_model": [12, 13, 19, 21], "compute_metr": [12, 13, 19, 21, 97, 101, 170], "gt": [12, 13, 19, 21, 36, 37], "recon": [12, 13, 19, 21, 26, 36, 37], "041": [12, 14, 36, 56], "demo_tv_minimis": [12, 14, 56], "blur": [13, 20, 23, 25, 35, 40, 129, 131, 136, 140, 143, 155], "regnam": [13, 39, 45, 49, 97, 104, 110, 112, 113, 116, 117, 120], "cost_wv": 13, "x_wv": 13, "cost_wv_prox": 13, "1830": 13, "51": [13, 16, 26, 27, 29, 35, 36, 63], "induc": 13, "clamp": 13, "valid": [13, 44, 52, 99, 112, 129, 130, 136, 143], "139": [13, 16, 26], "68e": 13, "60": [13, 16, 24, 25, 26, 29, 30, 35, 36, 37, 38, 40], "92": [13, 15, 16, 26, 29, 36, 37], "758": [13, 14, 56], "demo_wavelet_prior": [13, 14, 56], "385": [14, 20], "whole": [15, 16, 30, 31, 32, 93, 100, 161], "either": [15, 44, 47, 49, 53, 59, 81, 84, 90, 94, 95, 97, 117, 118, 172, 173, 179], "sim": [15, 26, 27, 61, 68, 71, 72, 73, 84, 132, 137, 146, 148, 152, 153, 163, 166], "white": [15, 25, 26, 130, 131, 136, 140], "eplldenois": 15, "default": [15, 18, 20, 44, 47, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 79, 81, 82, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 107, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 132, 140, 143, 145, 148, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 179, 181], "pretrain": [15, 16, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 32, 35, 40, 47, 52, 55, 75, 79, 81, 82, 83, 85, 89, 90, 98, 100, 108, 157, 159, 165], "mixtur": [15, 16, 83, 100, 126], "estimt": 15, "mio": [15, 44], "extract": [15, 16, 32, 36, 83, 100], "bsds500": [15, 44, 83, 100], "estim": [15, 16, 19, 25, 26, 32, 44, 45, 49, 71, 72, 73, 75, 81, 83, 96, 100, 107, 111, 119, 120, 121, 122, 126, 134, 138, 140, 159, 161, 163, 164, 175], "gmm": [15, 16, 83, 100, 126], "includ": [15, 45, 52, 59, 82, 126, 144], "test_img": [15, 16], "patch_siz": [15, 16, 58, 83, 90, 100, 108, 109], "gmm_bsds_color2": 15, "pt": [15, 16, 26, 29, 83, 100, 108], "7m": [15, 29, 30], "544k": 15, "57mb": 15, "97m": 15, "1mb": [15, 16, 20, 26], "57": [15, 16, 25, 26, 29, 31, 35, 36, 39], "4m": [15, 26, 29, 40], "85": [15, 16, 26, 29, 35, 36, 38, 40, 157], "8mb": [15, 20, 26, 30, 32], "9m": [15, 20, 29, 40], "104mb": 15, "4mb": [15, 19, 21, 29], "25": [15, 16, 23, 25, 26, 29, 31, 32, 36, 37, 38, 40, 44, 90, 159], "255": [15, 20, 25, 26, 27, 44, 90], "observ": [15, 16, 48, 66, 99, 100, 107, 119, 121, 140, 145], "choic": [15, 16, 21, 45, 48, 49, 71, 72, 73, 83, 98, 100], "beta": [15, 25, 26, 29, 35, 36, 37, 38, 39, 40, 49, 83, 100, 107, 111, 119, 120, 121, 138, 158, 159], "half": [15, 16, 18, 29, 35, 83, 98, 100, 118, 123, 159, 172, 173], "quadrat": [15, 16, 18, 29, 35, 83, 98, 100, 118, 123, 159, 172, 173], "split": [15, 16, 18, 29, 35, 39, 40, 49, 59, 65, 67, 69, 83, 91, 92, 98, 100, 102, 107, 118, 120, 121, 123, 159, 172, 173], "hyperparamet": [15, 23, 26, 27, 36, 37, 48, 49, 71, 94, 95, 98, 134, 140, 157, 158, 159], "chosen": [15, 21, 25, 35, 40, 59, 68, 84, 90, 97, 140, 141, 165], "separ": 15, "x_out": 15, "5000": [15, 99, 105], "psnr_ob": 15, "psnr_recon": 15, "clip": [15, 16, 23, 26, 45, 147, 160, 161, 162, 163, 165, 179], "constant": [15, 26, 35, 46, 71, 72, 73, 91, 92, 106, 128, 138, 140, 141, 158, 161, 162, 163], "grid": [15, 16, 149, 168, 179], "search": [15, 16], "160": [15, 16, 26, 36], "320": [15, 142], "927": [15, 17, 56], "demo_epl": [15, 17, 56], "mathrm": [16, 132, 148, 166], "discret": [16, 132, 142], "equispac": 16, "eq": [16, 45, 49, 84, 97], "min_prob": [16, 45, 49, 97], "datafid": [16, 45, 48, 49, 53, 97, 99, 103, 105, 106, 111], "regularizi": 16, "explicitli": 16, "p_i": [16, 83, 100, 109], "wa": [16, 26, 50, 77, 78, 82, 89, 90, 162], "p_": [16, 23, 27, 52, 114, 166], "densiti": [16, 111], "priori": 16, "possibli": [16, 23, 46, 66, 138, 161], "contrast": 16, "zoran": [16, 100], "weiss": [16, 100], "aris": 16, "simpli": [16, 25, 26, 37, 47, 51, 154, 156], "refer": [16, 25, 44, 48, 61, 141, 175], "normal": [16, 25, 26, 36, 37, 74, 82, 90, 91, 92, 105, 106, 108, 111, 114, 140, 141, 147, 151, 166, 175], "flow": [16, 108, 166], "veri": [16, 26], "neg": [16, 27, 52, 100, 106, 108, 109, 111, 126, 147, 161, 162, 163], "probail": 16, "push": [16, 166], "distribut": [16, 23, 24, 27, 32, 48, 52, 83, 100, 114, 135, 139, 157, 158, 159, 160, 161, 162, 163, 166], "under": [16, 36, 37], "invert": [16, 108, 119, 120, 121], "patchdataset": 16, "train_normalizing_flow": 16, "logpoissonnois": [16, 106], "logpoissonlikelihood": 16, "patchprior": 16, "load_torch_url": 16, "tqdm": [16, 25, 26], "lodopab": [16, 141], "ct_toi": 16, "ct_small": 16, "train_img": 16, "hidden": [16, 44, 81, 90, 108], "neuron": [16, 108], "subnetwork": [16, 108], "compon": [16, 26, 83, 100, 126], "fit": [16, 126], "patchnr_subnets": 16, "patchnr_epoch": 16, "patchnr_batch_s": 16, "patchnr_learning_r": 16, "epll_num_compon": 16, "epll_max_it": 16, "epll_batch_s": 16, "10000": 16, "retrain": 16, "just": [16, 135], "On": 16, "coupl": 16, "model_patchnr": 16, "sub_net_s": [16, 108], "patchnr_dataload": 16, "drop_last": 16, "normalizing_flow": [16, 108], "model_epl": 16, "n_compon": [16, 83, 100, 126], "epll_dataload": 16, "patchnr_lodopab_small2": 16, "gmm_lodopab_small2": 16, "patchnr_prior": 16, "epll_prior": 16, "negative_log_likelihood": [16, 100], "drive": 16, "uc": 16, "export": 16, "1z2us9zhjdgolu6r1jee0s2bbej2xv5": 16, "patchnr_lodopab_smal": [16, 108], "739k": 16, "9k": 16, "19mb": 16, "depend": [16, 23, 48, 49, 53, 81, 97, 151, 159, 161], "domain": [16, 36, 37, 50, 77], "suggest": [16, 25, 26, 55, 102], "Then": [16, 84], "mu": [16, 106, 126, 141], "362": 16, "n0": [16, 106, 141], "num_angl": 16, "linspac": [16, 24, 25, 26, 151, 157], "fbp": 16, "optim_step": 16, "200": [16, 19, 26, 36, 37, 39, 83, 100], "lr_variational_problem": 16, "minimize_variational_problem": 16, "lam": 16, "progress_bar": 16, "zero_grad": 16, "set_descript": 16, "final": [16, 50, 79, 81, 82, 85, 89, 90], "both": [16, 21, 36, 37, 38, 44, 150, 151], "roughli": 16, "choosen": 16, "fine": 16, "tune": [16, 21, 125], "lam_patchnr": 16, "120": [16, 26, 36], "lam_epl": 16, "recon_patchnr": 16, "recon_epl": 16, "psnr_fbp": 16, "psnr_patchnr": 16, "psnr_epll": 16, "00it": [16, 36, 38], "91it": [16, 30, 36, 38], "09": [16, 20, 26, 29, 30, 33, 36, 37, 56, 60], "92it": [16, 30, 36, 38], "05it": [16, 29, 36, 37, 38, 39], "08it": [16, 29, 30, 37], "97it": [16, 36, 38], "34": [16, 20, 26, 29, 33, 35, 36, 41, 56], "82it": [16, 36, 38], "37": [16, 25, 26, 29, 36, 38, 39, 41, 56], "41": [16, 26, 29, 36, 39], "42": [16, 26, 29, 32, 35, 36], "95it": [16, 36, 37, 38], "89it": [16, 36, 38, 40], "49": [16, 20, 26, 29, 30, 33, 36], "52": [16, 26, 29, 32, 36, 37, 40], "53": [16, 25, 26, 29, 31, 36, 39, 40], "55": [16, 26, 29, 35, 36, 38, 40, 41, 56], "63": [16, 20, 25, 26, 29, 35, 36, 40], "65": [16, 26, 29, 35, 36, 38, 39, 40], "68": [16, 26, 29, 35, 36, 37, 39, 40], "02it": [16, 30, 36, 39], "69": [16, 26, 29, 35, 36, 40], "73": [16, 25, 26, 29, 35, 36], "74": [16, 26, 29, 30, 35, 36, 40], "76": [16, 20, 26, 29, 35, 36, 37, 39, 40], "07it": [16, 29, 37, 38, 39], "79": [16, 26, 29, 31, 32, 35, 36], "81": [16, 24, 26, 29, 35, 36], "82": [16, 26, 29, 35, 36, 39], "84": [16, 26, 29, 35, 36, 37, 38, 40], "04it": [16, 27, 37], "89": [16, 26, 29, 30, 35, 36], "93": [16, 25, 26, 29, 35, 36], "99it": [16, 30, 36], "97": [16, 18, 20, 25, 26, 27, 29, 30, 35, 36], "98": [16, 20, 26, 27, 29, 30, 36, 37], "99": [16, 19, 26, 29, 36, 38, 39], "01it": [16, 36], "101": [16, 26], "102": [16, 26, 36], "103": [16, 26], "104": [16, 20, 26, 36, 40], "105": [16, 26], "12it": [16, 30, 37], "107": [16, 26], "112": [16, 26, 36], "113": [16, 26], "115": [16, 26], "116": [16, 26, 36], "03it": [16, 36, 37], "117": [16, 26], "118": [16, 26, 30, 33, 36, 56], "119": [16, 26], "121": [16, 20, 25, 26], "122": [16, 25, 26, 36], "123": [16, 26], "124": [16, 26, 36], "125": [16, 25, 26], "126": [16, 20, 26, 36, 40], "127": [16, 26], "129": [16, 26], "130": [16, 26, 36, 40], "131": [16, 26, 35], "132": [16, 26, 36], "90it": [16, 29, 36, 38], "133": [16, 26, 40], "134": [16, 20, 26, 36], "136": [16, 26, 36, 39], "137": [16, 26], "88it": [16, 27, 30, 32, 36, 38, 40], "140": [16, 26, 29, 36], "79it": [16, 24, 25, 36, 38], "141": [16, 26], "142": [16, 26, 36], "143": [16, 26], "144": [16, 26, 36], "145": [16, 26], "146": [16, 26, 36], "147": [16, 26], "148": [16, 26, 36], "149": [16, 20, 26], "150": [16, 26, 29, 36], "151": [16, 26], "152": [16, 26, 36], "153": [16, 26], "154": [16, 26, 36, 40], "09it": [16, 37], "155": [16, 26], "156": [16, 26, 36], "157": [16, 26], "158": [16, 26, 36, 91, 92], "159": [16, 26], "161": [16, 26], "162": [16, 26, 36], "163": [16, 26], "164": [16, 26, 36], "165": [16, 26], "166": [16, 20, 26, 36], "167": [16, 26], "168": [16, 20, 26, 36], "169": [16, 26, 36, 41, 56], "170": [16, 26, 36], "171": [16, 26, 40], "172": [16, 26, 36], "173": [16, 26, 40], "174": [16, 26, 36], "176": [16, 20, 26, 35, 36], "177": [16, 26], "178": [16, 26, 35, 36], "179": [16, 26, 40], "180": [16, 26, 36, 90, 151], "181": [16, 26], "182": [16, 26, 36], "183": [16, 26], "184": [16, 20, 26, 36], "185": [16, 26], "186": [16, 26, 36], "187": [16, 26], "188": [16, 26, 36, 40], "85it": [16, 30, 36, 38], "189": [16, 26], "190": [16, 26, 36], "191": [16, 26], "192": [16, 26, 36], "193": [16, 26, 35], "194": [16, 26, 36, 40], "195": [16, 26], "196": [16, 26, 36], "197": [16, 26], "198": [16, 26, 36], "199": [16, 26], "25it": [16, 29, 30, 37], "38it": [16, 29, 30, 35], "37it": [16, 29, 36, 38], "46it": [16, 29, 35], "11it": [16, 37], "32it": [16, 29, 37], "482": [16, 17, 56], "demo_patch_priors_ct": [16, 17, 56], "409": 17, "patch": [17, 43, 44, 56, 58, 83, 90, 99, 100, 106, 108, 109, 112, 134, 135, 137, 139, 140, 141, 145, 151, 166, 175, 177, 179], "zuo": [18, 98], "gu": [18, 98], "proceed": [18, 98], "ieee": [18, 38, 64, 68, 71, 72, 73, 77, 92, 98, 138, 149], "confer": [18, 20, 98], "vision": [18, 98], "recognit": [18, 98], "pp": [18, 91, 92, 98], "3929": [18, 98], "3938": [18, 98], "drunet": [18, 24, 35, 40, 44, 47, 85, 98, 157, 159], "get_dpir_param": 18, "93mib": 18, "hdf5": [18, 20, 35, 36, 37, 43, 57], "folder": [18, 20, 35, 36, 37, 57, 59], "dir": [18, 20, 43], "dinv_dataset0": [18, 20], "h5": [18, 20, 43], "hq": [18, 29, 35, 49, 98, 118, 123, 159, 170, 172, 173], "altern": [18, 21, 25, 26, 50, 107, 119], "wrapper": [18, 54], "rapidli": 18, "do": [18, 44, 94, 97, 112], "plot_only_first_batch": [18, 20, 164], "By": [18, 20, 61, 65, 66, 67, 69, 70, 97, 99, 107, 111, 112, 113, 140, 143, 145, 161, 162, 163, 168], "563680648803711": 18, "96754264831543": 18, "788": [18, 22, 56], "demo_pnp_dpir_deblur": [18, 22, 56], "camera": [19, 44, 150], "dncnn": [19, 21, 27, 29, 35, 40, 44], "optim_iter": [19, 36, 37, 38, 39, 97, 101, 118, 119, 120, 121, 122, 123, 124, 125, 171], "optimiter": [19, 97, 118, 119, 120, 121, 122, 123, 124, 125, 172, 173], "definit": [19, 26], "subclass": [19, 38, 60, 64, 76, 78, 86, 87, 88, 89], "v_k": 19, "x_k": [19, 27, 36, 37, 39, 45, 49, 53, 97, 101, 107, 119, 120, 122, 123, 124, 125, 163, 171], "z_k": [19, 27, 39, 49, 53, 97, 107, 119, 120, 121, 171], "u_k": [19, 39, 45, 101, 120, 123, 124], "2x_": [19, 39], "fenchel": [19, 120], "legendr": [19, 120], "conjug": [19, 99, 112, 120, 127, 132, 136, 140, 151, 174], "cviter": 19, "g_step": [19, 29, 35, 36, 37, 38, 39, 40], "gstepcv": 19, "f_step": [19, 29, 35, 36, 37, 38, 39, 40], "fstepcv": 19, "cur_data_fidel": [19, 38, 101, 107, 119, 120, 121, 122], "cur_prior": [19, 38, 101, 107, 119, 120, 121, 122, 125], "cur_param": [19, 101, 107, 119, 120, 121, 122, 125], "param": [19, 20, 23, 38, 101, 161], "dict": [19, 29, 97, 101, 107, 118, 119, 120, 121, 122, 125, 164, 165, 170, 172, 173, 180, 181], "datafidel": [19, 38, 49, 52, 96, 97, 101, 102, 103, 105, 106, 107, 111, 112, 118, 119, 120, 121, 122, 158, 159, 161, 162, 163, 172, 173], "relat": [19, 36, 37], "interest": [19, 25, 97], "updat": [19, 20, 25, 26, 38, 39, 42, 49, 97, 101, 107, 119, 120, 121, 122, 165], "z_prev": 19, "f_fn": [19, 97, 107, 118, 172, 173], "has_cost": [19, 97, 107], "reli": [19, 49, 112, 140], "u_": [19, 39, 45, 101, 119, 120, 121, 123, 124], "moreau": [19, 52, 99, 112, 114, 123], "math": [19, 20, 25, 37, 38, 70, 99, 112, 114, 119, 121, 123, 124], "phyic": 19, "2ax_": 19, "kei": [19, 26, 49, 90, 97, 171], "prox_d_conjug": [19, 99], "barbara": 19, "jpeg": 19, "resize_mod": [19, 21, 177], "resiz": [19, 21, 29, 177], "single_pixel": 19, "frequenc": [19, 165], "condatvu": 19, "lipschitz": [19, 44, 46, 91, 92, 111, 140, 162, 163], "download_lipschitz": [19, 27, 82], "dncnn_sigma2_lipschitz_grai": 19, "55m": [19, 21], "608k": 19, "22mb": 19, "338": [19, 22, 56], "demo_pnp_custom_optim": [19, 22, 56], "plug": [20, 22, 23, 26, 27, 40, 44, 45, 55, 56, 92, 98, 110, 159, 162, 163, 180], "gspnp": 20, "hurault": [20, 55], "leclair": 20, "papadaki": 20, "plai": [20, 22, 23, 27, 40, 44, 45, 55, 56, 92, 98, 110, 159, 162, 163, 180], "represent": 20, "get_gspnp_param": 20, "kernels_12": 20, "down": 20, "standart": [20, 21, 118], "54it": [20, 29, 30, 36, 38], "solv": [20, 25, 26, 35, 39, 45, 53, 55, 80, 91, 92, 97, 101, 120, 127], "use_bicubic_init": 20, "bicub": [20, 136, 143, 168], "necessarili": [20, 107], "thu": [20, 38, 80, 94, 95, 142, 151, 161, 162, 163], "denoiser_nam": 20, "gsdrunet": [20, 44], "intermedi": [20, 76, 93], "finish": [20, 23, 24, 27, 107], "custom_output": [20, 38], "get_output": [20, 38, 97], "gradientstep": 20, "gsdrunet_torch": 20, "680k": 20, "93mb": 20, "91m": 20, "2m": [20, 26, 29, 132, 148], "6m": [20, 29, 40], "114mb": [20, 26], "121mb": [20, 26], "5m": [20, 40], "130mb": [20, 26], "111mb": 20, "846": 20, "462": 20, "215": 20, "094": 20, "084": [20, 37], "358": 20, "623": 20, "960": 20, "364": 20, "828": [20, 35], "345": 20, "911": [20, 35], "520": 20, "851": [20, 39, 41, 56], "566": 20, "309": 20, "078": [20, 37], "870": 20, "683": 20, "515": 20, "227": 20, "994": [20, 30], "895": 20, "805": 20, "725": 20, "652": 20, "587": 20, "528": 20, "475": 20, "428": 20, "347": 20, "312": 20, "281": 20, "253": [20, 28], "205": [20, 40], "098": 20, "088": 20, "079": 20, "058": 20, "052": [20, 36], "047": [20, 36], "042": [20, 36], "038": 20, "034": 20, "031": 20, "022": 20, "020": 20, "018": [20, 56], "016": 20, "015": [20, 39], "010": 20, "009": 20, "008": 20, "007": 20, "006": 20, "005": 20, "004": 20, "003": [20, 38], "002": [20, 38], "001": [20, 23, 62, 63, 72, 73, 99, 112, 140, 145, 161, 162, 163, 166], "000": [20, 34], "opt": 20, "hostedtoolcach": 20, "x64": 20, "lib": 20, "python3": 20, "site": 20, "packag": [20, 46, 49, 51, 52, 53, 77], "cm": 20, "494": 20, "runtimewarn": 20, "invalid": 20, "encount": [20, 93], "cast": 20, "xx": 20, "astyp": 20, "uint8": 20, "nan": [20, 93], "0601496696472168": 20, "1836217893424801": 20, "608": [20, 22, 56], "demo_red_gspnp_sr": [20, 22, 56], "shepplogan": 21, "circl": [21, 38, 151], "attent": [21, 81, 90], "crucial": [21, 45], "amount": [21, 25, 48, 163], "inde": [21, 140], "implicitli": [21, 45, 49, 91, 92], "control": [21, 23, 25, 27, 46, 48, 71, 93, 98, 158, 163], "dncnn_sigma2_grai": 21, "832k": 21, "43mb": 21, "638": [21, 22, 56], "demo_vanilla_pnp": [21, 22, 56], "372": 22, "unadjust": [23, 27, 52, 162, 163], "langevin": [23, 27, 55, 162, 163], "preconula": 23, "advantag": 23, "acceler": [23, 29, 35, 78, 97, 101, 142, 162, 170], "5x5": [23, 25], "box": [23, 161, 162, 163], "order": [23, 24, 25, 26, 61, 74, 91, 140, 150, 157], "markov": [23, 161, 162, 163], "previou": [23, 25, 47, 97, 101, 119, 120, 121, 161], "next": [23, 25, 44, 101], "account": [23, 42, 46, 79], "usv": 23, "modifi": [23, 47], "eta": [23, 26, 27, 68, 97, 140, 145, 157, 158, 162, 163], "ax_": 23, "alpha": [23, 25, 26, 27, 68, 81, 85, 158, 159, 161, 162, 163], "nabla": [23, 27, 37, 45, 49, 52, 91, 92, 112, 113, 114, 115, 122, 124, 125, 163], "sqrt": [23, 24, 25, 26, 27, 37, 91, 92, 96, 132, 150, 158, 159, 163, 175], "eta_0": 23, "vrv": 23, "diagon": [23, 63, 139], "entri": [23, 49, 71, 72, 73, 96, 126, 132, 139, 140, 145, 150, 163], "s_": 23, "issu": [23, 42, 55], "algebra": 23, "product": [23, 63, 140, 144, 145], "effici": [23, 51, 132, 134, 140, 144, 145, 150, 151], "trivial": [23, 129, 138, 139], "thei": [23, 37, 44, 46, 47, 53, 97, 112, 157], "matric": [23, 126, 132], "pulaiter": 23, "noise_std": 23, "x_bar": 23, "y_bar": 23, "u_adjoint": [23, 134], "pow": 23, "randn_lik": [23, 25, 26, 63], "sigma2_nois": 23, "lhood": 23, "lprior": 23, "grad": [23, 26, 99, 105, 112, 113, 114, 116], "montecarlo": [23, 160, 162, 163], "care": [23, 60, 64, 76, 78, 86, 87, 88, 89, 159], "procedur": [23, 39, 93], "calcul": [23, 99, 104, 112, 113, 116], "varianc": [23, 24, 25, 27, 52, 160, 161, 162, 163], "thin": [23, 160, 161, 162, 163], "burnin": [23, 160], "interfac": [23, 49], "user": [23, 49, 53, 59, 79, 81, 82, 85, 89, 90, 118, 135, 143, 172, 173], "1e3": [23, 161], "burnin_ratio": [23, 160, 161, 162, 163], "score": [23, 26, 27, 114], "scoreprior": [23, 27, 52, 161, 162, 163], "sigma_d": 23, "approx": [23, 26, 27, 48, 63], "left": [23, 25, 27, 30, 32, 36, 52, 53, 71, 72, 73, 99, 102, 114, 117, 132, 140, 145, 148, 159, 163, 170], "right": [23, 25, 27, 30, 32, 36, 52, 53, 71, 72, 73, 99, 102, 114, 132, 140, 145, 148, 159, 163, 170], "median": [23, 45, 86], "strength": [23, 27, 125, 141], "medianfilt": [23, 45], "1e2": 23, "pula": 23, "posterior": [23, 24, 26, 27, 52, 157, 158, 159, 161, 162, 163], "compar": [23, 24, 27, 170], "signific": [23, 42], "evid": 23, "easi": [23, 55], "wherea": [23, 25, 26, 45, 132, 150, 155], "ula_mean": 23, "ula_var": 23, "pula_mean": 23, "pula_var": 23, "464": 23, "74it": [23, 25, 36, 38, 39], "mont": [23, 27, 44, 71, 72, 73, 84, 160, 161, 162, 163], "carlo": [23, 27, 44, 71, 72, 73, 84, 160, 161, 162, 163], "417": 23, "308": [23, 28, 56], "demo_custom_kernel": [23, 28, 56], "arxiv": [24, 61, 62, 63, 66, 75, 82, 84, 87, 88, 132, 136, 157, 158, 159, 162, 163], "pdf": [24, 61, 75], "2209": [24, 158], "11888": 24, "known": [24, 103, 106], "variou": [24, 32, 44, 52], "diff": 24, "etab": [24, 157], "ab": [24, 25, 27, 62, 63, 66, 82, 84, 87, 88, 101, 132, 136, 150, 157, 158, 159, 162, 163], "sum": [24, 26, 27, 37, 49, 107, 109, 117, 150, 174], "45it": [24, 29, 35, 38], "give": [24, 99, 105], "diffusionsampl": [24, 52], "fulli": [24, 29, 30, 31, 32, 76, 93], "fledg": 24, "var": [24, 27, 161], "std": [24, 27], "dev": [24, 27], "32e": 24, "55e": 24, "demo_ddrm": [24, 28, 56], "tutori": [25, 26, 53, 170], "revisit": 25, "zhou": 25, "butterfli": [25, 26], "best": [25, 26, 31, 32, 68], "256x256": [25, 26], "x_true": [25, 26], "sigma_nois": 25, "revers": [25, 26], "decreas": [25, 26, 97, 126, 157, 158, 159], "mathbf": [25, 26, 45, 158, 159], "_t": [25, 26, 158, 159], "overlin": [25, 26, 144, 158, 159], "rho_t": [25, 159], "varepsilon": [25, 26, 158, 159], "zeta": [25, 159], "poissonlikelihood": 25, "leq": [25, 102, 120, 124, 125], "posit": [25, 32, 45, 49, 72, 73, 90, 111, 147], "detail": [25, 26, 39, 44, 45, 53, 62, 63, 67, 72, 73, 79, 81, 82, 83, 85, 89, 90, 91, 92, 95, 97, 98, 100, 117, 118, 127, 141, 164, 165, 168, 170, 172, 173, 179], "later": [25, 26], "section": 25, "condit": [25, 30, 81, 159], "author": [25, 26, 44, 68, 81, 90], "ho": [25, 44, 81], "diffunet": [25, 26, 44], "large_model": [25, 26, 81], "befor": [25, 26, 39, 63, 80, 90, 101, 118, 147, 172, 173, 181], "being": 25, "abl": [25, 26], "timestep": [25, 26, 81, 158, 159], "dure": [25, 26, 38, 93, 97, 152], "get_alpha": 25, "beta_start": [25, 26, 81, 159], "beta_end": [25, 26, 81, 159], "num_train_timestep": [25, 26, 81, 159], "float32": [25, 26, 29, 35, 36, 37, 39, 40, 81, 132, 150, 151, 154, 156], "alphas_cumprod": 25, "cumprod": [25, 26], "demo_diffpir": [25, 28, 56], "sigma_t": [25, 26], "find_nearest": [25, 81, 159], "arrai": [25, 81, 157, 159], "asarrai": 25, "idx": 25, "argmin": [25, 81, 102, 103, 105, 159], "arbitrari": [25, 26, 94], "x_noisi": 25, "den": 25, "librari": [25, 35, 36, 37, 38, 40, 42, 50, 77, 108, 165], "meaning": 25, "y_denois": 25, "carefulli": 25, "simplic": [25, 35, 40], "x_prox": [25, 51], "last": [25, 101, 139], "firstli": 25, "effect": [25, 83, 100, 109, 168], "residu": [25, 26, 76, 90, 93, 97, 161], "assum": [25, 26, 61, 81, 102, 131, 162, 163], "usual": [25, 26], "why": [25, 26], "rescal": [25, 26, 179], "x_prox_scal": 25, "y_scale": 25, "t_i": 25, "ep": [25, 30, 31, 32, 60], "notic": [25, 102], "secondli": 25, "combin": [25, 44, 47, 159], "x_sampled_sc": 25, "x_sampl": 25, "appropri": [25, 84, 94, 105], "diffusion_step": 25, "rho": [25, 26], "seq": [25, 26], "rcparam": 25, "font": 25, "xlabel": 25, "ylabel": 25, "eventu": 25, "no_grad": [25, 61], "curr_sigma": 25, "x0": [25, 26, 38, 140], "next_sigma": 25, "t_im1": 25, "77it": [25, 36, 37, 38, 39], "75it": [25, 32, 36, 38, 39], "226": [25, 28, 56], "introduc": [26, 50, 77, 78, 82, 89, 90, 162], "chung": 26, "visual": [26, 35, 36, 37, 38, 40, 164, 165], "progress": [26, 80, 126, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "addition": [26, 168], "addit": [26, 49, 51, 62, 68, 79, 85, 97, 105, 118, 172, 173], "awgn": 26, "pixelwis": [26, 139], "pre": [26, 45, 53], "name": [26, 39, 95, 117, 118, 172, 173], "ffhq": [26, 44, 81], "human": 26, "face": 26, "nevertheless": 26, "suffici": [26, 30, 97], "diffusion_ffhq_10m": 26, "357m": 26, "536k": 26, "48mb": 26, "59m": 26, "7mb": [26, 30], "6mb": [26, 27], "1m": [26, 29], "103mb": 26, "3m": [26, 29], "109mb": 26, "117mb": 26, "119mb": 26, "124mb": 26, "123mb": 26, "107m": 26, "127mb": 26, "119m": 26, "125mb": 26, "132m": 26, "145m": 26, "157m": 26, "128mb": 26, "169m": 26, "182m": 26, "129mb": 26, "195m": 26, "208m": 26, "132mb": 26, "220m": 26, "233m": [26, 29], "246m": 26, "258m": 26, "118mb": 26, "269m": 26, "279m": 26, "292m": 26, "304m": 26, "316m": 26, "110mb": 26, "328m": 26, "339m": 26, "115mb": 26, "352m": 26, "beta_t": 26, "beta_": 26, "rm": 26, "alpha_t": 26, "bar": [26, 159], "prod_": 26, "alpha_j": 26, "alwai": [26, 49, 150], "hereaft": 26, "_0": 26, "reparametr": 26, "trick": [26, 166], "get_beta": 26, "retriev": [26, 96, 125, 144, 148], "compute_alpha": 26, "index_select": 26, "nabla_": [26, 96, 105, 158], "a_t": [26, 158], "b_t": [26, 158], "tild": [26, 130, 132, 134, 136, 139, 140, 143, 145, 147, 151, 158], "q": [26, 101], "sigmat": 26, "xt": 26, "x0_t": 26, "bay": 26, "rule": [26, 97, 99], "former": [26, 47, 60, 64, 76, 78, 86, 87, 88, 89], "tweedi": [26, 27, 52, 114], "formula": [26, 27, 52, 99, 112, 114, 132, 136, 140, 144, 145, 151], "latter": [26, 59, 60, 64, 76, 78, 86, 87, 88, 89], "intract": 26, "theorem": [26, 53, 170], "remark": 26, "hat": [26, 30, 61, 66, 68, 74], "sigma_i": [26, 155], "differenti": [26, 49, 61, 99, 111, 112, 113, 120, 140, 145, 158, 162, 163], "enable_grad": 26, "grad_ll": 26, "autograd": 26, "visit": 26, "everi": [26, 60, 64, 76, 78, 80, 86, 87, 88, 89, 165], "backpropag": [26, 62, 63, 77, 108], "ddpm": 26, "im": 26, "There": [26, 32, 106], "caveat": 26, "ancestr": 26, "ddim": [26, 158], "sampler": [26, 52, 160, 161, 162, 163], "One": [26, 36], "freeli": 26, "nfe": 26, "advis": 26, "actual": [26, 107], "static": [26, 91, 92, 94], "ell_2": [26, 39, 74, 98, 100, 102, 103, 105, 140], "simeq": 26, "With": 26, "mind": 26, "num_step": 26, "skip": [26, 93], "seq_next": 26, "time_pair": 26, "x_t": [26, 159], "x0_pred": 26, "next_t": 26, "at_next": 26, "call": [26, 45, 51, 52, 53, 60, 64, 76, 78, 86, 87, 88, 89, 92, 101, 107, 140, 154, 156, 164, 165, 166], "aux_x": 26, "option": [26, 49, 93, 97, 101, 111, 129, 130, 136, 143, 150, 164, 170, 177], "l2_loss": 26, "norm_grad": 26, "sigma_tild": 26, "c2": 26, "xt_next": 26, "append": [26, 174], "23it": [26, 29, 31, 37], "19it": [26, 29, 40], "20it": [26, 29, 32], "15it": [26, 29], "14it": [26, 31, 35, 37], "349": [26, 28, 56], "demo_dp": [26, 28, 56], "quantifi": 27, "bayesian": 27, "propto": [27, 52, 114], "point": [27, 35, 42, 47, 49, 53, 62, 97, 99, 101, 102, 105, 107, 126, 140, 170], "role": 27, "fnejacobianspectralnorm": 27, "make": [27, 42, 44, 94, 165], "firmli": 27, "expans": 27, "nonexpans": [27, 44, 62], "help": [27, 42], "stabil": [27, 166], "dncnn_sigma2_lipschitz_color": 27, "56m": 27, "480k": [27, 29], "91mb": 27, "5e3": 27, "785": [27, 28, 35, 56], "demo_sampl": [27, 28, 56], "present": [29, 30, 31], "beyond": 29, "subset": [29, 31, 32, 139], "coil": [29, 142], "fastmri": 29, "973": [29, 30], "320x320": 29, "fastmri_knee_singlecoil": 29, "399m": 29, "788k": 29, "88mib": 29, "92m": 29, "9mib": [29, 40], "0mib": [29, 40], "5mib": 29, "2mib": [29, 39], "100m": 29, "108m": 29, "8mib": [29, 40], "116m": 29, "123m": 29, "131m": 29, "139m": 29, "147m": 29, "155m": 29, "162m": 29, "170m": 29, "1mib": 29, "178m": 29, "186m": 29, "194m": 29, "202m": 29, "209m": 29, "217m": 29, "225m": 29, "4mib": [29, 39], "241m": 29, "249m": 29, "257m": 29, "264m": 29, "272m": 29, "280m": 29, "288m": 29, "296m": 29, "303m": 29, "311m": 29, "319m": 29, "327m": 29, "335m": 29, "343m": 29, "351m": 29, "359m": 29, "367m": 29, "374m": 29, "382m": 29, "390m": 29, "398m": 29, "mri_mask_128x128": 29, "900": 29, "demo_equivariant_imag": [29, 33, 56], "272": 29, "tabl": [29, 36, 37, 42, 48], "wrap": [29, 35, 36, 37, 40, 44, 77], "scheme": [29, 30], "mc": [29, 30, 84], "ei": [29, 61], "group": [29, 44, 61, 84], "rotat": [29, 30, 44, 61, 84, 155], "acquisit": [29, 51, 97, 140, 145, 150, 161, 162, 163], "translat": [29, 61, 169], "scratch": [29, 30, 31, 32], "mcloss": [29, 30], "eiloss": 29, "new_demo_ei_ckp_150_v3": 29, "17m": 29, "88mb": 29, "ckp_interv": [29, 30, 165], "187019": 29, "loss_mc": [29, 30], "71e": 29, "loss_ei": 29, "000144": 29, "000201": 29, "29e": 29, "000113": 29, "000155": 29, "000128": 29, "000165": 29, "19e": 29, "000146": 29, "000188": 29, "09e": 29, "000132": 29, "000172": 29, "baseunfold": [29, 36, 37, 38, 39, 40, 53, 170, 172, 173], "fixed_point": [29, 35, 36, 37, 38, 39, 40], "fixedpoint": [29, 35, 36, 37, 38, 39, 40, 49, 53, 97, 107, 170], "hqsiter": [29, 35], "fstephq": [29, 35], "gstephq": [29, 35], "init_params_algo": [29, 35, 36, 37, 38, 39, 40], "parameterdict": [29, 35, 36, 37, 38, 39, 40], "type": [29, 35, 36, 37, 38, 39, 40, 84, 85, 132, 148, 151, 178, 182, 183, 184], "parameterlist": [29, 35, 36, 37, 39, 40], "in_conv": [29, 35, 38, 40], "conv_list": [29, 35, 38, 40], "out_conv": [29, 35, 38, 40], "nl_list": [29, 35, 38, 40], "equivariant_imag": 29, "39it": [29, 35], "58it": [29, 30, 36, 37, 38, 39], "49it": [29, 30, 35, 37, 38], "28it": [29, 35, 37, 38], "41it": [29, 35], "27it": [29, 36], "44it": [29, 30, 35, 38], "35it": [29, 30, 35, 37, 38], "513077304787835": 29, "951144416682947": 29, "388851714460817": 29, "4114611889544526": 29, "067": [29, 33, 56], "y_i": [30, 66, 96], "a_": [30, 66, 132, 140, 144, 145], "g_i": [30, 66], "dot": [30, 66, 95], "approach": [30, 47, 75], "unsupervis": [30, 68, 165], "mnist": [30, 31, 32, 36, 37, 43, 59], "train_base_dataset": [30, 35, 36, 37, 39, 40], "root": [30, 31, 32, 36, 37, 42, 43], "test_base_dataset": [30, 35, 36, 37, 39, 40], "receiv": 30, "number_of_oper": 30, "demo_multioperator_imag": [30, 33, 56], "test_datapoint": [30, 31, 32, 36, 37, 59], "429": 30, "978": 30, "526": [30, 91], "1010": 30, "529": 30, "982": 30, "538": 30, "533": 30, "981": 30, "998": [30, 40], "1002": 30, "530": 30, "52it": [30, 36, 38], "1012": 30, "63it": [30, 35, 36, 38], "532": 30, "1008": 30, "artifact": [30, 75, 90, 164, 165], "remov": [30, 75, 139, 164, 165], "phi": [30, 75], "multi": [30, 47, 66], "moi": [30, 66], "necessari": [30, 36, 42, 81, 158, 159], "moiloss": 30, "demo_moi_ckp_10": 30, "704k": 30, "17mb": 30, "28m": 30, "3mb": [30, 31], "2069441": 30, "000151": 30, "loss_moi": 30, "000974": 30, "00113": 30, "00034": 30, "000798": 30, "00114": 30, "000299": 30, "00096": 30, "00126": 30, "000923": 30, "000908": 30, "00183": [30, 38], "00077": 30, "000912": 30, "00168": [30, 38], "000672": 30, "00145": 30, "00212": 30, "00063": 30, "00259": 30, "00322": 30, "000867": 30, "0027": 30, "00357": [30, 38], "00304": 30, "00396": 30, "00119": 30, "00303": 30, "00423": 30, "00359": 30, "00478": [30, 38], "00137": 30, "00348": 30, "00486": 30, "00138": 30, "00336": 30, "00473": 30, "00366": 30, "00503": 30, "00142": 30, "00349": 30, "00492": 30, "0014": 30, "00343": 30, "00483": 30, "0049": 30, "00484": 30, "00335": 30, "0048": 30, "00161": [30, 38], "00511": 30, "00157": 30, "00338": 30, "00495": 30, "00154": 30, "00341": 30, "00496": 30, "00151": 30, "0039": 30, "0054": 30, "00544": 30, "00152": 30, "00388": 30, "00149": 30, "00387": 30, "00536": 30, "00158": [30, 38], "00546": 30, "00155": [30, 38], "00386": 30, "00541": 30, "0038": [30, 38], "00535": [30, 38], "00372": [30, 38], "00526": 30, "00153": [30, 38], "00525": 30, "00159": 30, "00378": 30, "00367": 30, "00369": 30, "00529": 30, "00377": 30, "00162": [30, 38], "00375": 30, "00537": 30, "0016": [30, 38], "00373": 30, "00534": 30, "00389": [30, 38], "00547": 30, "00156": [30, 38], "00392": 30, "00548": 30, "00391": 30, "00543": 30, "00385": 30, "00539": 30, "00538": 30, "00383": 30, "00382": 30, "00533": 30, "batchnorm2d": [30, 31, 32, 93], "momentum": [30, 31, 32, 97, 101, 170], "affin": [30, 31, 32], "track_running_stat": [30, 31, 32], "multioperator_imag": 30, "296845626831054": 30, "2846529905603856": 30, "103665447235107": 30, "7379694923885824": 30, "correl": 31, "neighbor": [31, 67], "map": [31, 38, 48, 50, 51, 52, 67, 81, 91, 92, 114, 135, 140, 145, 158, 159], "propag": [31, 61, 67], "corrupt": [31, 32], "demo_n2n": 31, "403": 31, "890": 31, "ckp_50_demo_n2n": 31, "14m": [31, 32], "896k": 31, "13mb": 31, "444737": [31, 32], "0745": 31, "0695": 31, "0678": 31, "51it": [31, 35, 40], "826131057739257": 31, "5348207475459481": 31, "346026992797853": [31, 32], "7863419781551304": [31, 32], "747": [31, 33, 56], "demo_n2n_denois": [31, 33, 56], "knowledg": [32, 45], "about": [32, 44, 46], "unbias": [32, 71, 72, 73], "odot": [32, 72, 73, 138], "bernoulli": [32, 72, 73, 139], "elementwis": [32, 72, 73], "yann": [32, 36], "lecun": [32, 36], "exdb": [32, 36], "idx3": [32, 36], "ubyt": [32, 36], "gz": [32, 36], "raw": [32, 36], "9912422": [32, 36], "131628272": 32, "idx1": [32, 36], "28881": [32, 36], "169420550": 32, "t10k": [32, 36], "1648877": [32, 36], "65536": 32, "288391": 32, "229376": 32, "613919": 32, "294912": 32, "421710": 32, "851968": 32, "1460364": 32, "1048576": 32, "1504503": 32, "1721027": 32, "4542": [32, 36], "37501040": 32, "demo_sur": 32, "446": 32, "912": 32, "surepoissonloss": 32, "suregaussianloss": 32, "surepgloss": 32, "ckp_10_demo_sur": 32, "880k": 32, "97mb": 32, "00219": [32, 38], "0011": 32, "0022": [32, 38], "000707": 32, "000629": 32, "420438003540038": 32, "5207505328858359": 32, "285": [32, 33, 56], "demo_sure_denois": [32, 33, 56], "217": 33, "toi": 35, "larger": [35, 40, 59, 81, 132, 140, 141, 151, 162, 163], "wandb": [35, 38, 40, 164, 165], "gd": [35, 118, 122, 170], "deq_build": [35, 53], "cbsd500": [35, 38, 40], "replac": [35, 38, 40, 45, 53], "demo_deq": [35, 41, 56], "generated_datasets_path": [35, 36, 37, 40], "helper": [35, 40, 118, 172, 173], "anderson_acceleration_forward": 35, "anderson": [35, 97, 101, 170], "pass": [35, 42, 47, 53, 60, 64, 76, 78, 86, 87, 88, 89, 118, 136, 152, 170, 171, 172, 173], "anderson_acceleration_backward": [35, 170], "anderson_history_s": 35, "histori": [35, 97, 101, 170], "anderson_acceler": [35, 97, 101], "history_size_backward": [35, 170], "history_s": [35, 97, 101], "188165": 35, "818": 35, "873": 35, "596": 35, "416": 35, "719": 35, "891": 35, "791": 35, "689": 35, "896": 35, "875": 35, "894": 35, "839": 35, "749": 35, "50it": [35, 37, 38, 39, 40], "392": 35, "369": 35, "283": 35, "268": 35, "242": 35, "216": 35, "basedeq": [35, 53, 172], "deq_hq": 35, "239547729492188": 35, "124963760375977": 35, "056": [35, 36, 41, 56], "nutshel": 36, "involv": [36, 91, 92], "learnabl": [36, 37, 39, 53, 90, 93, 171], "mnist_train": [36, 37], "train_test_transform": [36, 37], "124322216": 36, "165485920": 36, "59016361": 36, "47865650": 36, "highli": [36, 37], "10x": [36, 37], "demo_lista": [36, 41, 56], "726": 36, "tag": [36, 49, 90, 97], "min_x": [36, 37, 97, 101], "wx": 36, "pgditer": [36, 37, 97, 101], "ax_k": [36, 37], "These": [36, 37, 46, 112, 171], "yield": [36, 37, 117], "practic": [36, 89, 117, 140], "sub": [36, 117], "band": [36, 117], "n_level": [36, 94], "n_wavelet_subband": 36, "reformul": [36, 39], "match": [36, 42, 139, 149, 174], "loader": [36, 37, 164], "0996": 36, "0677": 36, "0772": 36, "0804": 36, "0781": 36, "0777": 36, "0705": 36, "0685": 36, "0679": [36, 39], "0658": 36, "0645": 36, "0664": 36, "068": 36, "0666": 36, "0655": 36, "0642": 36, "0604": [36, 39], "0618": 36, "061": 36, "0607": 36, "0605": 36, "0601": 36, "0608": 36, "0592": 36, "0586": 36, "0581": 36, "0575": 36, "0573": 36, "0574": 36, "0571": 36, "0569": 36, "0567": 36, "0566": 36, "0562": 36, "0564": 36, "0561": 36, "0553": 36, "055": 36, "0547": [36, 39], "0544": 36, "0542": 36, "0537": 36, "0533": 36, "0532": 36, "0531": 36, "0528": 36, "0525": 36, "0522": 36, "0521": 36, "0519": 36, "0515": 36, "0513": 36, "0511": 36, "0508": 36, "0509": 36, "0507": 36, "0504": 36, "0503": 36, "0501": 36, "0505": 36, "0506": 36, "0502": 36, "0499": 36, "0497": 36, "0495": 36, "0494": 36, "0491": 36, "0492": 36, "049": 36, "0493": 36, "0489": 36, "0488": 36, "0486": 36, "0487": 36, "0485": 36, "0483": 36, "048": 36, "0482": 36, "0478": 36, "0477": 36, "0476": 36, "0475": 36, "0474": 36, "0473": 36, "53it": 36, "0469": 36, "0468": 36, "0466": 36, "0465": 36, "0565": 36, "0401": 36, "0331": 36, "0361": 36, "0353": 36, "0379": 36, "0381": 36, "0385": 36, "0391": 36, "0394": 36, "0412": 36, "0416": 36, "0426": 36, "0432": 36, "0435": 36, "044": 36, "0442": 36, "0439": 36, "0444": 36, "0451": 36, "0455": 36, "0448": 36, "0447": 36, "0441": 36, "0437": 36, "0434": 36, "0433": 36, "0431": 36, "043": 36, "0436": 36, "0438": 36, "0428": 36, "0424": 36, "0425": 36, "0422": 36, "0423": 36, "0421": 36, "0419": 36, "0417": 36, "0414": 36, "0413": [36, 39], "0415": 36, "0418": [36, 142], "0411": [36, 143], "046": 36, "0402": 36, "0395": 36, "0392": 36, "0382": 36, "0387": 36, "0384": [36, 39], "0373": 36, "0378": 36, "0374": 36, "0375": 36, "0371": 36, "0397": 36, "0393": 36, "0398": [36, 136], "0396": 36, "0399": 36, "fsteppgd": [36, 37], "gsteppgd": [36, 37], "3x3": [36, 39, 132, 133, 135, 139, 142, 148, 151], "column": [36, 37, 139, 179], "back": [36, 37, 151], "project": [36, 37, 42, 44, 87, 102, 103, 151, 161, 162, 163], "unfolded_pgd": [36, 37], "971805572509766": 36, "278793334960938": 36, "plot_paramet": [36, 37, 40], "init_param": [36, 37, 40, 181], "demo_licp": 37, "742": 37, "minimis": [37, 97, 119, 120, 121, 122, 123, 124], "smooth": [37, 111], "finit": [37, 91, 92, 115], "tv_smooth": 37, "mse_loss": 37, "reduct": [37, 90], "meth": [37, 39], "share": 37, "0756": [37, 39], "087": 37, "0807": 37, "0836": 37, "0818": 37, "0841": 37, "0813": 37, "0798": 37, "0797": 37, "0802": 37, "0811": 37, "0808": 37, "082": 37, "0824": 37, "0822": 37, "0825": 37, "0826": 37, "0833": 37, "0839": 37, "0834": 37, "0837": 37, "0694": 37, "0843": 37, "0846": 37, "0859": 37, "0866": 37, "0873": 37, "0883": 37, "0877": 37, "0867": 37, "0862": 37, "0847": [37, 39], "0835": 37, "0831": 37, "0832": 37, "0827": [37, 40], "0821": 37, "083": 37, "0838": 37, "0823": 37, "0829": 37, "0819": [37, 133], "0817": 37, "0814": 37, "0815": 37, "0763": 37, "0803": 37, "0794": 37, "0799": 37, "0816": 37, "0771": 37, "0727": 37, "0782": 37, "0776": 37, "0773": 37, "0765": 37, "0753": 37, "0792": 37, "0809": 37, "0801": 37, "0805": 37, "0812": 37, "976164817810059": 37, "259443283081055": 37, "were": 37, "check": [37, 39, 42, 97, 101, 140, 165], "270": [37, 41, 56], "demo_custom_prior_unfold": [37, 41, 56], "adler": 38, "jona": 38, "ozan": 38, "\u00f6ktem": 38, "transact": [38, 77], "medic": 38, "1322": 38, "1332": 38, "fly": 38, "odl": 38, "odlgroup": 38, "io": [38, 91, 92], "randomphantomdataset": 38, "shepplogandataset": 38, "cpiter": [38, 39], "fstep": [38, 49], "gstep": [38, 49], "pdnet_primalblock": 38, "pdnet_dualblock": 38, "pditer": 38, "directli": [38, 55, 81, 90, 118, 172, 173], "respect": [38, 53, 84, 107], "afterward": [38, 60, 64, 76, 78, 86, 87, 88, 89], "pdnetiter": 38, "gsteppdnet": 38, "fsteppdnet": 38, "Their": 38, "pdnetprior": 38, "pdnetdatafid": 38, "n_iter_train": 38, "1e5": 38, "n_data": 38, "n_primal": 38, "n_dual": 38, "u0": 38, "cosineannealinglr": 38, "t_max": 38, "clean": [38, 40, 68, 129, 130, 132, 134, 136, 139, 143, 145, 151], "random_phantom": 38, "online_measur": [38, 164, 165], "75594": 38, "00355": 38, "00753": 38, "00622": 38, "00607": 38, "00628": 38, "0056": 38, "00523": 38, "00532": 38, "00506": 38, "00462": 38, "00442": 38, "00424": 38, "00417": 38, "00407": 38, "00393": 38, "0026": 38, "00244": 38, "00237": 38, "0024": 38, "00231": 38, "0023": 38, "00228": 38, "00222": 38, "00236": 38, "00233": 38, "00238": 38, "00246": 38, "00239": 38, "00167": 38, "00205": 38, "00194": 38, "00203": 38, "00217": 38, "00226": 38, "00225": 38, "00216": 38, "00213": 38, "00214": 38, "00215": 38, "00211": 38, "00223": 38, "00221": 38, "00206": 38, "00208": 38, "00234": 38, "00235": 38, "00232": 38, "00227": 38, "00207": 38, "00173": 38, "00187": 38, "00186": 38, "00184": 38, "00197": 38, "00199": 38, "00193": 38, "00192": 38, "00107": 38, "00146": 38, "59it": [38, 39], "00164": 38, "00163": 38, "00169": 38, "00172": 38, "00171": 38, "00179": 38, "00181": 38, "00182": 38, "00285": 38, "00224": 38, "0021": 38, "00204": 38, "00201": 38, "00195": 38, "00202": 38, "00209": 38, "00196": 38, "00139": 38, "00176": 38, "00177": 38, "00174": 38, "00175": 38, "00269": 38, "00198": 38, "0018": 38, "00178": 38, "prelu": 38, "num_paramet": 38, "837627410888672": 38, "803513526916504": 38, "434": [38, 41, 56], "demo_learned_primal_du": [38, 41, 56], "iota_": [39, 102], "ball": [39, 102, 103], "center": [39, 102, 103, 130, 131, 136, 140], "recal": [39, 53, 84, 171], "convex": [39, 49, 91, 92, 99, 102, 112], "infti": [39, 102, 117], "fashion": [39, 53, 54, 132, 139, 144, 148, 150, 174], "74m": 39, "stepsize_du": [39, 49], "document": [39, 42, 47, 48, 64, 68, 71, 72, 73, 120, 138, 149], "0598": 39, "0453": 39, "059": 39, "0612": 39, "0576": 39, "0623": 39, "0616": 39, "0579": 39, "0523": 39, "0708": 39, "0534": 39, "0344": 39, "0332": 39, "0304": 39, "0287": 39, "0311": 39, "0305": 39, "0289": 39, "0288": 39, "0274": 39, "0267": 39, "00323": 39, "00512": 39, "00908": 39, "0193": 39, "017": 39, "0165": 39, "0144": 39, "0146": [39, 136], "0168": 39, "0175": 39, "0169": 39, "0172": 39, "0162": 39, "0207": 39, "0183": 39, "0163": 39, "0124": 39, "0111": 39, "00428": 39, "00997": 39, "0102": 39, "00896": 39, "00763": 39, "00949": 39, "00979": 39, "00966": 39, "00981": 39, "00955": 39, "fstepcp": 39, "gstepcp": 39, "vialis": 39, "correctli": 39, "model_spec": 39, "eval": 39, "demo_unfolded_constrained_lista": [39, 41, 56], "jointli": 40, "gauss": 40, "demo_unfolded_sr": 40, "00m": 40, "dr": [40, 49, 118, 121, 172, 173], "dougla": [40, 118, 121, 172, 173], "rachford": [40, 118, 121, 172, 173], "resp": 40, "lenght": 40, "relax": [40, 49, 85, 91, 92, 107, 119, 120, 121], "188174": 40, "518": 40, "260": 40, "30it": 40, "243": 40, "202": 40, "drsiter": 40, "fstepdr": 40, "gstepdr": 40, "unfolded_dr": 40, "6897664070129395": 40, "9960274696350098": 40, "983": [40, 41, 56], "demo_vanilla_unfold": [40, 41, 56], "762": 41, "commun": 42, "driven": 42, "welcom": 42, "ultim": 42, "aim": [42, 53], "comprehens": 42, "acknowledg": 42, "contributor": 42, "taken": [42, 115], "decid": 42, "authorship": 42, "futur": 42, "public": 42, "prefer": 42, "fork": 42, "repositori": [42, 55, 67, 79, 81, 82, 85, 89, 90], "submit": 42, "pull": 42, "request": 42, "pr": 42, "prepar": 42, "pleas": [42, 55], "compliant": 42, "black": [42, 130, 131, 136, 140], "style": 42, "directori": [42, 43, 164, 165, 181], "desir": [42, 59], "chang": [42, 97, 101, 165], "machin": 42, "pytest": 42, "doc": [42, 164, 165], "command": 42, "below": [42, 48], "descript": [42, 91, 92, 117], "html": [42, 91, 92, 179], "noplot": 42, "without": [42, 130, 132, 134, 136, 143, 145, 151], "path": [42, 43, 57, 79, 81, 82, 83, 85, 89, 90, 100, 108, 165, 179, 180, 181], "familiar": 42, "workflow": 42, "open": [42, 55], "tracker": [42, 55], "ask": 42, "question": [42, 55], "discord": [42, 55], "server": [42, 55], "try": [42, 55], "address": 42, "soon": 42, "send": 42, "email": 42, "develop": 42, "idea": [42, 50], "subpackag": 43, "celeba": [43, 59], "transform_data": 43, "data_train": 43, "data_test": 43, "dinv_dataset": [43, 59], "block": [44, 47, 79, 85, 87, 88, 90, 108], "standalon": 44, "noisy_imag": 44, "randn": [44, 132, 133, 134, 135, 139, 140, 142, 143, 148, 150, 151, 154, 156], "denoised_imag": 44, "equivariantdenois": 44, "moment": 44, "vertic": [44, 74, 84, 142], "horizont": [44, 74, 84], "flip": [44, 84, 132], "uniformli": [44, 151, 152], "exact": [44, 130, 132, 134, 136, 140, 143, 151], "briefli": 44, "summar": [44, 48], "relev": [44, 97, 118, 172, 173], "host": 44, "monoton": 44, "constraint": [44, 161, 162, 163], "firm": [44, 62], "scunet": 44, "synthet": 44, "realist": 44, "artefact": 44, "swinir": 44, "page": 44, "dhariw": 44, "nichol": 44, "imagenet128": [44, 81], "within": [44, 47, 60, 64, 76, 78, 86, 87, 88, 89], "reg": [45, 48, 49, 52, 53, 97, 104, 112, 113, 114, 115, 116, 117, 126], "datafidnam": [45, 49, 97, 99, 105, 111], "xset": [45, 48, 49, 51, 97, 99, 140, 145], "yset": [45, 48, 49, 51, 97, 99, 140, 145], "mapsto": [45, 48, 49, 51, 97, 140, 145], "scalar": [45, 54, 74, 138, 165], "discrep": [45, 48, 49, 97], "enforc": [45, 48, 49, 65, 86, 97], "off": 45, "shelf": 45, "forw": [45, 48, 51, 61, 65, 66, 99, 102, 103, 105, 144, 145], "read": 45, "cameraman": 45, "512": [45, 79, 85], "rescale_mod": [45, 179], "interpret": [45, 93, 94, 141], "forc": 45, "success": 45, "popular": 46, "especi": 46, "design": [46, 68, 71, 72, 73], "written": [46, 49, 97], "alon": [46, 61], "submodul": 46, "augment": [46, 58, 59, 61, 66], "togeth": 46, "compat": [47, 94], "dataparallel": 47, "distributeddataparallel": 47, "gpu_numb": 47, "device_id": 47, "seamlessli": [47, 174], "loop": [47, 101], "drawback": 47, "reader": 47, "unifi": 48, "underli": [48, 81, 108], "often": [48, 49], "determinist": [48, 51, 140, 145], "captur": [48, 51, 140, 145], "system": [48, 101, 127], "colon": 48, "stochast": [48, 51, 89, 90, 140, 145, 158, 162], "distanc": [48, 49, 96, 97, 99, 103, 105, 106, 111, 112], "promot": 48, "plausibl": 48, "collect": [49, 51, 53, 55], "routin": [49, 53], "abov": [49, 97, 120], "qquad": [49, 97, 101, 107], "baseoptim": [49, 98, 118, 171], "predefin": [49, 55, 140, 145], "serv": [49, 94], "come": [49, 112, 140], "distancenam": [49, 99, 105, 111, 120], "circ": [49, 64, 140, 145], "tikhonov": 49, "overwritten": [49, 112, 132, 140, 144, 145, 151], "store": [49, 97, 101, 107, 132, 148, 150, 161], "whose": [49, 138, 151, 181], "typic": [49, 52, 114], "enough": 49, "theori": [49, 91, 92], "_g": [49, 53, 107, 171], "simplest": 50, "jin": 50, "tomograph": 50, "appear": 51, "applic": [51, 91, 92], "character": [51, 140, 145], "affect": [51, 59, 102, 140, 145], "x_adj": 51, "x_dagger": [51, 140], "bilinear": [51, 136, 143], "bx": [51, 144], "leverag": [52, 53, 63, 134, 170], "convolv": [52, 114], "posteriori": [52, 114], "yosida": [52, 114], "envelop": [52, 114, 123], "inf_z": [52, 114], "sota": 52, "produc": [52, 140, 145], "statist": [52, 68, 161, 162, 163], "mcmc": 52, "_f": [53, 107, 171], "sometim": 53, "builder": 53, "virtual": [53, 61, 170], "infinit": [53, 170], "look": 53, "partial": [53, 99, 103, 140, 145, 170], "star": [53, 170], "incom": [53, 170], "similar": [54, 132, 139, 144, 148, 150, 174], "quickli": 54, "framework": [55, 166], "state": 55, "art": 55, "latest": 55, "version": [55, 84, 91, 92, 167, 169, 174], "pick": 55, "join": 55, "convers": 55, "touch": 55, "julian": 55, "tachella": 55, "dongdong": 55, "chen": 55, "samuel": 55, "matthieu": 55, "terri": 55, "bool": [57, 59, 61, 62, 63, 66, 69, 75, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 97, 101, 107, 109, 117, 118, 126, 132, 139, 140, 147, 148, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 181], "callabl": [58, 84, 99, 109, 110, 112, 113, 118, 127, 128, 134, 140, 145, 154, 156, 160, 172, 173], "hd5": 59, "hd5dataset": 59, "assign": [59, 143], "evenli": 59, "datapoint": 59, "filenam": 59, "worker": 59, "charbonni": 60, "overridden": [60, 64, 76, 78, 86, 87, 88, 89], "although": [60, 64, 76, 78, 86, 87, 88, 89, 112], "recip": [60, 64, 76, 78, 86, 87, 88, 89], "regist": [60, 64, 76, 78, 86, 87, 88, 89], "hook": [60, 64, 76, 78, 86, 87, 88, 89], "silent": [60, 64, 76, 78, 86, 87, 88, 89], "mseloss": [61, 65, 66, 67, 68, 69, 70], "apply_nois": [61, 66], "invari": [61, 102], "2103": [61, 163], "14756": 61, "t_g": [61, 84], "ell_1": [61, 65, 66, 67, 69, 70, 91, 94, 95, 103, 104], "sensor": [61, 66, 130, 132, 134, 136, 140, 143, 144, 145, 151], "x_net": [61, 65, 66, 70, 71, 72, 73, 74, 165], "tol": [62, 63, 127, 128, 140, 145], "eval_mod": [62, 63], "jacobian": [62, 63, 91, 99, 108, 140, 144, 145, 166], "spectral": [62, 63, 125, 140], "denot": [62, 64, 102, 123, 129, 130, 131, 138], "du": [62, 63], "2012": [62, 63], "13247v2": [62, 63], "jacobianspectralnorm": 62, "toler": [62, 63, 127, 128, 140, 145], "whether": [62, 63, 87, 88, 90, 91, 92, 97, 109, 118, 126, 160, 166, 170, 172, 173, 177, 181], "y_in": 62, "x_in": 62, "args_model": 62, "kwargs_model": 62, "fne": 62, "argument": [62, 83, 97, 100, 101, 106, 118, 171, 172, 173], "kargs_model": 62, "keyword": [62, 101, 171], "df": 63, "usag": [63, 179], "reg_l2": 63, "diag": [63, 125, 132, 134, 139, 144], "largest": [63, 94, 97], "eigenvalu": 63, "regval": 63, "onesid": 64, "ell_p": 64, "_p": 64, "side": 64, "ieeexplor": [64, 68, 71, 72, 73, 138, 149], "abstract": [64, 71, 72, 73, 138, 149], "6418031": 64, "wise": [64, 138], "physics_list": 66, "a_g": 66, "x_i": 66, "2201": [66, 157], "12151": 66, "taohuang2018": 67, "recorrupt": 68, "r2r": 68, "unorgan": 68, "accord": [68, 150], "9577798": 68, "equal": [68, 94, 114, 138, 139, 143, 150, 151, 154, 156], "averagedv": 68, "z_i": 68, "perturb": 68, "split_ratio": 69, "regular_mask": 69, "m_1": 69, "m_2": 69, "inversef": [69, 165], "pubm": 69, "ncbi": 69, "nlm": 69, "nih": 69, "gov": 69, "32614100": 69, "target": 70, "b_i": [71, 96], "geq": [71, 81, 111, 161, 162, 163], "diverg": [71, 72, 73], "4099398": 71, "truli": [71, 72, 73], "noiseless": [71, 72, 73, 81], "sensit": [71, 72, 73], "proport": [71, 72, 73, 94], "tau1": 72, "tau2": 72, "tau_1": 72, "tau_2": 72, "2a": 72, "6714502": [72, 73], "pinv": 75, "ckpt_path": 75, "inspir": [75, 159], "fbpconvnet": 75, "1611": 75, "03679": 75, "dagger": [75, 134], "dim_input": 76, "dim_mid": 76, "dim_hid": 76, "connect": [76, 90, 93], "debug": 76, "prototyp": 76, "featur": [76, 87, 88], "latent": [76, 166], "collabor": 77, "davob": 77, "2007": 77, "unlik": [77, 82, 160], "furthermor": 77, "un": 78, "suit": 78, "tupl": [78, 80, 86, 90, 97, 101, 129, 131, 132, 136, 138, 139, 142, 143, 148, 150, 154, 155, 156, 160, 161, 162, 163, 164, 177, 179], "scale_out": 78, "nc": [79, 85], "nb": [79, 85], "act_mod": [79, 85], "downsample_mod": [79, 85], "strideconv": [79, 85], "upsample_mod": [79, 85], "convtranspos": [79, 85], "like": [79, 91, 126], "encod": 79, "nf": [79, 82, 87, 88], "activ": [79, 82, 85], "leakyrelu": [79, 85, 147], "elu": [79, 85], "softplu": [79, 85], "avgpool": [79, 85], "pool": [79, 85, 86], "pixelsuffl": [79, 85], "upconv": [79, 85], "neighbour": [79, 85], "onlin": [79, 81, 82, 85, 89, 90, 164, 165], "2500": [80, 130], "re_init": 80, "ad_": 80, "minimiza": 80, "slow": [80, 136], "use_fp16": 81, "embed": [81, 90], "jychoi118": 81, "ilvr_adm": 81, "handl": [81, 157, 158], "n_1": 81, "n_2": 81, "gb": 81, "357": 81, "convert_to_fp16": 81, "torso": 81, "float16": 81, "convert_to_fp32": 81, "find": [81, 125, 144, 145, 149, 159, 170], "type_t": 81, "noise_level": 81, "tradit": 81, "forward_denois": 81, "divis": [81, 96], "forward_diffus": 81, "get_alpha_prod": [81, 159], "0001": [81, 97, 101, 159, 170], "pure": [81, 159], "1608": 82, "03981": 82, "seri": 82, "bias": [82, 93, 164, 165], "epub": 82, "siam": [82, 91], "doi": 82, "1137": 82, "20m1387961": 82, "sum_i": [83, 100, 109], "p_ix": [83, 100], "ith": [83, 100], "overlap": [83, 100, 109], "gaussianmixturemodel": [83, 100], "accordingli": [83, 100], "gmm_lodopab_smal": [83, 100], "sigma_sq": [83, 100], "memori": [83, 90, 92, 100, 176], "consumpt": [83, 100], "geometr": 84, "commut": 84, "action": 84, "denoisernam": 84, "2312": 84, "01831": 84, "rotoflip": 84, "slide": 86, "window": [86, 90], "overrid": [86, 90, 126], "boolean": [86, 108, 161], "1707": [87, 88], "06474": [87, 88], "ax_cur": 87, "atu": 88, "in_nc": 89, "drop_path_r": [89, 90], "input_resolut": 89, "swin": [89, 90], "conv": [89, 90], "blind": [89, 93, 129], "synthesi": 89, "stage": 89, "drop": 89, "in_chan": 90, "embed_dim": 90, "num_head": 90, "window_s": 90, "mlp_ratio": 90, "qkv_bia": 90, "qk_scale": 90, "drop_rat": 90, "attn_drop_r": 90, "norm_lay": 90, "layernorm": 90, "ap": 90, "patch_norm": 90, "use_checkpoint": 90, "upscal": 90, "img_rang": 90, "resi_connect": 90, "1conv": 90, "pretrained_noise_level": 90, "offici": 90, "head": 90, "mlp": 90, "queri": 90, "qk": 90, "head_dim": 90, "dropout": 90, "absolut": [90, 127, 128, 140, 145], "sr": 90, "pixelshuffl": 90, "pixelshuffledirect": 90, "3conv": 90, "jingyunliang": 90, "releas": 90, "v0": 90, "u2": [91, 92], "r2": 91, "2nd": 91, "generalis": 91, "bredi": 91, "kunisch": 91, "sci": 91, "492": 91, "2010": 91, "uniqu": [91, 92], "auxiliari": [91, 97, 101], "field": [91, 92], "lambda_1": 91, "lambda_2": 91, "tgv": 91, "behav": 91, "frobeniu": 91, "hessian": 91, "lipschitzian": [91, 92], "composit": [91, 92], "vol": [91, 92], "460": [91, 92], "479": [91, 92], "2013": [91, 92], "laurent": [91, 92], "matlab": [91, 92], "lcondat": [91, 92], "softwar": [91, 92], "daniil": [91, 92], "smolyakov": [91, 92], "primari": [91, 92], "epsilon_adjoint": 91, "nabla_adjoint": [91, 92, 115], "isotrop": [92, 155, 168], "warm": 92, "restart": 92, "kept": [92, 94, 95], "beck": 92, "teboul": 92, "2419": 92, "2434": 92, "allow": [92, 131, 139, 150, 174], "circular_pad": 93, "free": [93, 176], "bfbatchnorm2d": 93, "biasfre": 93, "caus": 93, "fail": 93, "circular": [93, 129, 130, 131, 136, 143, 169], "batchnorm": 93, "robust": [93, 151], "And": 93, "mohan": 93, "orthogon": [94, 132, 162], "_n": [94, 95], "orthonorm": [94, 117, 134], "ell_0": [94, 95], "hard": [94, 95], "variant": [94, 95], "topk": [94, 95], "subband": 94, "cheap": 94, "mother": [94, 95], "pywavelet": 94, "crop_output": 94, "crop": [94, 177], "dwt": 94, "flatten_coeff": 94, "dec": 94, "n_coeff": 94, "coeffic": 94, "hard_threshold_topk": 94, "iwt": 94, "coeff": 94, "recomposit": 94, "pad_input": 94, "prox_l0": 94, "prox_l1": 94, "reshape_th": 94, "reshap": 94, "threshold_3d": 94, "threshold_nd": 94, "thresold_2d": 94, "thresold_func": 94, "overcomplet": [95, 132, 140, 151], "psi_1": 95, "psi_2": 95, "psi_l": 95, "amplitud": [96, 153], "phaseretriev": [96, 125, 148], "reconstrunct": 96, "row": [96, 179], "phase": [96, 125, 144, 148], "grad_d": [96, 99, 103, 105, 111], "gamma_backtrack": 97, "eta_backtrack": 97, "custom_metr": 97, "beta_anderson_acc": [97, 101], "eps_anderson_acc": [97, 101], "achiev": 97, "leftarrow": 97, "hold": 97, "float64": [97, 101], "a_forward": [97, 99, 101, 105], "optimalgo": 97, "claim": 97, "strategi": 97, "aux": 97, "ty": 97, "check_conv_fn": [97, 101], "check_iteration_fn": [97, 101], "init_iterate_fn": [97, 101], "x_0": [97, 120], "u_0": [97, 120], "f_0": 97, "init_metrics_fn": [97, 101], "metric_nam": 97, "update_data_fidelity_fn": [97, 101], "update_metrics_fn": [97, 101], "update_params_fn": [97, 101], "update_prior_fn": [97, 101], "rest": 98, "nonlinear": 99, "f_x": 99, "0000": [99, 105, 130, 134, 139], "6000": [99, 105], "chain": [99, 160, 161, 162, 163], "nabla_x": [99, 112, 113], "_x": [99, 140, 145], "nabla_u": [99, 111], "a_vjp": [99, 140, 144, 145], "stepsize_int": [99, 111, 112], "max_iter_int": [99, 111, 112], "tol_int": [99, 111, 112], "prox_conjug": [99, 112], "front": [99, 102, 112], "prox_d": [99, 102, 103, 105, 106, 111], "iccv": 100, "2011": 100, "patch_dimens": 100, "hspace": 101, "2cm": 101, "lamba": 101, "prox_g": 101, "sign": [101, 103, 104, 132], "initialis": [101, 140], "sol": 101, "proce": 101, "anderson_acceleration_step": 101, "tx_prev": 101, "x_hist": 101, "t_hist": 101, "evlauaton": 101, "hp": 101, "f_k": 101, "commonli": 101, "init_anderson_acceler": 101, "insid": [102, 151, 161], "1e16": 102, "au": [102, 103, 105], "proj": 102, "l1": 104, "normalis": 105, "grad_da": 105, "prox_da": 105, "1024": [106, 141], "n_0": [106, 141], "exp": [106, 138, 141], "abus": 107, "terminologi": 107, "pd": [107, 120], "relaxation_step": 107, "num_lay": 108, "rev": [108, 166], "determin": [108, 126, 166], "dens": 108, "built": 108, "freia": [108, 166], "negative_patch_log_likelihood": 109, "n_patch": 109, "nll": 109, "mirror": 109, "boundari": 109, "undesir": 109, "bkg": 111, "absenc": 111, "overwrit": 112, "forget": 112, "rais": 112, "warn": 112, "mmse": 114, "def_crit": 115, "inner": [115, 162], "solver": 115, "tvdenois": 115, "untouch": 117, "those": 117, "pywt": 117, "mention": 117, "string": [118, 172, 173], "direct": 119, "kx": 120, "hal": 120, "scienc": 120, "00490826": 120, "satisfi": [120, 124, 125], "assumpt": [120, 158], "intiliaz": 120, "three": 120, "z_0": 120, "v_": 122, "1f": 123, "lip": [124, 125], "n_iter": 125, "preprocess": 125, "princip": 125, "eigenvector": 125, "covari": [125, 126], "conj": [125, 140, 174], "em": 126, "classifi": 126, "cov_regular": 126, "most": [126, 176], "batch_dimens": 126, "component_log_likelihood": 126, "stopping_criterion": 126, "data_init": 126, "exactli": 126, "consol": [126, 164, 165], "get_cov": 126, "get_cov_inv_reg": 126, "get_weight": 126, "maintain": 126, "set_cov": 126, "cov": 126, "set_cov_reg": 126, "set_weight": 126, "summat": 126, "en": 127, "wiki": 127, "conjugate_gradient_method": 127, "cg": 127, "verifi": [127, 140, 161, 163], "grad_f": 128, "bz": 128, "unknown": [129, 138], "replic": [129, 130, 136, 143], "listtensor": [129, 138], "blurri": 129, "delta": 129, "16x16": [130, 131, 140], "middl": [130, 131, 136, 140], "2x2": [130, 131, 140], "fft": 131, "5000e": 131, "1177e": 131, "1280e": 131, "5937e": 131, "4986e": 131, "9221e": 131, "prod": 132, "iid": [132, 150], "sor": 132, "1506": 132, "03521": 132, "dst": 132, "bigger": [132, 150, 179], "o": [132, 138, 150], "mn": [132, 150], "tend": 132, "due": [132, 151], "marcenko": 132, "pastur": 132, "law": 132, "cfloat": [132, 148], "sine": 132, "independ": [132, 148, 150], "8522": 132, "2133": 132, "9897": [132, 151], "8714": 132, "8953": 132, "5284": 132, "4422": 132, "4238": 132, "7754": 132, "0479": 132, "conjugate_gradi": [132, 140, 151], "pseudoinvers": [132, 134, 140, 144, 145, 151], "rec601": 133, "1343": 133, "1329": 133, "1517": 133, "0790": 133, "6711": 133, "1414": 133, "1716": 133, "9021": 133, "parent": [134, 140, 145], "express": 134, "recreat": 134, "mask_svd": 134, "5410": [134, 139], "1788": [134, 139], "5684": 134, "3986": [134, 139], "4033": [134, 139], "7193": [134, 139], "manner": [134, 164, 165], "7302": 135, "2064": 135, "0712": 135, "1985": 135, "4322": 135, "8064": 135, "2139": 135, "3624": 135, "3223": 135, "nonetyp": [136, 143], "use_fft": 136, "1510": 136, "00143": 136, "offset": 138, "5567108": 138, "medium": 138, "transmiss": 138, "atmospher": 138, "light": 138, "hazi": 138, "simultan": 139, "empti": 139, "8380": 139, "0845": 139, "incorpor": [139, 140, 145], "sensor_model": [140, 145], "adjoint_funct": 140, "extra": 140, "quantiz": [140, 145], "satur": [140, 145], "closer": [140, 157, 159], "orgin": 140, "roll": [140, 154, 156], "shift": [140, 154, 156], "allclos": [140, 154, 156], "vjp": [140, 144, 145], "__add__": [140, 145, 174], "retain": 140, "__mul__": [140, 145, 174], "quantiti": 140, "theoret": 140, "doubl": 140, "mostli": 141, "dose": 141, "lower": [141, 154, 156], "consequ": 141, "antiproportion": 141, "benchmark": 141, "logpoisson": 141, "image_s": 142, "acceleration_factor": 142, "magnet": 142, "reson": 142, "slice": 142, "sfx": 142, "4x": 142, "5305": 142, "3326": 142, "1730": 142, "7072": 142, "reset": [142, 161, 165], "sample_mask": 142, "noise_color": 143, "noise_grai": 143, "0009": 143, "0251": 143, "1576": 143, "1098": 143, "0340": 143, "0086": 143, "0257": 143, "9084": 143, "2966": 143, "4015": 143, "modulu": 144, "guess": [144, 145, 158, 159], "b_dagger": 144, "mul": 145, "concanten": 145, "clip_posit": 147, "divid": [147, 174], "complex64": 148, "1901": 148, "0743": 148, "1858": 148, "3197": 148, "0734": 148, "4557": 148, "1231": 148, "6597": 148, "7768": 148, "3864": 148, "9127841": 149, "review": 149, "histogram": 149, "item": 150, "round": 150, "integr": 151, "plane": 151, "rx": 151, "dimension": 151, "ramp": 151, "360": [151, 167], "inscrib": 151, "4x4": 151, "1650": 151, "2640": 151, "6995": 151, "4860": 151, "2674": 151, "9971": 151, "9002": 151, "3856": 151, "9360": 151, "4882": 151, "1068": 151, "5720": 151, "9493": 151, "7137": 151, "6536": 151, "8457": 151, "1666": 151, "7340": 151, "9793": 151, "sigma_min": 152, "sigma_max": 152, "sigma_": 152, "uniform": [152, 153, 166, 182], "minimum": 152, "sigma_x": 155, "anisotrop": 155, "11793": 157, "plain": [157, 159], "save_iter": 158, "14687": 158, "compute_alpha_beta": 158, "2305": 159, "08995": 159, "varepsilon_t": 159, "tun": 159, "sigma_n": 159, "get_alpha_beta": 159, "get_noise_schedul": 159, "g_statist": [160, 161, 162, 163], "save_chain": [160, 161, 162, 163], "thresh_conv": [161, 162, 163], "mykernel": 161, "iterator_param": 161, "new_x": 161, "mysampl": 161, "welford": 161, "integ": [161, 162, 163, 169], "percentag": [161, 162, 163], "burn": [161, 162, 163], "period": [161, 162, 163, 168], "discard": [161, 162, 163], "function_handl": [161, 162, 163], "get_chain": 161, "mean_has_converg": 161, "var_has_converg": 161, "inner_it": 162, "rung": 162, "kutta": 162, "chebyshev": 162, "stabilis": 162, "varga": 162, "pereyra": 162, "zygalaki": 162, "1908": 162, "08845": 162, "tip": [162, 163], "damp": 162, "outer": 162, "04715": 163, "pi_": 163, "interv": 163, "wandb_setup": [164, 165], "plot_measur": [164, 165], "ai": [164, 165], "setup": [164, 165], "quickstart": [164, 165], "linear_std_psnr": 164, "grad_clip": 165, "eval_interv": 165, "check_grad": 165, "ckpt_pretrain": 165, "fact_loss": 165, "freq_plot": 165, "inpu": 165, "wider": 165, "jitter": 166, "00392156862745098": 166, "kullback": 166, "leibler": 166, "kl": 166, "p_x": 166, "p_z": 166, "const": 166, "flag": 166, "n_tran": [167, 169], "n_transf": [167, 169], "padding_mod": 168, "resampl": 168, "shift_max": 169, "fraction": 169, "max_iter_backward": 170, "beta_anderson_acc_backward": 170, "eps_anderson_acc_backward": 170, "child": [170, 171], "baseiter": 171, "encompass": 171, "__neg__": 174, "negat": 174, "__sub__": 174, "substract": 174, "__truediv__": 174, "max_pixel": 175, "log_": 175, "max_i": 175, "2_2": 175, "chw": 175, "img_list": 179, "max_img": 179, "min_max": 179, "return_fig": 179, "magnitud": 179, "img1": 179, "img2": 179, "img3": 179, "layout": 179, "linearli": 179, "colormap": 179, "stabl": 179, "images_contours_and_field": 179, "interpolation_method": 179}, "objects": {"deepinv.datasets": [[57, 0, 1, "", "HDF5Dataset"], [58, 0, 1, "", "PatchDataset"], [59, 0, 1, "", "generate_dataset"]], "deepinv.loss": [[60, 0, 1, "", "CharbonnierLoss"], [61, 0, 1, "", "EILoss"], [62, 0, 1, "", "FNEJacobianSpectralNorm"], [63, 0, 1, "", "JacobianSpectralNorm"], [64, 0, 1, "", "LpNorm"], [65, 0, 1, "", "MCLoss"], [66, 0, 1, "", "MOILoss"], [67, 0, 1, "", "Neighbor2Neighbor"], [68, 0, 1, "", "R2RLoss"], [69, 0, 1, "", "SplittingLoss"], [70, 0, 1, "", "SupLoss"], [71, 0, 1, "", "SureGaussianLoss"], [72, 0, 1, "", "SurePGLoss"], [73, 0, 1, "", "SurePoissonLoss"], [74, 0, 1, "", "TVLoss"]], "deepinv.loss.CharbonnierLoss": [[60, 1, 1, "", "forward"]], "deepinv.loss.EILoss": [[61, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[62, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[63, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[64, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[65, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[66, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[67, 1, 1, "", "forward"]], "deepinv.loss.R2RLoss": [[68, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[69, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[70, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[71, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[72, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[73, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[74, 1, 1, "", "forward"]], "deepinv.models": [[75, 0, 1, "", "ArtifactRemoval"], [76, 0, 1, "", "AutoEncoder"], [77, 0, 1, "", "BM3D"], [78, 0, 1, "", "ConvDecoder"], [79, 0, 1, "", "DRUNet"], [80, 0, 1, "", "DeepImagePrior"], [81, 0, 1, "", "DiffUNet"], [82, 0, 1, "", "DnCNN"], [83, 0, 1, "", "EPLLDenoiser"], [84, 0, 1, "", "EquivariantDenoiser"], [85, 0, 1, "", "GSDRUNet"], [86, 0, 1, "", "MedianFilter"], [87, 0, 1, "", "PDNet_DualBlock"], [88, 0, 1, "", "PDNet_PrimalBlock"], [89, 0, 1, "", "SCUNet"], [90, 0, 1, "", "SwinIR"], [91, 0, 1, "", "TGVDenoiser"], [92, 0, 1, "", "TVDenoiser"], [93, 0, 1, "", "UNet"], [94, 0, 1, "", "WaveletDenoiser"], [95, 0, 1, "", "WaveletDictDenoiser"]], "deepinv.models.ArtifactRemoval": [[75, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[76, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[77, 1, 1, "", "forward"]], "deepinv.models.ConvDecoder": [[78, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[79, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[80, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[81, 1, 1, "", "convert_to_fp16"], [81, 1, 1, "", "convert_to_fp32"], [81, 1, 1, "", "find_nearest"], [81, 1, 1, "", "forward"], [81, 1, 1, "", "forward_denoise"], [81, 1, 1, "", "forward_diffusion"], [81, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[82, 1, 1, "", "forward"]], "deepinv.models.EPLLDenoiser": [[83, 1, 1, "", "forward"]], "deepinv.models.EquivariantDenoiser": [[84, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[86, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[87, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[88, 1, 1, "", "forward"]], "deepinv.models.SCUNet": [[89, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[90, 1, 1, "", "forward"]], "deepinv.models.TGVDenoiser": [[91, 1, 1, "", "epsilon"], [91, 1, 1, "", "epsilon_adjoint"], [91, 1, 1, "", "forward"], [91, 1, 1, "", "nabla"], [91, 1, 1, "", "nabla_adjoint"]], "deepinv.models.TVDenoiser": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "nabla"], [92, 1, 1, "", "nabla_adjoint"]], "deepinv.models.UNet": [[93, 1, 1, "", "forward"]], "deepinv.models.WaveletDenoiser": [[94, 1, 1, "", "crop_output"], [94, 1, 1, "", "dwt"], [94, 1, 1, "", "flatten_coeffs"], [94, 1, 1, "", "forward"], [94, 1, 1, "", "hard_threshold_topk"], [94, 1, 1, "", "iwt"], [94, 1, 1, "", "pad_input"], [94, 1, 1, "", "prox_l0"], [94, 1, 1, "", "prox_l1"], [94, 1, 1, "", "psi"], [94, 1, 1, "", "reshape_ths"], [94, 1, 1, "", "threshold_3D"], [94, 1, 1, "", "threshold_ND"], [94, 1, 1, "", "thresold_2D"], [94, 1, 1, "", "thresold_func"]], "deepinv.models.WaveletDictDenoiser": [[95, 1, 1, "", "forward"]], "deepinv.optim": [[96, 0, 1, "", "AmplitudeLoss"], [97, 0, 1, "", "BaseOptim"], [98, 0, 1, "", "DPIR"], [99, 0, 1, "", "DataFidelity"], [100, 0, 1, "", "EPLL"], [101, 0, 1, "", "FixedPoint"], [102, 0, 1, "", "IndicatorL2"], [103, 0, 1, "", "L1"], [104, 0, 1, "", "L1Prior"], [105, 0, 1, "", "L2"], [106, 0, 1, "", "LogPoissonLikelihood"], [107, 0, 1, "", "OptimIterator"], [108, 0, 1, "", "PatchNR"], [109, 0, 1, "", "PatchPrior"], [110, 0, 1, "", "PnP"], [111, 0, 1, "", "PoissonLikelihood"], [112, 0, 1, "", "Prior"], [113, 0, 1, "", "RED"], [114, 0, 1, "", "ScorePrior"], [115, 0, 1, "", "TVPrior"], [116, 0, 1, "", "Tikhonov"], [117, 0, 1, "", "WaveletPrior"], [118, 2, 1, "", "optim_builder"]], "deepinv.optim.AmplitudeLoss": [[96, 1, 1, "", "d"], [96, 1, 1, "", "grad_d"]], "deepinv.optim.BaseOptim": [[97, 1, 1, "", "check_conv_fn"], [97, 1, 1, "", "check_iteration_fn"], [97, 1, 1, "", "forward"], [97, 1, 1, "", "init_iterate_fn"], [97, 1, 1, "", "init_metrics_fn"], [97, 1, 1, "", "update_data_fidelity_fn"], [97, 1, 1, "", "update_metrics_fn"], [97, 1, 1, "", "update_params_fn"], [97, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[99, 1, 1, "", "d"], [99, 1, 1, "", "forward"], [99, 1, 1, "", "grad"], [99, 1, 1, "", "grad_d"], [99, 1, 1, "", "prox"], [99, 1, 1, "", "prox_conjugate"], [99, 1, 1, "", "prox_d"], [99, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.EPLL": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "negative_log_likelihood"]], "deepinv.optim.FixedPoint": [[101, 1, 1, "", "anderson_acceleration_step"], [101, 1, 1, "", "forward"], [101, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[102, 1, 1, "", "d"], [102, 1, 1, "", "prox"], [102, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[103, 1, 1, "", "d"], [103, 1, 1, "", "grad_d"], [103, 1, 1, "", "prox"], [103, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[104, 1, 1, "", "g"], [104, 1, 1, "", "prox"]], "deepinv.optim.L2": [[105, 1, 1, "", "d"], [105, 1, 1, "", "grad_d"], [105, 1, 1, "", "prox"], [105, 1, 1, "", "prox_d"]], "deepinv.optim.LogPoissonLikelihood": [[106, 1, 1, "", "d"]], "deepinv.optim.OptimIterator": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "relaxation_step"]], "deepinv.optim.PatchNR": [[108, 1, 1, "", "forward"]], "deepinv.optim.PatchPrior": [[109, 1, 1, "", "g"]], "deepinv.optim.PnP": [[110, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[111, 1, 1, "", "d"], [111, 1, 1, "", "grad_d"], [111, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "g"], [112, 1, 1, "", "grad"], [112, 1, 1, "", "prox"], [112, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[113, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[114, 1, 1, "", "grad"]], "deepinv.optim.TVPrior": [[115, 1, 1, "", "g"], [115, 1, 1, "", "nabla"], [115, 1, 1, "", "nabla_adjoint"], [115, 1, 1, "", "prox"]], "deepinv.optim.Tikhonov": [[116, 1, 1, "", "g"], [116, 1, 1, "", "grad"], [116, 1, 1, "", "prox"]], "deepinv.optim.WaveletPrior": [[117, 1, 1, "", "g"], [117, 1, 1, "", "prox"], [117, 1, 1, "", "psi"]], "deepinv.optim.optim_iterators": [[119, 0, 1, "", "ADMMIteration"], [120, 0, 1, "", "CPIteration"], [121, 0, 1, "", "DRSIteration"], [122, 0, 1, "", "GDIteration"], [123, 0, 1, "", "HQSIteration"], [124, 0, 1, "", "PGDIteration"], [125, 0, 1, "", "SMIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[119, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[120, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[121, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[122, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.SMIteration": [[125, 1, 1, "", "forward"]], "deepinv.optim.utils": [[126, 0, 1, "", "GaussianMixtureModel"], [127, 0, 1, "", "conjugate_gradient"], [128, 0, 1, "", "gradient_descent"]], "deepinv.optim.utils.GaussianMixtureModel": [[126, 1, 1, "", "classify"], [126, 1, 1, "", "component_log_likelihoods"], [126, 1, 1, "", "fit"], [126, 1, 1, "", "forward"], [126, 1, 1, "", "get_cov"], [126, 1, 1, "", "get_cov_inv_reg"], [126, 1, 1, "", "get_weights"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "set_cov"], [126, 1, 1, "", "set_cov_reg"], [126, 1, 1, "", "set_weights"]], "deepinv.physics": [[129, 0, 1, "", "BlindBlur"], [130, 0, 1, "", "Blur"], [131, 0, 1, "", "BlurFFT"], [132, 0, 1, "", "CompressedSensing"], [133, 0, 1, "", "Decolorize"], [134, 0, 1, "", "DecomposablePhysics"], [135, 0, 1, "", "Denoising"], [136, 0, 1, "", "Downsampling"], [137, 0, 1, "", "GaussianNoise"], [138, 0, 1, "", "Haze"], [139, 0, 1, "", "Inpainting"], [140, 0, 1, "", "LinearPhysics"], [141, 0, 1, "", "LogPoissonNoise"], [142, 0, 1, "", "MRI"], [143, 0, 1, "", "Pansharpen"], [144, 0, 1, "", "PhaseRetrieval"], [145, 0, 1, "", "Physics"], [146, 0, 1, "", "PoissonGaussianNoise"], [147, 0, 1, "", "PoissonNoise"], [148, 0, 1, "", "RandomPhaseRetrieval"], [149, 0, 1, "", "SinglePhotonLidar"], [150, 0, 1, "", "SinglePixelCamera"], [151, 0, 1, "", "Tomography"], [152, 0, 1, "", "UniformGaussianNoise"], [153, 0, 1, "", "UniformNoise"], [154, 0, 1, "", "adjoint_function"]], "deepinv.physics.BlindBlur": [[129, 1, 1, "", "A"], [129, 1, 1, "", "A_dagger"]], "deepinv.physics.Blur": [[130, 1, 1, "", "A"], [130, 1, 1, "", "A_adjoint"]], "deepinv.physics.CompressedSensing": [[132, 1, 1, "", "A"], [132, 1, 1, "", "A_adjoint"], [132, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[134, 1, 1, "", "A"], [134, 1, 1, "", "A_adjoint"], [134, 1, 1, "", "A_dagger"], [134, 1, 1, "", "prox_l2"]], "deepinv.physics.Downsampling": [[136, 1, 1, "", "A"], [136, 1, 1, "", "A_adjoint"], [136, 1, 1, "", "prox_l2"]], "deepinv.physics.GaussianNoise": [[137, 1, 1, "", "forward"]], "deepinv.physics.Haze": [[138, 1, 1, "", "A"], [138, 1, 1, "", "A_dagger"]], "deepinv.physics.Inpainting": [[139, 1, 1, "", "noise"]], "deepinv.physics.LinearPhysics": [[140, 1, 1, "", "A_adjoint"], [140, 1, 1, "", "A_dagger"], [140, 1, 1, "", "A_vjp"], [140, 1, 1, "", "__add__"], [140, 1, 1, "", "__mul__"], [140, 1, 1, "", "adjointness_test"], [140, 1, 1, "", "compute_norm"], [140, 1, 1, "", "prox_l2"]], "deepinv.physics.LogPoissonNoise": [[141, 1, 1, "", "forward"]], "deepinv.physics.MRI": [[142, 1, 1, "", "reset"], [142, 1, 1, "", "sample_mask"]], "deepinv.physics.Pansharpen": [[143, 1, 1, "", "A"], [143, 1, 1, "", "A_adjoint"], [143, 1, 1, "", "forward"]], "deepinv.physics.PhaseRetrieval": [[144, 1, 1, "", "A"], [144, 1, 1, "", "A_dagger"], [144, 1, 1, "", "A_vjp"], [144, 1, 1, "", "B_dagger"], [144, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[145, 1, 1, "", "A"], [145, 1, 1, "", "A_dagger"], [145, 1, 1, "", "A_vjp"], [145, 1, 1, "", "__add__"], [145, 1, 1, "", "__mul__"], [145, 1, 1, "", "forward"], [145, 1, 1, "", "noise"], [145, 1, 1, "", "sensor"]], "deepinv.physics.PoissonGaussianNoise": [[146, 1, 1, "", "forward"]], "deepinv.physics.PoissonNoise": [[147, 1, 1, "", "forward"]], "deepinv.physics.SinglePhotonLidar": [[149, 1, 1, "", "A"], [149, 1, 1, "", "A_dagger"]], "deepinv.physics.Tomography": [[151, 1, 1, "", "A"], [151, 1, 1, "", "A_adjoint"], [151, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[152, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[153, 1, 1, "", "forward"]], "deepinv.physics.blur": [[155, 2, 1, "", "gaussian_blur"]], "deepinv.physics.forward": [[156, 2, 1, "", "adjoint_function"]], "deepinv.sampling": [[157, 0, 1, "", "DDRM"], [158, 0, 1, "", "DPS"], [159, 0, 1, "", "DiffPIR"], [160, 0, 1, "", "DiffusionSampler"], [161, 0, 1, "", "MonteCarlo"], [162, 0, 1, "", "SKRock"], [163, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[157, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[158, 1, 1, "", "compute_alpha_betas"], [158, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[159, 1, 1, "", "find_nearest"], [159, 1, 1, "", "forward"], [159, 1, 1, "", "get_alpha_beta"], [159, 1, 1, "", "get_alpha_prod"], [159, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "get_chain"], [161, 1, 1, "", "mean_has_converged"], [161, 1, 1, "", "reset"], [161, 1, 1, "", "var_has_converged"]], "deepinv": [[164, 2, 1, "", "test"], [165, 2, 1, "", "train"]], "deepinv.training_utils": [[166, 2, 1, "", "train_normalizing_flow"]], "deepinv.transform": [[167, 0, 1, "", "Rotate"], [168, 0, 1, "", "Scale"], [169, 0, 1, "", "Shift"]], "deepinv.transform.Rotate": [[167, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[168, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[169, 1, 1, "", "forward"]], "deepinv.unfolded": [[170, 0, 1, "", "BaseDEQ"], [171, 0, 1, "", "BaseUnfold"], [172, 2, 1, "", "DEQ_builder"], [173, 2, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[170, 1, 1, "", "forward"]], "deepinv.utils": [[174, 0, 1, "", "TensorList"], [175, 2, 1, "", "cal_psnr"], [176, 2, 1, "", "get_freer_gpu"], [177, 2, 1, "", "load_url_image"], [178, 2, 1, "", "ones_like"], [179, 2, 1, "", "plot"], [180, 2, 1, "", "plot_curves"], [181, 2, 1, "", "plot_parameters"], [182, 2, 1, "", "rand_like"], [183, 2, 1, "", "randn_like"], [184, 2, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[174, 1, 1, "", "__add__"], [174, 1, 1, "", "__mul__"], [174, 1, 1, "", "__neg__"], [174, 1, 1, "", "__sub__"], [174, 1, 1, "", "__truediv__"], [174, 1, 1, "", "append"], [174, 1, 1, "", "conj"], [174, 1, 1, "", "flatten"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"imag": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 55], "deblur": [0, 12, 18, 35], "custom": [0, 6, 19, 20, 23, 37, 38], "deep": [0, 2, 35, 44, 45, 53, 55], "explicit": 0, "prior": [0, 2, 10, 12, 13, 16, 20, 23, 27, 37, 38, 45, 49, 112], "setup": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "path": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "data": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 49], "load": [0, 1, 2, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "result": [0, 1, 2, 3, 4, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "base": [0, 1, 8, 11, 12, 13, 18, 19, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "dataset": [0, 1, 8, 12, 13, 18, 19, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43], "degrad": [0, 1, 8, 12, 13, 18, 19, 20, 29, 30, 35, 36, 37, 38, 39, 40], "oper": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 35, 36, 37, 38, 39, 40, 51], "defin": [0, 2, 4, 8, 19, 23, 24, 26, 27, 35, 36, 37, 38, 39, 40], "physic": [0, 51, 145], "gener": [0, 1, 2, 3, 5, 6, 8, 12, 13, 18, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 49], "blur": [0, 7, 12, 18, 130], "set": [0, 8, 12, 13, 16, 18, 19, 21, 29, 30, 31, 32, 39], "up": [0, 8, 12, 13, 18, 19, 21, 29, 30, 31, 32, 39], "optim": [0, 10, 12, 13, 19, 49], "algorithm": [0, 2, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 40, 45, 52, 53], "solv": [0, 11, 12, 13, 18, 19, 21], "invers": [0, 12, 13, 18, 19, 21, 25, 26], "problem": [0, 11, 12, 13, 18, 19, 20, 21, 25, 26], "evalu": [0, 12, 13, 18, 19, 20, 21], "reconstruct": [0, 2, 8, 16, 24, 29, 30, 39, 45, 50], "creat": [1, 3, 6, 11, 23, 24, 27], "your": [1, 23, 25, 26], "own": 1, "dataload": 1, "an": [2, 13, 25, 45], "us": [2, 6, 11, 25, 26, 47, 57, 58, 59, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181], "from": [2, 7, 23, 24, 27, 30], "internet": [2, 7, 23, 24, 27], "forward": [2, 3, 4, 5, 6, 7, 8, 16, 19, 21, 23, 24, 27, 39], "nois": [2, 16, 23, 24, 27, 51], "model": [2, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 38, 39], "measur": [2, 3, 23, 24, 27, 30, 36, 37], "run": [2, 16, 23, 24, 27], "dip": 2, "plot": [2, 3, 12, 13, 16, 19, 21, 23, 24, 27, 36, 37, 40, 54, 179], "singl": [3, 7], "photon": 3, "lidar": 3, "depth": 3, "rang": 3, "toi": [3, 5, 6], "signal": 3, "appli": 3, "match": 3, "filter": [3, 50], "recov": 3, "save": [4, 39], "stack": 5, "concaten": 5, "verifi": [5, 6], "our": 6, "linear": [6, 51], "decompos": 6, "benefit": 6, "A": 7, "tour": 7, "sens": [7, 36], "denois": [7, 11, 15, 20, 24, 25, 26, 31, 32, 44, 135], "inpaint": [7, 13, 15, 39, 139], "compress": [7, 36, 37], "comput": [7, 9, 14, 16, 17, 21, 22, 28, 33, 34, 41, 56], "tomographi": [7, 16, 21, 151], "mri": [7, 29, 142], "decolor": [7, 133], "pan": 7, "sharpen": 7, "pixel": 7, "camera": 7, "super": [7, 20, 40], "resolut": [7, 20, 35, 40], "train": [8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 54, 165], "network": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 46], "test": [8, 15, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 54, 164], "time": [9, 14, 17, 22, 28, 33, 34, 41, 56], "exampl": [10, 24, 57, 58, 59, 61, 62, 65, 66, 67, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181], "basic": 10, "patch": [10, 15, 16], "plug": 10, "plai": 10, "sampl": [10, 23, 24, 25, 27], "self": [10, 29, 30, 31, 32, 46], "supervis": [10, 29, 30, 31, 32, 46], "learn": [10, 29, 30, 36, 37, 38, 46, 50, 55], "unfold": [10, 36, 37, 39, 40, 53], "3d": 11, "wavelet": [11, 13], "volum": 11, "extens": 11, "multipl": [11, 30, 47], "iter": [11, 23, 36, 37, 38, 45, 49], "dykstra": 11, "like": 11, "total": 12, "variat": 12, "tv": 12, "explor": [12, 13], "expect": 15, "log": 15, "likelihood": [15, 27], "epll": [15, 16, 100], "limit": 16, "angl": 16, "paramet": [16, 21, 29, 30, 31, 32, 35, 36, 37, 38, 40, 49], "patchnr": [16, 108], "em": 16, "definit": [16, 20], "loop": 16, "dpir": [18, 98], "method": [18, 50], "pnp": [18, 19, 20, 21, 27, 40, 45, 110], "condat": 19, "vu": 19, "primal": [19, 38], "dual": [19, 38], "fstep": 19, "gstep": 19, "modul": 19, "regular": [20, 46], "red": [20, 45, 113], "thi": 20, "involv": 20, "particular": 20, "class": [20, 23], "vanilla": [21, 40], "ct": [21, 38], "build": 23, "sampler": [23, 24, 27], "precondit": 23, "standard": 23, "ula": [23, 27, 163], "diffus": [24, 26, 52], "mmse": 24, "mont": [24, 52], "carlo": [24, 52], "implement": [25, 26, 45], "diffpir": [25, 159], "The": [25, 26], "step": [25, 26], "fidel": [25, 38, 49], "put": 25, "all": 25, "togeth": 25, "dp": [26, 158], "schedul": 26, "approxim": 26, "uncertainti": 27, "quantif": 27, "mcmc": 27, "equivari": [29, 44], "knee": 29, "incomplet": 30, "subsampl": 30, "neighbor2neighbor": [31, 67], "loss": [31, 32, 46], "noisi": [31, 32], "sure": 32, "equilibrium": [35, 53], "deq": 35, "low": [35, 40], "soft": 36, "threshold": 36, "lista": 36, "proxim": [36, 37], "gradient": [36, 37], "weight": [37, 44], "scan": 38, "pdnet": 38, "trainabl": 38, "term": 38, "random": 38, "phantom": 38, "chambol": 39, "pock": 39, "constrain": 39, "how": 42, "contribut": 42, "hd5dataset": 43, "patchdataset": [43, 58], "classic": 44, "pretrain": 44, "summari": 44, "etc": 45, "predefin": 45, "transform": 46, "metric": 46, "gpu": 47, "math": 48, "notat": 48, "list": 48, "mathemat": 48, "symbol": 48, "util": [49, 51, 53, 54], "other": [50, 54], "back": 50, "project": 50, "non": 51, "phase": 51, "retriev": 51, "distribut": 51, "markov": 52, "chain": 52, "langevin": 52, "tensorlist": [54, 174], "deepinvers": 55, "pytorch": 55, "librari": 55, "featur": 55, "instal": 55, "get": 55, "start": 55, "find": 55, "help": 55, "lead": 55, "develop": 55, "hdf5dataset": 57, "generate_dataset": 59, "charbonnierloss": 60, "eiloss": 61, "fnejacobianspectralnorm": 62, "jacobianspectralnorm": 63, "lpnorm": 64, "mcloss": 65, "moiloss": 66, "r2rloss": 68, "splittingloss": 69, "suploss": 70, "suregaussianloss": 71, "surepgloss": 72, "surepoissonloss": 73, "tvloss": 74, "artifactremov": 75, "autoencod": 76, "bm3d": 77, "convdecod": 78, "drunet": 79, "deepimageprior": 80, "diffunet": 81, "dncnn": 82, "eplldenois": 83, "equivariantdenois": 84, "gsdrunet": 85, "medianfilt": 86, "pdnet_dualblock": 87, "pdnet_primalblock": 88, "scunet": 89, "swinir": 90, "tgvdenois": 91, "tvdenois": 92, "unet": 93, "waveletdenois": 94, "waveletdictdenois": 95, "amplitudeloss": 96, "baseoptim": 97, "datafidel": 99, "fixedpoint": 101, "indicatorl2": 102, "l1": 103, "l1prior": 104, "l2": 105, "logpoissonlikelihood": 106, "optimiter": 107, "patchprior": 109, "poissonlikelihood": 111, "scoreprior": 114, "tvprior": 115, "tikhonov": 116, "waveletprior": 117, "optim_build": 118, "admmiter": 119, "cpiter": 120, "drsiter": 121, "gditer": 122, "hqsiter": 123, "pgditer": 124, "smiter": 125, "gaussianmixturemodel": 126, "conjugate_gradi": 127, "gradient_desc": 128, "blindblur": 129, "blurfft": 131, "compressedsens": 132, "decomposablephys": 134, "downsampl": 136, "gaussiannois": 137, "haze": 138, "linearphys": 140, "logpoissonnois": 141, "pansharpen": 143, "phaseretriev": 144, "poissongaussiannois": 146, "poissonnois": 147, "randomphaseretriev": 148, "singlephotonlidar": 149, "singlepixelcamera": 150, "uniformgaussiannois": 152, "uniformnois": 153, "adjoint_funct": [154, 156], "gaussian_blur": 155, "ddrm": 157, "diffusionsampl": 160, "montecarlo": 161, "skrock": 162, "train_normalizing_flow": 166, "rotat": 167, "scale": 168, "shift": 169, "basedeq": 170, "baseunfold": 171, "deq_build": 172, "unfolded_build": 173, "cal_psnr": 175, "get_freer_gpu": 176, "load_url_imag": 177, "ones_lik": 178, "plot_curv": 180, "plot_paramet": 181, "rand_lik": 182, "randn_lik": 183, "zeros_lik": 184}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Image deblurring with custom deep explicit prior.": [[0, "image-deblurring-with-custom-deep-explicit-prior"]], "Setup paths for data loading and results.": [[0, "setup-paths-for-data-loading-and-results"], [1, "setup-paths-for-data-loading-and-results"], [4, "setup-paths-for-data-loading-and-results"], [8, "setup-paths-for-data-loading-and-results"], [11, "setup-paths-for-data-loading-and-results"], [12, "setup-paths-for-data-loading-and-results"], [13, "setup-paths-for-data-loading-and-results"], [18, "setup-paths-for-data-loading-and-results"], [19, "setup-paths-for-data-loading-and-results"], [20, "setup-paths-for-data-loading-and-results"], [21, "setup-paths-for-data-loading-and-results"], [29, "setup-paths-for-data-loading-and-results"], [30, "setup-paths-for-data-loading-and-results"], [31, "setup-paths-for-data-loading-and-results"], [32, "setup-paths-for-data-loading-and-results"], [35, "setup-paths-for-data-loading-and-results"], [36, "setup-paths-for-data-loading-and-results"], [37, "setup-paths-for-data-loading-and-results"], [38, "setup-paths-for-data-loading-and-results"], [39, "setup-paths-for-data-loading-and-results"], [40, "setup-paths-for-data-loading-and-results"]], "Load base image datasets and degradation operators.": [[0, "load-base-image-datasets-and-degradation-operators"], [8, "load-base-image-datasets-and-degradation-operators"], [12, "load-base-image-datasets-and-degradation-operators"], [13, "load-base-image-datasets-and-degradation-operators"], [18, "load-base-image-datasets-and-degradation-operators"], [19, "load-base-image-datasets-and-degradation-operators"], [20, "load-base-image-datasets-and-degradation-operators"], [29, "load-base-image-datasets-and-degradation-operators"], [30, "load-base-image-datasets-and-degradation-operators"], [35, "load-base-image-datasets-and-degradation-operators"], [36, "load-base-image-datasets-and-degradation-operators"], [37, "load-base-image-datasets-and-degradation-operators"], [38, "load-base-image-datasets-and-degradation-operators"], [39, "load-base-image-datasets-and-degradation-operators"], [40, "load-base-image-datasets-and-degradation-operators"]], "Define physics operator": [[0, "define-physics-operator"]], "Generate a dataset of blurred images": [[0, "generate-a-dataset-of-blurred-images"]], "Set up the optimization algorithm to solve the inverse problem.": [[0, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [12, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [13, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[0, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Creating your own dataset": [[1, "creating-your-own-dataset"]], "Load base image datasets": [[1, "load-base-image-datasets"], [31, "load-base-image-datasets"], [32, "load-base-image-datasets"]], "Generate a dataset of degraded images and load it.": [[1, "generate-a-dataset-of-degraded-images-and-load-it"]], "Create a dataloader": [[1, "create-a-dataloader"]], "Reconstructing an image using the deep image prior.": [[2, "reconstructing-an-image-using-the-deep-image-prior"]], "Load image from the internet": [[2, "load-image-from-the-internet"], [7, "load-image-from-the-internet"], [23, "load-image-from-the-internet"], [27, "load-image-from-the-internet"]], "Define forward operator and noise model": [[2, "define-forward-operator-and-noise-model"], [23, "define-forward-operator-and-noise-model"], [24, "define-forward-operator-and-noise-model"], [27, "define-forward-operator-and-noise-model"]], "Generate the measurement": [[2, "generate-the-measurement"], [23, "generate-the-measurement"], [24, "generate-the-measurement"], [27, "generate-the-measurement"]], "Define the deep image prior": [[2, "define-the-deep-image-prior"]], "Run DIP algorithm and plot results": [[2, "run-dip-algorithm-and-plot-results"]], "Single photon lidar operator for depth ranging.": [[3, "single-photon-lidar-operator-for-depth-ranging"]], "Create forward model": [[3, "create-forward-model"]], "Generate toy signal and measurement": [[3, "generate-toy-signal-and-measurement"]], "Apply matched filtering to recover the signal and plot the results": [[3, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "Saving and loading models": [[4, "saving-and-loading-models"]], "Define a forward operator": [[4, "define-a-forward-operator"]], "Define a model": [[4, "define-a-model"]], "Stacking and concatenating forward operators.": [[5, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[5, "stacking-forward-operators"]], "Generate toy image": [[5, "generate-toy-image"], [6, "generate-toy-image"]], "Verifying the stacked operator": [[5, "verifying-the-stacked-operator"]], "Concatenating forward operators.": [[5, "concatenating-forward-operators"]], "Verifying the concatenated operator": [[5, "verifying-the-concatenated-operator"]], "Creating a forward operator.": [[6, "creating-a-forward-operator"]], "Creating a custom forward operator.": [[6, "creating-a-custom-forward-operator"]], "Verifying our linear operator": [[6, "verifying-our-linear-operator"]], "Creating a decomposable forward operator.": [[6, "creating-a-decomposable-forward-operator"]], "Benefits of using a decomposable forward operator.": [[6, "benefits-of-using-a-decomposable-forward-operator"]], "A tour of forward sensing operators": [[7, "a-tour-of-forward-sensing-operators"]], "Denoising": [[7, "denoising"], [15, "denoising"], [135, "denoising"]], "Inpainting": [[7, "inpainting"], [15, "inpainting"], [139, "inpainting"]], "Compressed Sensing": [[7, "compressed-sensing"]], "Computed Tomography": [[7, "computed-tomography"]], "MRI": [[7, "mri"], [142, "mri"]], "Decolorize": [[7, "decolorize"], [133, "decolorize"]], "Pan-sharpening": [[7, "pan-sharpening"]], "Single-Pixel Camera": [[7, "single-pixel-camera"]], "Blur": [[7, "blur"], [130, "blur"]], "Super-Resolution": [[7, "super-resolution"]], "Training a reconstruction network.": [[8, "training-a-reconstruction-network"]], "Define forward operator and generate dataset": [[8, "define-forward-operator-and-generate-dataset"], [39, "define-forward-operator-and-generate-dataset"]], "Set up the reconstruction network": [[8, "set-up-the-reconstruction-network"], [29, "set-up-the-reconstruction-network"], [30, "set-up-the-reconstruction-network"], [39, "set-up-the-reconstruction-network"]], "Train the model": [[8, "train-the-model"], [39, "train-the-model"]], "Test the network": [[8, "test-the-network"], [29, "test-the-network"], [30, "test-the-network"], [31, "test-the-network"], [32, "test-the-network"], [35, "test-the-network"], [38, "test-the-network"], [39, "test-the-network"], [40, "test-the-network"]], "Computation times": [[9, "computation-times"], [14, "computation-times"], [17, "computation-times"], [22, "computation-times"], [28, "computation-times"], [33, "computation-times"], [34, "computation-times"], [41, "computation-times"], [56, "computation-times"]], "Examples": [[10, "examples"]], "Basics": [[10, "basics"]], "Optimization": [[10, "optimization"]], "Patch Priors": [[10, "patch-priors"]], "Plug-and-Play": [[10, "plug-and-play"]], "Sampling": [[10, "sampling"]], "Self-Supervised Learning": [[10, "self-supervised-learning"], [46, "self-supervised-learning"]], "Unfolded": [[10, "unfolded"], [53, "id1"]], "3D wavelet denoising": [[11, "d-wavelet-denoising"]], "Load base volume image and denoising operators.": [[11, "load-base-volume-image-and-denoising-operators"]], "Create the denoising operator and solve the problem.": [[11, "create-the-denoising-operator-and-solve-the-problem"]], "Extension to multiple wavelet bases.": [[11, "extension-to-multiple-wavelet-bases"]], "Iterating the Dykstra-like algorithm.": [[11, "iterating-the-dykstra-like-algorithm"]], "Using the Dykstra-like algorithm for wavelet denoising.": [[11, "using-the-dykstra-like-algorithm-for-wavelet-denoising"]], "Image deblurring with Total-Variation (TV) prior": [[12, "image-deblurring-with-total-variation-tv-prior"]], "Generate a dataset of blurred images and load it.": [[12, "generate-a-dataset-of-blurred-images-and-load-it"], [18, "generate-a-dataset-of-blurred-images-and-load-it"]], "Exploring the total variation prior.": [[12, "exploring-the-total-variation-prior"]], "Evaluate the model on the problem and plot the results.": [[12, "evaluate-the-model-on-the-problem-and-plot-the-results"], [13, "evaluate-the-model-on-the-problem-and-plot-the-results"], [19, "evaluate-the-model-on-the-problem-and-plot-the-results"], [21, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Image inpainting with wavelet prior": [[13, "image-inpainting-with-wavelet-prior"]], "Generate an inpainting problem": [[13, "generate-an-inpainting-problem"]], "Exploring the wavelet prior.": [[13, "exploring-the-wavelet-prior"]], "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting": [[15, "expected-patch-log-likelihood-epll-for-denoising-and-inpainting"]], "Load test image and model": [[15, "load-test-image-and-model"]], "Patch priors for limited-angle computed tomography": [[16, "patch-priors-for-limited-angle-computed-tomography"]], "Load training and test images": [[16, "load-training-and-test-images"]], "Set parameters for EPLL and PatchNR": [[16, "set-parameters-for-epll-and-patchnr"]], "Training / EM algorithm": [[16, "training-em-algorithm"]], "Definition of forward operator and noise model": [[16, "definition-of-forward-operator-and-noise-model"]], "Reconstruction loop": [[16, "reconstruction-loop"]], "Run and plot": [[16, "run-and-plot"]], "DPIR method for PnP image deblurring.": [[18, "dpir-method-for-pnp-image-deblurring"]], "Set up the DPIR algorithm to solve the inverse problem.": [[18, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem.": [[18, "evaluate-the-model-on-the-problem"], [20, "evaluate-the-model-on-the-problem"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[19, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "Define a custom optimization algorithm": [[19, "define-a-custom-optimization-algorithm"]], "Define the custom fStep and gStep modules": [[19, "define-the-custom-fstep-and-gstep-modules"]], "Set the forward operator": [[19, "set-the-forward-operator"], [21, "set-the-forward-operator"]], "Set up the PnP algorithm to solve the inverse problem.": [[19, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [21, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Regularization by Denoising (RED) for Super-Resolution.": [[20, "regularization-by-denoising-red-for-super-resolution"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[20, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Vanilla PnP for computed tomography (CT).": [[21, "vanilla-pnp-for-computed-tomography-ct"]], "Load image and parameters": [[21, "load-image-and-parameters"]], "Building your custom sampling algorithm.": [[23, "building-your-custom-sampling-algorithm"]], "Define the sampling iteration": [[23, "define-the-sampling-iteration"]], "Build Sampler class": [[23, "build-sampler-class"]], "Define the prior": [[23, "define-the-prior"], [27, "define-the-prior"]], "Create the preconditioned and standard ULA samplers": [[23, "create-the-preconditioned-and-standard-ula-samplers"]], "Run sampling algorithms and plot results": [[23, "run-sampling-algorithms-and-plot-results"]], "Image reconstruction with a diffusion model": [[24, "image-reconstruction-with-a-diffusion-model"]], "Load example image from the internet": [[24, "load-example-image-from-the-internet"]], "Define the MMSE denoiser": [[24, "define-the-mmse-denoiser"]], "Create the Monte Carlo sampler": [[24, "create-the-monte-carlo-sampler"]], "Run the diffusion algorithm and plot results": [[24, "run-the-diffusion-algorithm-and-plot-results"]], "Create a Monte Carlo sampler": [[24, "create-a-monte-carlo-sampler"]], "Run sampling algorithm and plot results": [[24, "run-sampling-algorithm-and-plot-results"], [27, "run-sampling-algorithm-and-plot-results"]], "Implementing DiffPIR": [[25, "implementing-diffpir"]], "Generate an inverse problem": [[25, "generate-an-inverse-problem"]], "The DiffPIR algorithm": [[25, "the-diffpir-algorithm"]], "Denoising step": [[25, "denoising-step"], [26, "denoising-step"]], "Data fidelity step": [[25, "data-fidelity-step"]], "Sampling step": [[25, "sampling-step"]], "Putting it all together: the DiffPIR algorithm": [[25, "putting-it-all-together-the-diffpir-algorithm"]], "Using the DiffPIR algorithm in your inverse problem": [[25, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Implementing DPS": [[26, "implementing-dps"]], "Diffusion model loading": [[26, "diffusion-model-loading"]], "Define diffusion schedule": [[26, "define-diffusion-schedule"]], "The DPS algorithm": [[26, "the-dps-algorithm"]], "DPS approximation": [[26, "dps-approximation"]], "DPS Algorithm": [[26, "dps-algorithm"]], "Using DPS in your inverse problem": [[26, "using-dps-in-your-inverse-problem"]], "Uncertainty quantification with PnP-ULA.": [[27, "uncertainty-quantification-with-pnp-ula"]], "Define the likelihood": [[27, "define-the-likelihood"]], "Create the MCMC sampler": [[27, "create-the-mcmc-sampler"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[29, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Generate a dataset of knee images and load it.": [[29, "generate-a-dataset-of-knee-images-and-load-it"]], "Set up the training parameters": [[29, "set-up-the-training-parameters"], [30, "set-up-the-training-parameters"], [31, "set-up-the-training-parameters"], [32, "set-up-the-training-parameters"]], "Train the network": [[29, "train-the-network"], [30, "train-the-network"], [31, "train-the-network"], [32, "train-the-network"], [35, "train-the-network"], [38, "train-the-network"], [40, "train-the-network"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[30, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Generate a dataset of subsampled images and load it.": [[30, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[31, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Generate a dataset of noisy images": [[31, "generate-a-dataset-of-noisy-images"], [32, "generate-a-dataset-of-noisy-images"]], "Set up the denoiser network": [[31, "set-up-the-denoiser-network"], [32, "set-up-the-denoiser-network"]], "Self-supervised denoising with the SURE loss.": [[32, "self-supervised-denoising-with-the-sure-loss"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[35, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Generate a dataset of low resolution images and load it.": [[35, "generate-a-dataset-of-low-resolution-images-and-load-it"], [40, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Define the  DEQ algorithm.": [[35, "define-the-deq-algorithm"]], "Define the training parameters.": [[35, "define-the-training-parameters"], [36, "define-the-training-parameters"], [37, "define-the-training-parameters"], [38, "define-the-training-parameters"], [40, "define-the-training-parameters"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[36, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Generate a dataset of compressed measurements and load it.": [[36, "generate-a-dataset-of-compressed-measurements-and-load-it"], [37, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Define the unfolded Proximal Gradient algorithm.": [[36, "define-the-unfolded-proximal-gradient-algorithm"], [37, "define-the-unfolded-proximal-gradient-algorithm"]], "Train the network.": [[36, "train-the-network"], [37, "train-the-network"]], "Test the network.": [[36, "test-the-network"], [37, "test-the-network"]], "Plotting the learned parameters.": [[36, "plotting-the-learned-parameters"]], "Learned iterative custom prior": [[37, "learned-iterative-custom-prior"]], "Plotting the weights of the network.": [[37, "plotting-the-weights-of-the-network"]], "Learned Primal-Dual algorithm for CT scan.": [[38, "learned-primal-dual-algorithm-for-ct-scan"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[38, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define the trainable prior and data fidelity terms.": [[38, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the model.": [[38, "define-the-model"]], "Training dataset of random phantoms.": [[38, "training-dataset-of-random-phantoms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[39, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "Saving the model": [[39, "saving-the-model"]], "Loading the model": [[39, "loading-the-model"]], "Vanilla Unfolded algorithm for super-resolution": [[40, "vanilla-unfolded-algorithm-for-super-resolution"]], "Define the unfolded PnP algorithm.": [[40, "define-the-unfolded-pnp-algorithm"]], "Plotting the trained parameters.": [[40, "plotting-the-trained-parameters"]], "How to Contribute": [[42, "how-to-contribute"]], "Datasets": [[43, "datasets"]], "HD5Dataset": [[43, "hd5dataset"]], "PatchDataset": [[43, "patchdataset"], [58, "patchdataset"]], "Denoisers": [[44, "denoisers"]], "Classical Denoisers": [[44, "classical-denoisers"]], "Deep Denoisers": [[44, "deep-denoisers"]], "Equivariant Denoisers": [[44, "equivariant-denoisers"]], "Pretrained Weights": [[44, "pretrained-weights"]], "Summary of pretrained weights": [[44, "id13"]], "Iterative Reconstruction (PnP, RED, etc.)": [[45, "iterative-reconstruction-pnp-red-etc"]], "Implementing an Algorithm": [[45, "implementing-an-algorithm"]], "Predefined Iterative Algorithms": [[45, "predefined-iterative-algorithms"]], "Deep Image Prior": [[45, "deep-image-prior"]], "Loss": [[46, "loss"]], "Supervised Learning": [[46, "supervised-learning"]], "Transforms": [[46, "transforms"]], "Network Regularization": [[46, "network-regularization"]], "Metrics": [[46, "metrics"]], "Using multiple GPUs": [[47, "using-multiple-gpus"]], "Math Notation": [[48, "math-notation"]], "List of mathematical symbols": [[48, "id1"]], "Optim": [[49, "optim"]], "Data Fidelity": [[49, "data-fidelity"]], "Priors": [[49, "priors"]], "Parameters": [[49, "parameters"]], "Iterators": [[49, "iterators"]], "Generic Optimizers": [[49, "generic-optimizers"]], "Utils": [[49, "utils"], [51, "utils"], [53, "utils"], [54, "utils"]], "Other Reconstruction Methods": [[50, "other-reconstruction-methods"]], "Learned Filtered Back-Projection": [[50, "learned-filtered-back-projection"]], "Physics": [[51, "physics"], [145, "physics"]], "Linear operators": [[51, "linear-operators"]], "Non-linear operators": [[51, "non-linear-operators"]], "Phase retrieval operators": [[51, "phase-retrieval-operators"]], "Noise distributions": [[51, "noise-distributions"]], "Diffusion Algorithms": [[52, "diffusion-algorithms"]], "Diffusion": [[52, "diffusion"]], "Markov Chain Monte Carlo Langevin": [[52, "markov-chain-monte-carlo-langevin"]], "Unfolded Algorithms": [[53, "unfolded-algorithms"]], "Deep Equilibrium": [[53, "deep-equilibrium"]], "Training and Testing": [[54, "training-and-testing"]], "Plotting": [[54, "plotting"]], "TensorList": [[54, "tensorlist"], [174, "tensorlist"]], "Other": [[54, "other"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[55, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Featuring": [[55, "featuring"]], "Installation": [[55, "installation"]], "Getting Started": [[55, "getting-started"]], "Finding Help": [[55, "finding-help"]], "Lead Developers": [[55, "lead-developers"]], "HDF5Dataset": [[57, "hdf5dataset"]], "Examples using HDF5Dataset:": [[57, "examples-using-hdf5dataset"]], "Examples using PatchDataset:": [[58, "examples-using-patchdataset"]], "generate_dataset": [[59, "generate-dataset"]], "Examples using generate_dataset:": [[59, "examples-using-generate-dataset"]], "CharbonnierLoss": [[60, "charbonnierloss"]], "EILoss": [[61, "eiloss"]], "Examples using EILoss:": [[61, "examples-using-eiloss"]], "FNEJacobianSpectralNorm": [[62, "fnejacobianspectralnorm"]], "Examples using FNEJacobianSpectralNorm:": [[62, "examples-using-fnejacobianspectralnorm"]], "JacobianSpectralNorm": [[63, "jacobianspectralnorm"]], "LpNorm": [[64, "lpnorm"]], "MCLoss": [[65, "mcloss"]], "Examples using MCLoss:": [[65, "examples-using-mcloss"]], "MOILoss": [[66, "moiloss"]], "Examples using MOILoss:": [[66, "examples-using-moiloss"]], "Neighbor2Neighbor": [[67, "neighbor2neighbor"]], "Examples using Neighbor2Neighbor:": [[67, "examples-using-neighbor2neighbor"]], "R2RLoss": [[68, "r2rloss"]], "SplittingLoss": [[69, "splittingloss"]], "SupLoss": [[70, "suploss"]], "Examples using SupLoss:": [[70, "examples-using-suploss"]], "SureGaussianLoss": [[71, "suregaussianloss"]], "Examples using SureGaussianLoss:": [[71, "examples-using-suregaussianloss"]], "SurePGLoss": [[72, "surepgloss"]], "Examples using SurePGLoss:": [[72, "examples-using-surepgloss"]], "SurePoissonLoss": [[73, "surepoissonloss"]], "Examples using SurePoissonLoss:": [[73, "examples-using-surepoissonloss"]], "TVLoss": [[74, "tvloss"]], "ArtifactRemoval": [[75, "artifactremoval"]], "Examples using ArtifactRemoval:": [[75, "examples-using-artifactremoval"]], "AutoEncoder": [[76, "autoencoder"]], "BM3D": [[77, "bm3d"]], "ConvDecoder": [[78, "convdecoder"]], "Examples using ConvDecoder:": [[78, "examples-using-convdecoder"]], "DRUNet": [[79, "drunet"]], "Examples using DRUNet:": [[79, "examples-using-drunet"]], "DeepImagePrior": [[80, "deepimageprior"]], "Examples using DeepImagePrior:": [[80, "examples-using-deepimageprior"]], "DiffUNet": [[81, "diffunet"]], "Examples using DiffUNet:": [[81, "examples-using-diffunet"]], "DnCNN": [[82, "dncnn"]], "Examples using DnCNN:": [[82, "examples-using-dncnn"]], "EPLLDenoiser": [[83, "eplldenoiser"]], "EquivariantDenoiser": [[84, "equivariantdenoiser"]], "GSDRUNet": [[85, "gsdrunet"]], "Examples using GSDRUNet:": [[85, "examples-using-gsdrunet"]], "MedianFilter": [[86, "medianfilter"]], "Examples using MedianFilter:": [[86, "examples-using-medianfilter"]], "PDNet_DualBlock": [[87, "pdnet-dualblock"]], "Examples using PDNet_DualBlock:": [[87, "examples-using-pdnet-dualblock"]], "PDNet_PrimalBlock": [[88, "pdnet-primalblock"]], "Examples using PDNet_PrimalBlock:": [[88, "examples-using-pdnet-primalblock"]], "SCUNet": [[89, "scunet"]], "SwinIR": [[90, "swinir"]], "TGVDenoiser": [[91, "tgvdenoiser"]], "TVDenoiser": [[92, "tvdenoiser"]], "UNet": [[93, "unet"]], "Examples using UNet:": [[93, "examples-using-unet"]], "WaveletDenoiser": [[94, "waveletdenoiser"]], "Examples using WaveletDenoiser:": [[94, "examples-using-waveletdenoiser"]], "WaveletDictDenoiser": [[95, "waveletdictdenoiser"]], "Examples using WaveletDictDenoiser:": [[95, "examples-using-waveletdictdenoiser"]], "AmplitudeLoss": [[96, "amplitudeloss"]], "BaseOptim": [[97, "baseoptim"]], "Examples using BaseOptim:": [[97, "examples-using-baseoptim"]], "DPIR": [[98, "dpir"]], "Examples using DPIR:": [[98, "examples-using-dpir"]], "DataFidelity": [[99, "datafidelity"]], "Examples using DataFidelity:": [[99, "examples-using-datafidelity"]], "EPLL": [[100, "epll"]], "Examples using EPLL:": [[100, "examples-using-epll"]], "FixedPoint": [[101, "fixedpoint"]], "IndicatorL2": [[102, "indicatorl2"]], "Examples using IndicatorL2:": [[102, "examples-using-indicatorl2"]], "L1": [[103, "l1"]], "L1Prior": [[104, "l1prior"]], "L2": [[105, "l2"]], "Examples using L2:": [[105, "examples-using-l2"]], "LogPoissonLikelihood": [[106, "logpoissonlikelihood"]], "Examples using LogPoissonLikelihood:": [[106, "examples-using-logpoissonlikelihood"]], "OptimIterator": [[107, "optimiterator"]], "Examples using OptimIterator:": [[107, "examples-using-optimiterator"]], "PatchNR": [[108, "patchnr"]], "Examples using PatchNR:": [[108, "examples-using-patchnr"]], "PatchPrior": [[109, "patchprior"]], "Examples using PatchPrior:": [[109, "examples-using-patchprior"]], "PnP": [[110, "pnp"]], "Examples using PnP:": [[110, "examples-using-pnp"]], "PoissonLikelihood": [[111, "poissonlikelihood"]], "Examples using PoissonLikelihood:": [[111, "examples-using-poissonlikelihood"]], "Prior": [[112, "prior"]], "Examples using Prior:": [[112, "examples-using-prior"]], "RED": [[113, "red"]], "Examples using RED:": [[113, "examples-using-red"]], "ScorePrior": [[114, "scoreprior"]], "Examples using ScorePrior:": [[114, "examples-using-scoreprior"]], "TVPrior": [[115, "tvprior"]], "Examples using TVPrior:": [[115, "examples-using-tvprior"]], "Tikhonov": [[116, "tikhonov"]], "WaveletPrior": [[117, "waveletprior"]], "Examples using WaveletPrior:": [[117, "examples-using-waveletprior"]], "optim_builder": [[118, "optim-builder"]], "Examples using optim_builder:": [[118, "examples-using-optim-builder"]], "ADMMIteration": [[119, "admmiteration"]], "CPIteration": [[120, "cpiteration"]], "Examples using CPIteration:": [[120, "examples-using-cpiteration"]], "DRSIteration": [[121, "drsiteration"]], "GDIteration": [[122, "gditeration"]], "HQSIteration": [[123, "hqsiteration"]], "PGDIteration": [[124, "pgditeration"]], "Examples using PGDIteration:": [[124, "examples-using-pgditeration"]], "SMIteration": [[125, "smiteration"]], "GaussianMixtureModel": [[126, "gaussianmixturemodel"]], "conjugate_gradient": [[127, "conjugate-gradient"]], "gradient_descent": [[128, "gradient-descent"]], "BlindBlur": [[129, "blindblur"]], "Examples using Blur:": [[130, "examples-using-blur"]], "BlurFFT": [[131, "blurfft"]], "Examples using BlurFFT:": [[131, "examples-using-blurfft"]], "CompressedSensing": [[132, "compressedsensing"]], "Examples using CompressedSensing:": [[132, "examples-using-compressedsensing"]], "Examples using Decolorize:": [[133, "examples-using-decolorize"]], "DecomposablePhysics": [[134, "decomposablephysics"]], "Examples using DecomposablePhysics:": [[134, "examples-using-decomposablephysics"]], "Examples using Denoising:": [[135, "examples-using-denoising"]], "Downsampling": [[136, "downsampling"]], "Examples using Downsampling:": [[136, "examples-using-downsampling"]], "GaussianNoise": [[137, "gaussiannoise"]], "Examples using GaussianNoise:": [[137, "examples-using-gaussiannoise"]], "Haze": [[138, "haze"]], "Examples using Inpainting:": [[139, "examples-using-inpainting"]], "LinearPhysics": [[140, "linearphysics"]], "Examples using LinearPhysics:": [[140, "examples-using-linearphysics"]], "LogPoissonNoise": [[141, "logpoissonnoise"]], "Examples using LogPoissonNoise:": [[141, "examples-using-logpoissonnoise"]], "Examples using MRI:": [[142, "examples-using-mri"]], "Pansharpen": [[143, "pansharpen"]], "Examples using Pansharpen:": [[143, "examples-using-pansharpen"]], "PhaseRetrieval": [[144, "phaseretrieval"]], "Examples using Physics:": [[145, "examples-using-physics"]], "PoissonGaussianNoise": [[146, "poissongaussiannoise"]], "Examples using PoissonGaussianNoise:": [[146, "examples-using-poissongaussiannoise"]], "PoissonNoise": [[147, "poissonnoise"]], "Examples using PoissonNoise:": [[147, "examples-using-poissonnoise"]], "RandomPhaseRetrieval": [[148, "randomphaseretrieval"]], "SinglePhotonLidar": [[149, "singlephotonlidar"]], "Examples using SinglePhotonLidar:": [[149, "examples-using-singlephotonlidar"]], "SinglePixelCamera": [[150, "singlepixelcamera"]], "Examples using SinglePixelCamera:": [[150, "examples-using-singlepixelcamera"]], "Tomography": [[151, "tomography"]], "Examples using Tomography:": [[151, "examples-using-tomography"]], "UniformGaussianNoise": [[152, "uniformgaussiannoise"]], "UniformNoise": [[153, "uniformnoise"]], "adjoint_function": [[154, "adjoint-function"], [156, "adjoint-function"]], "gaussian_blur": [[155, "gaussian-blur"]], "Examples using gaussian_blur:": [[155, "examples-using-gaussian-blur"]], "DDRM": [[157, "ddrm"]], "Examples using DDRM:": [[157, "examples-using-ddrm"]], "DPS": [[158, "dps"]], "Examples using DPS:": [[158, "examples-using-dps"]], "DiffPIR": [[159, "diffpir"]], "Examples using DiffPIR:": [[159, "examples-using-diffpir"]], "DiffusionSampler": [[160, "diffusionsampler"]], "Examples using DiffusionSampler:": [[160, "examples-using-diffusionsampler"]], "MonteCarlo": [[161, "montecarlo"]], "Examples using MonteCarlo:": [[161, "examples-using-montecarlo"]], "SKRock": [[162, "skrock"]], "ULA": [[163, "ula"]], "Examples using ULA:": [[163, "examples-using-ula"]], "test": [[164, "test"]], "Examples using test:": [[164, "examples-using-test"]], "train": [[165, "train"]], "Examples using train:": [[165, "examples-using-train"]], "train_normalizing_flow": [[166, "train-normalizing-flow"]], "Examples using train_normalizing_flow:": [[166, "examples-using-train-normalizing-flow"]], "Rotate": [[167, "rotate"]], "Examples using Rotate:": [[167, "examples-using-rotate"]], "Scale": [[168, "scale"]], "Shift": [[169, "shift"]], "BaseDEQ": [[170, "basedeq"]], "Examples using BaseDEQ:": [[170, "examples-using-basedeq"]], "BaseUnfold": [[171, "baseunfold"]], "Examples using BaseUnfold:": [[171, "examples-using-baseunfold"]], "DEQ_builder": [[172, "deq-builder"]], "Examples using DEQ_builder:": [[172, "examples-using-deq-builder"]], "unfolded_builder": [[173, "unfolded-builder"]], "Examples using unfolded_builder:": [[173, "examples-using-unfolded-builder"]], "Examples using TensorList:": [[174, "examples-using-tensorlist"]], "cal_psnr": [[175, "cal-psnr"]], "Examples using cal_psnr:": [[175, "examples-using-cal-psnr"]], "get_freer_gpu": [[176, "get-freer-gpu"]], "Examples using get_freer_gpu:": [[176, "examples-using-get-freer-gpu"]], "load_url_image": [[177, "load-url-image"]], "Examples using load_url_image:": [[177, "examples-using-load-url-image"]], "ones_like": [[178, "ones-like"]], "plot": [[179, "plot"]], "Examples using plot:": [[179, "examples-using-plot"]], "plot_curves": [[180, "plot-curves"]], "Examples using plot_curves:": [[180, "examples-using-plot-curves"]], "plot_parameters": [[181, "plot-parameters"]], "Examples using plot_parameters:": [[181, "examples-using-plot-parameters"]], "rand_like": [[182, "rand-like"]], "randn_like": [[183, "randn-like"]], "zeros_like": [[184, "zeros-like"]]}, "indexentries": {"hdf5dataset (class in deepinv.datasets)": [[57, "deepinv.datasets.HDF5Dataset"]], "patchdataset (class in deepinv.datasets)": [[58, "deepinv.datasets.PatchDataset"]], "generate_dataset (class in deepinv.datasets)": [[59, "deepinv.datasets.generate_dataset"]], "charbonnierloss (class in deepinv.loss)": [[60, "deepinv.loss.CharbonnierLoss"]], "forward() (deepinv.loss.charbonnierloss method)": [[60, "deepinv.loss.CharbonnierLoss.forward"]], "eiloss (class in deepinv.loss)": [[61, "deepinv.loss.EILoss"]], "forward() (deepinv.loss.eiloss method)": [[61, "deepinv.loss.EILoss.forward"]], "fnejacobianspectralnorm (class in deepinv.loss)": [[62, "deepinv.loss.FNEJacobianSpectralNorm"]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[62, "deepinv.loss.FNEJacobianSpectralNorm.forward"]], "jacobianspectralnorm (class in deepinv.loss)": [[63, "deepinv.loss.JacobianSpectralNorm"]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[63, "deepinv.loss.JacobianSpectralNorm.forward"]], "lpnorm (class in deepinv.loss)": [[64, "deepinv.loss.LpNorm"]], "forward() (deepinv.loss.lpnorm method)": [[64, "deepinv.loss.LpNorm.forward"]], "mcloss (class in deepinv.loss)": [[65, "deepinv.loss.MCLoss"]], "forward() (deepinv.loss.mcloss method)": [[65, "deepinv.loss.MCLoss.forward"]], "moiloss (class in deepinv.loss)": [[66, "deepinv.loss.MOILoss"]], "forward() (deepinv.loss.moiloss method)": [[66, "deepinv.loss.MOILoss.forward"]], "neighbor2neighbor (class in deepinv.loss)": [[67, "deepinv.loss.Neighbor2Neighbor"]], "forward() (deepinv.loss.neighbor2neighbor method)": [[67, "deepinv.loss.Neighbor2Neighbor.forward"]], "r2rloss (class in deepinv.loss)": [[68, "deepinv.loss.R2RLoss"]], "forward() (deepinv.loss.r2rloss method)": [[68, "deepinv.loss.R2RLoss.forward"]], "splittingloss (class in deepinv.loss)": [[69, "deepinv.loss.SplittingLoss"]], "forward() (deepinv.loss.splittingloss method)": [[69, "deepinv.loss.SplittingLoss.forward"]], "suploss (class in deepinv.loss)": [[70, "deepinv.loss.SupLoss"]], "forward() (deepinv.loss.suploss method)": [[70, "deepinv.loss.SupLoss.forward"]], "suregaussianloss (class in deepinv.loss)": [[71, "deepinv.loss.SureGaussianLoss"]], "forward() (deepinv.loss.suregaussianloss method)": [[71, "deepinv.loss.SureGaussianLoss.forward"]], "surepgloss (class in deepinv.loss)": [[72, "deepinv.loss.SurePGLoss"]], "forward() (deepinv.loss.surepgloss method)": [[72, "deepinv.loss.SurePGLoss.forward"]], "surepoissonloss (class in deepinv.loss)": [[73, "deepinv.loss.SurePoissonLoss"]], "forward() (deepinv.loss.surepoissonloss method)": [[73, "deepinv.loss.SurePoissonLoss.forward"]], "tvloss (class in deepinv.loss)": [[74, "deepinv.loss.TVLoss"]], "forward() (deepinv.loss.tvloss method)": [[74, "deepinv.loss.TVLoss.forward"]], "artifactremoval (class in deepinv.models)": [[75, "deepinv.models.ArtifactRemoval"]], "forward() (deepinv.models.artifactremoval method)": [[75, "deepinv.models.ArtifactRemoval.forward"]], "autoencoder (class in deepinv.models)": [[76, "deepinv.models.AutoEncoder"]], "forward() (deepinv.models.autoencoder method)": [[76, "deepinv.models.AutoEncoder.forward"]], "bm3d (class in deepinv.models)": [[77, "deepinv.models.BM3D"]], "forward() (deepinv.models.bm3d method)": [[77, "deepinv.models.BM3D.forward"]], "convdecoder (class in deepinv.models)": [[78, "deepinv.models.ConvDecoder"]], "forward() (deepinv.models.convdecoder method)": [[78, "deepinv.models.ConvDecoder.forward"]], "drunet (class in deepinv.models)": [[79, "deepinv.models.DRUNet"]], "forward() (deepinv.models.drunet method)": [[79, "deepinv.models.DRUNet.forward"]], "deepimageprior (class in deepinv.models)": [[80, "deepinv.models.DeepImagePrior"]], "forward() (deepinv.models.deepimageprior method)": [[80, "deepinv.models.DeepImagePrior.forward"]], "diffunet (class in deepinv.models)": [[81, "deepinv.models.DiffUNet"]], "convert_to_fp16() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.convert_to_fp16"]], "convert_to_fp32() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.convert_to_fp32"]], "find_nearest() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.find_nearest"]], "forward() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.forward"]], "forward_denoise() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.forward_denoise"]], "forward_diffusion() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.forward_diffusion"]], "get_alpha_prod() (deepinv.models.diffunet method)": [[81, "deepinv.models.DiffUNet.get_alpha_prod"]], "dncnn (class in deepinv.models)": [[82, "deepinv.models.DnCNN"]], "forward() (deepinv.models.dncnn method)": [[82, "deepinv.models.DnCNN.forward"]], "eplldenoiser (class in deepinv.models)": [[83, "deepinv.models.EPLLDenoiser"]], "forward() (deepinv.models.eplldenoiser method)": [[83, "deepinv.models.EPLLDenoiser.forward"]], "equivariantdenoiser (class in deepinv.models)": [[84, "deepinv.models.EquivariantDenoiser"]], "forward() (deepinv.models.equivariantdenoiser method)": [[84, "deepinv.models.EquivariantDenoiser.forward"]], "gsdrunet (class in deepinv.models)": [[85, "deepinv.models.GSDRUNet"]], "medianfilter (class in deepinv.models)": [[86, "deepinv.models.MedianFilter"]], "forward() (deepinv.models.medianfilter method)": [[86, "deepinv.models.MedianFilter.forward"]], "pdnet_dualblock (class in deepinv.models)": [[87, "deepinv.models.PDNet_DualBlock"]], "forward() (deepinv.models.pdnet_dualblock method)": [[87, "deepinv.models.PDNet_DualBlock.forward"]], "pdnet_primalblock (class in deepinv.models)": [[88, "deepinv.models.PDNet_PrimalBlock"]], "forward() (deepinv.models.pdnet_primalblock method)": [[88, "deepinv.models.PDNet_PrimalBlock.forward"]], "scunet (class in deepinv.models)": [[89, "deepinv.models.SCUNet"]], "forward() (deepinv.models.scunet method)": [[89, "deepinv.models.SCUNet.forward"]], "swinir (class in deepinv.models)": [[90, "deepinv.models.SwinIR"]], "forward() (deepinv.models.swinir method)": [[90, "deepinv.models.SwinIR.forward"]], "tgvdenoiser (class in deepinv.models)": [[91, "deepinv.models.TGVDenoiser"]], "epsilon() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.epsilon"]], "epsilon_adjoint() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.epsilon_adjoint"]], "forward() (deepinv.models.tgvdenoiser method)": [[91, "deepinv.models.TGVDenoiser.forward"]], "nabla() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.nabla"]], "nabla_adjoint() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.nabla_adjoint"]], "tvdenoiser (class in deepinv.models)": [[92, "deepinv.models.TVDenoiser"]], "forward() (deepinv.models.tvdenoiser method)": [[92, "deepinv.models.TVDenoiser.forward"]], "nabla() (deepinv.models.tvdenoiser static method)": [[92, "deepinv.models.TVDenoiser.nabla"]], "nabla_adjoint() (deepinv.models.tvdenoiser static method)": [[92, "deepinv.models.TVDenoiser.nabla_adjoint"]], "unet (class in deepinv.models)": [[93, "deepinv.models.UNet"]], "forward() (deepinv.models.unet method)": [[93, "deepinv.models.UNet.forward"]], "waveletdenoiser (class in deepinv.models)": [[94, "deepinv.models.WaveletDenoiser"]], "crop_output() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.crop_output"]], "dwt() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.dwt"]], "flatten_coeffs() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.flatten_coeffs"]], "forward() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.forward"]], "hard_threshold_topk() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.hard_threshold_topk"]], "iwt() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.iwt"]], "pad_input() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.pad_input"]], "prox_l0() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.prox_l0"]], "prox_l1() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.prox_l1"]], "psi() (deepinv.models.waveletdenoiser static method)": [[94, "deepinv.models.WaveletDenoiser.psi"]], "reshape_ths() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.reshape_ths"]], "threshold_3d() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.threshold_3D"]], "threshold_nd() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.threshold_ND"]], "thresold_2d() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.thresold_2D"]], "thresold_func() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.thresold_func"]], "waveletdictdenoiser (class in deepinv.models)": [[95, "deepinv.models.WaveletDictDenoiser"]], "forward() (deepinv.models.waveletdictdenoiser method)": [[95, "deepinv.models.WaveletDictDenoiser.forward"]], "amplitudeloss (class in deepinv.optim)": [[96, "deepinv.optim.AmplitudeLoss"]], "d() (deepinv.optim.amplitudeloss method)": [[96, "deepinv.optim.AmplitudeLoss.d"]], "grad_d() (deepinv.optim.amplitudeloss method)": [[96, "deepinv.optim.AmplitudeLoss.grad_d"]], "baseoptim (class in deepinv.optim)": [[97, "deepinv.optim.BaseOptim"]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.check_conv_fn"]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.check_iteration_fn"]], "forward() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.forward"]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.init_iterate_fn"]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.init_metrics_fn"]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_data_fidelity_fn"]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_metrics_fn"]], "update_params_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_params_fn"]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_prior_fn"]], "dpir (class in deepinv.optim)": [[98, "deepinv.optim.DPIR"]], "datafidelity (class in deepinv.optim)": [[99, "deepinv.optim.DataFidelity"]], "d() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.d"]], "forward() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.forward"]], "grad() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.grad"]], "grad_d() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.grad_d"]], "prox() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.prox"]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.prox_conjugate"]], "prox_d() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.prox_d"]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[99, "deepinv.optim.DataFidelity.prox_d_conjugate"]], "epll (class in deepinv.optim)": [[100, "deepinv.optim.EPLL"]], "forward() (deepinv.optim.epll method)": [[100, "deepinv.optim.EPLL.forward"]], "negative_log_likelihood() (deepinv.optim.epll method)": [[100, "deepinv.optim.EPLL.negative_log_likelihood"]], "fixedpoint (class in deepinv.optim)": [[101, "deepinv.optim.FixedPoint"]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[101, "deepinv.optim.FixedPoint.anderson_acceleration_step"]], "forward() (deepinv.optim.fixedpoint method)": [[101, "deepinv.optim.FixedPoint.forward"]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[101, "deepinv.optim.FixedPoint.init_anderson_acceleration"]], "indicatorl2 (class in deepinv.optim)": [[102, "deepinv.optim.IndicatorL2"]], "d() (deepinv.optim.indicatorl2 method)": [[102, "deepinv.optim.IndicatorL2.d"]], "prox() (deepinv.optim.indicatorl2 method)": [[102, "deepinv.optim.IndicatorL2.prox"]], "prox_d() (deepinv.optim.indicatorl2 method)": [[102, "deepinv.optim.IndicatorL2.prox_d"]], "l1 (class in deepinv.optim)": [[103, "deepinv.optim.L1"]], "d() (deepinv.optim.l1 method)": [[103, "deepinv.optim.L1.d"]], "grad_d() (deepinv.optim.l1 method)": [[103, "deepinv.optim.L1.grad_d"]], "prox() (deepinv.optim.l1 method)": [[103, "deepinv.optim.L1.prox"]], "prox_d() (deepinv.optim.l1 method)": [[103, "deepinv.optim.L1.prox_d"]], "l1prior (class in deepinv.optim)": [[104, "deepinv.optim.L1Prior"]], "g() (deepinv.optim.l1prior method)": [[104, "deepinv.optim.L1Prior.g"]], "prox() (deepinv.optim.l1prior method)": [[104, "deepinv.optim.L1Prior.prox"]], "l2 (class in deepinv.optim)": [[105, "deepinv.optim.L2"]], "d() (deepinv.optim.l2 method)": [[105, "deepinv.optim.L2.d"]], "grad_d() (deepinv.optim.l2 method)": [[105, "deepinv.optim.L2.grad_d"]], "prox() (deepinv.optim.l2 method)": [[105, "deepinv.optim.L2.prox"]], "prox_d() (deepinv.optim.l2 method)": [[105, "deepinv.optim.L2.prox_d"]], "logpoissonlikelihood (class in deepinv.optim)": [[106, "deepinv.optim.LogPoissonLikelihood"]], "d() (deepinv.optim.logpoissonlikelihood method)": [[106, "deepinv.optim.LogPoissonLikelihood.d"]], "optimiterator (class in deepinv.optim)": [[107, "deepinv.optim.OptimIterator"]], "forward() (deepinv.optim.optimiterator method)": [[107, "deepinv.optim.OptimIterator.forward"]], "relaxation_step() (deepinv.optim.optimiterator method)": [[107, "deepinv.optim.OptimIterator.relaxation_step"]], "patchnr (class in deepinv.optim)": [[108, "deepinv.optim.PatchNR"]], "forward() (deepinv.optim.patchnr method)": [[108, "deepinv.optim.PatchNR.forward"]], "patchprior (class in deepinv.optim)": [[109, "deepinv.optim.PatchPrior"]], "g() (deepinv.optim.patchprior method)": [[109, "deepinv.optim.PatchPrior.g"]], "pnp (class in deepinv.optim)": [[110, "deepinv.optim.PnP"]], "prox() (deepinv.optim.pnp method)": [[110, "deepinv.optim.PnP.prox"]], "poissonlikelihood (class in deepinv.optim)": [[111, "deepinv.optim.PoissonLikelihood"]], "d() (deepinv.optim.poissonlikelihood method)": [[111, "deepinv.optim.PoissonLikelihood.d"]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[111, "deepinv.optim.PoissonLikelihood.grad_d"]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[111, "deepinv.optim.PoissonLikelihood.prox_d"]], "prior (class in deepinv.optim)": [[112, "deepinv.optim.Prior"]], "forward() (deepinv.optim.prior method)": [[112, "deepinv.optim.Prior.forward"]], "g() (deepinv.optim.prior method)": [[112, "deepinv.optim.Prior.g"]], "grad() (deepinv.optim.prior method)": [[112, "deepinv.optim.Prior.grad"]], "prox() (deepinv.optim.prior method)": [[112, "deepinv.optim.Prior.prox"]], "prox_conjugate() (deepinv.optim.prior method)": [[112, "deepinv.optim.Prior.prox_conjugate"]], "red (class in deepinv.optim)": [[113, "deepinv.optim.RED"]], "grad() (deepinv.optim.red method)": [[113, "deepinv.optim.RED.grad"]], "scoreprior (class in deepinv.optim)": [[114, "deepinv.optim.ScorePrior"]], "grad() (deepinv.optim.scoreprior method)": [[114, "deepinv.optim.ScorePrior.grad"]], "tvprior (class in deepinv.optim)": [[115, "deepinv.optim.TVPrior"]], "g() (deepinv.optim.tvprior method)": [[115, "deepinv.optim.TVPrior.g"]], "nabla() (deepinv.optim.tvprior method)": [[115, "deepinv.optim.TVPrior.nabla"]], "nabla_adjoint() (deepinv.optim.tvprior method)": [[115, "deepinv.optim.TVPrior.nabla_adjoint"]], "prox() (deepinv.optim.tvprior method)": [[115, "deepinv.optim.TVPrior.prox"]], "tikhonov (class in deepinv.optim)": [[116, "deepinv.optim.Tikhonov"]], "g() (deepinv.optim.tikhonov method)": [[116, "deepinv.optim.Tikhonov.g"]], "grad() (deepinv.optim.tikhonov method)": [[116, "deepinv.optim.Tikhonov.grad"]], "prox() (deepinv.optim.tikhonov method)": [[116, "deepinv.optim.Tikhonov.prox"]], "waveletprior (class in deepinv.optim)": [[117, "deepinv.optim.WaveletPrior"]], "g() (deepinv.optim.waveletprior method)": [[117, "deepinv.optim.WaveletPrior.g"]], "prox() (deepinv.optim.waveletprior method)": [[117, "deepinv.optim.WaveletPrior.prox"]], "psi() (deepinv.optim.waveletprior method)": [[117, "deepinv.optim.WaveletPrior.psi"]], "optim_builder() (in module deepinv.optim)": [[118, "deepinv.optim.optim_builder"]], "admmiteration (class in deepinv.optim.optim_iterators)": [[119, "deepinv.optim.optim_iterators.ADMMIteration"]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[119, "deepinv.optim.optim_iterators.ADMMIteration.forward"]], "cpiteration (class in deepinv.optim.optim_iterators)": [[120, "deepinv.optim.optim_iterators.CPIteration"]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[120, "deepinv.optim.optim_iterators.CPIteration.forward"]], "drsiteration (class in deepinv.optim.optim_iterators)": [[121, "deepinv.optim.optim_iterators.DRSIteration"]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[121, "deepinv.optim.optim_iterators.DRSIteration.forward"]], "gditeration (class in deepinv.optim.optim_iterators)": [[122, "deepinv.optim.optim_iterators.GDIteration"]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[122, "deepinv.optim.optim_iterators.GDIteration.forward"]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[123, "deepinv.optim.optim_iterators.HQSIteration"]], "pgditeration (class in deepinv.optim.optim_iterators)": [[124, "deepinv.optim.optim_iterators.PGDIteration"]], "smiteration (class in deepinv.optim.optim_iterators)": [[125, "deepinv.optim.optim_iterators.SMIteration"]], "forward() (deepinv.optim.optim_iterators.smiteration method)": [[125, "deepinv.optim.optim_iterators.SMIteration.forward"]], "gaussianmixturemodel (class in deepinv.optim.utils)": [[126, "deepinv.optim.utils.GaussianMixtureModel"]], "classify() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.classify"]], "component_log_likelihoods() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.component_log_likelihoods"]], "fit() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.fit"]], "forward() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.forward"]], "get_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.get_cov"]], "get_cov_inv_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.get_cov_inv_reg"]], "get_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.get_weights"]], "load_state_dict() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.load_state_dict"]], "set_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.set_cov"]], "set_cov_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.set_cov_reg"]], "set_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[126, "deepinv.optim.utils.GaussianMixtureModel.set_weights"]], "conjugate_gradient (class in deepinv.optim.utils)": [[127, "deepinv.optim.utils.conjugate_gradient"]], "gradient_descent (class in deepinv.optim.utils)": [[128, "deepinv.optim.utils.gradient_descent"]], "a() (deepinv.physics.blindblur method)": [[129, "deepinv.physics.BlindBlur.A"]], "a_dagger() (deepinv.physics.blindblur method)": [[129, "deepinv.physics.BlindBlur.A_dagger"]], "blindblur (class in deepinv.physics)": [[129, "deepinv.physics.BlindBlur"]], "a() (deepinv.physics.blur method)": [[130, "deepinv.physics.Blur.A"]], "a_adjoint() (deepinv.physics.blur method)": [[130, "deepinv.physics.Blur.A_adjoint"]], "blur (class in deepinv.physics)": [[130, "deepinv.physics.Blur"]], "blurfft (class in deepinv.physics)": [[131, "deepinv.physics.BlurFFT"]], "a() (deepinv.physics.compressedsensing method)": [[132, "deepinv.physics.CompressedSensing.A"]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[132, "deepinv.physics.CompressedSensing.A_adjoint"]], "a_dagger() (deepinv.physics.compressedsensing method)": [[132, "deepinv.physics.CompressedSensing.A_dagger"]], "compressedsensing (class in deepinv.physics)": [[132, "deepinv.physics.CompressedSensing"]], "decolorize (class in deepinv.physics)": [[133, "deepinv.physics.Decolorize"]], "a() (deepinv.physics.decomposablephysics method)": [[134, "deepinv.physics.DecomposablePhysics.A"]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[134, "deepinv.physics.DecomposablePhysics.A_adjoint"]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[134, "deepinv.physics.DecomposablePhysics.A_dagger"]], "decomposablephysics (class in deepinv.physics)": [[134, "deepinv.physics.DecomposablePhysics"]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[134, "deepinv.physics.DecomposablePhysics.prox_l2"]], "denoising (class in deepinv.physics)": [[135, "deepinv.physics.Denoising"]], "a() (deepinv.physics.downsampling method)": [[136, "deepinv.physics.Downsampling.A"]], "a_adjoint() (deepinv.physics.downsampling method)": [[136, "deepinv.physics.Downsampling.A_adjoint"]], "downsampling (class in deepinv.physics)": [[136, "deepinv.physics.Downsampling"]], "prox_l2() (deepinv.physics.downsampling method)": [[136, "deepinv.physics.Downsampling.prox_l2"]], "gaussiannoise (class in deepinv.physics)": [[137, "deepinv.physics.GaussianNoise"]], "forward() (deepinv.physics.gaussiannoise method)": [[137, "deepinv.physics.GaussianNoise.forward"]], "a() (deepinv.physics.haze method)": [[138, "deepinv.physics.Haze.A"]], "a_dagger() (deepinv.physics.haze method)": [[138, "deepinv.physics.Haze.A_dagger"]], "haze (class in deepinv.physics)": [[138, "deepinv.physics.Haze"]], "inpainting (class in deepinv.physics)": [[139, "deepinv.physics.Inpainting"]], "noise() (deepinv.physics.inpainting method)": [[139, "deepinv.physics.Inpainting.noise"]], "a_adjoint() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.A_adjoint"]], "a_dagger() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.A_dagger"]], "a_vjp() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.A_vjp"]], "linearphysics (class in deepinv.physics)": [[140, "deepinv.physics.LinearPhysics"]], "__add__() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.__add__"]], "__mul__() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.__mul__"]], "adjointness_test() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.adjointness_test"]], "compute_norm() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.compute_norm"]], "prox_l2() (deepinv.physics.linearphysics method)": [[140, "deepinv.physics.LinearPhysics.prox_l2"]], "logpoissonnoise (class in deepinv.physics)": [[141, "deepinv.physics.LogPoissonNoise"]], "forward() (deepinv.physics.logpoissonnoise method)": [[141, "deepinv.physics.LogPoissonNoise.forward"]], "mri (class in deepinv.physics)": [[142, "deepinv.physics.MRI"]], "reset() (deepinv.physics.mri method)": [[142, "deepinv.physics.MRI.reset"]], "sample_mask() (deepinv.physics.mri method)": [[142, "deepinv.physics.MRI.sample_mask"]], "a() (deepinv.physics.pansharpen method)": [[143, "deepinv.physics.Pansharpen.A"]], "a_adjoint() (deepinv.physics.pansharpen method)": [[143, "deepinv.physics.Pansharpen.A_adjoint"]], "pansharpen (class in deepinv.physics)": [[143, "deepinv.physics.Pansharpen"]], "forward() (deepinv.physics.pansharpen method)": [[143, "deepinv.physics.Pansharpen.forward"]], "a() (deepinv.physics.phaseretrieval method)": [[144, "deepinv.physics.PhaseRetrieval.A"]], "a_dagger() (deepinv.physics.phaseretrieval method)": [[144, "deepinv.physics.PhaseRetrieval.A_dagger"]], "a_vjp() (deepinv.physics.phaseretrieval method)": [[144, "deepinv.physics.PhaseRetrieval.A_vjp"]], "b_dagger() (deepinv.physics.phaseretrieval method)": [[144, "deepinv.physics.PhaseRetrieval.B_dagger"]], "phaseretrieval (class in deepinv.physics)": [[144, "deepinv.physics.PhaseRetrieval"]], "forward() (deepinv.physics.phaseretrieval method)": [[144, "deepinv.physics.PhaseRetrieval.forward"]], "a() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.A"]], "a_dagger() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.A_dagger"]], "a_vjp() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.A_vjp"]], "physics (class in deepinv.physics)": [[145, "deepinv.physics.Physics"]], "__add__() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.__add__"]], "__mul__() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.__mul__"]], "forward() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.forward"]], "noise() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.noise"]], "sensor() (deepinv.physics.physics method)": [[145, "deepinv.physics.Physics.sensor"]], "poissongaussiannoise (class in deepinv.physics)": [[146, "deepinv.physics.PoissonGaussianNoise"]], "forward() (deepinv.physics.poissongaussiannoise method)": [[146, "deepinv.physics.PoissonGaussianNoise.forward"]], "poissonnoise (class in deepinv.physics)": [[147, "deepinv.physics.PoissonNoise"]], "forward() (deepinv.physics.poissonnoise method)": [[147, "deepinv.physics.PoissonNoise.forward"]], "randomphaseretrieval (class in deepinv.physics)": [[148, "deepinv.physics.RandomPhaseRetrieval"]], "a() (deepinv.physics.singlephotonlidar method)": [[149, "deepinv.physics.SinglePhotonLidar.A"]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[149, "deepinv.physics.SinglePhotonLidar.A_dagger"]], "singlephotonlidar (class in deepinv.physics)": [[149, "deepinv.physics.SinglePhotonLidar"]], "singlepixelcamera (class in deepinv.physics)": [[150, "deepinv.physics.SinglePixelCamera"]], "a() (deepinv.physics.tomography method)": [[151, "deepinv.physics.Tomography.A"]], "a_adjoint() (deepinv.physics.tomography method)": [[151, "deepinv.physics.Tomography.A_adjoint"]], "a_dagger() (deepinv.physics.tomography method)": [[151, "deepinv.physics.Tomography.A_dagger"]], "tomography (class in deepinv.physics)": [[151, "deepinv.physics.Tomography"]], "uniformgaussiannoise (class in deepinv.physics)": [[152, "deepinv.physics.UniformGaussianNoise"]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[152, "deepinv.physics.UniformGaussianNoise.forward"]], "uniformnoise (class in deepinv.physics)": [[153, "deepinv.physics.UniformNoise"]], "forward() (deepinv.physics.uniformnoise method)": [[153, "deepinv.physics.UniformNoise.forward"]], "adjoint_function (class in deepinv.physics)": [[154, "deepinv.physics.adjoint_function"]], "gaussian_blur() (in module deepinv.physics.blur)": [[155, "deepinv.physics.blur.gaussian_blur"]], "adjoint_function() (in module deepinv.physics.forward)": [[156, "deepinv.physics.forward.adjoint_function"]], "ddrm (class in deepinv.sampling)": [[157, "deepinv.sampling.DDRM"]], "forward() (deepinv.sampling.ddrm method)": [[157, "deepinv.sampling.DDRM.forward"]], "dps (class in deepinv.sampling)": [[158, "deepinv.sampling.DPS"]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[158, "deepinv.sampling.DPS.compute_alpha_betas"]], "forward() (deepinv.sampling.dps method)": [[158, "deepinv.sampling.DPS.forward"]], "diffpir (class in deepinv.sampling)": [[159, "deepinv.sampling.DiffPIR"]], "find_nearest() (deepinv.sampling.diffpir method)": [[159, "deepinv.sampling.DiffPIR.find_nearest"]], "forward() (deepinv.sampling.diffpir method)": [[159, "deepinv.sampling.DiffPIR.forward"]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[159, "deepinv.sampling.DiffPIR.get_alpha_beta"]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[159, "deepinv.sampling.DiffPIR.get_alpha_prod"]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[159, "deepinv.sampling.DiffPIR.get_noise_schedule"]], "diffusionsampler (class in deepinv.sampling)": [[160, "deepinv.sampling.DiffusionSampler"]], "montecarlo (class in deepinv.sampling)": [[161, "deepinv.sampling.MonteCarlo"]], "forward() (deepinv.sampling.montecarlo method)": [[161, "deepinv.sampling.MonteCarlo.forward"]], "get_chain() (deepinv.sampling.montecarlo method)": [[161, "deepinv.sampling.MonteCarlo.get_chain"]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[161, "deepinv.sampling.MonteCarlo.mean_has_converged"]], "reset() (deepinv.sampling.montecarlo method)": [[161, "deepinv.sampling.MonteCarlo.reset"]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[161, "deepinv.sampling.MonteCarlo.var_has_converged"]], "skrock (class in deepinv.sampling)": [[162, "deepinv.sampling.SKRock"]], "ula (class in deepinv.sampling)": [[163, "deepinv.sampling.ULA"]], "test() (in module deepinv)": [[164, "deepinv.test"]], "train() (in module deepinv)": [[165, "deepinv.train"]], "train_normalizing_flow() (in module deepinv.training_utils)": [[166, "deepinv.training_utils.train_normalizing_flow"]], "rotate (class in deepinv.transform)": [[167, "deepinv.transform.Rotate"]], "forward() (deepinv.transform.rotate method)": [[167, "deepinv.transform.Rotate.forward"]], "scale (class in deepinv.transform)": [[168, "deepinv.transform.Scale"]], "forward() (deepinv.transform.scale method)": [[168, "deepinv.transform.Scale.forward"]], "shift (class in deepinv.transform)": [[169, "deepinv.transform.Shift"]], "forward() (deepinv.transform.shift method)": [[169, "deepinv.transform.Shift.forward"]], "basedeq (class in deepinv.unfolded)": [[170, "deepinv.unfolded.BaseDEQ"]], "forward() (deepinv.unfolded.basedeq method)": [[170, "deepinv.unfolded.BaseDEQ.forward"]], "baseunfold (class in deepinv.unfolded)": [[171, "deepinv.unfolded.BaseUnfold"]], "deq_builder() (in module deepinv.unfolded)": [[172, "deepinv.unfolded.DEQ_builder"]], "unfolded_builder() (in module deepinv.unfolded)": [[173, "deepinv.unfolded.unfolded_builder"]], "tensorlist (class in deepinv.utils)": [[174, "deepinv.utils.TensorList"]], "__add__() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.__add__"]], "__mul__() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.__mul__"]], "__neg__() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.__neg__"]], "__sub__() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.__sub__"]], "__truediv__() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.__truediv__"]], "append() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.append"]], "conj() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.conj"]], "flatten() (deepinv.utils.tensorlist method)": [[174, "deepinv.utils.TensorList.flatten"]], "cal_psnr() (in module deepinv.utils)": [[175, "deepinv.utils.cal_psnr"]], "get_freer_gpu() (in module deepinv.utils)": [[176, "deepinv.utils.get_freer_gpu"]], "load_url_image() (in module deepinv.utils)": [[177, "deepinv.utils.load_url_image"]], "ones_like() (in module deepinv.utils)": [[178, "deepinv.utils.ones_like"]], "plot() (in module deepinv.utils)": [[179, "deepinv.utils.plot"]], "plot_curves() (in module deepinv.utils)": [[180, "deepinv.utils.plot_curves"]], "plot_parameters() (in module deepinv.utils)": [[181, "deepinv.utils.plot_parameters"]], "rand_like() (in module deepinv.utils)": [[182, "deepinv.utils.rand_like"]], "randn_like() (in module deepinv.utils)": [[183, "deepinv.utils.randn_like"]], "zeros_like() (in module deepinv.utils)": [[184, "deepinv.utils.zeros_like"]]}})