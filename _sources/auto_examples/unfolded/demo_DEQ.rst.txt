
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/unfolded/demo_DEQ.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_unfolded_demo_DEQ.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_unfolded_demo_DEQ.py:


Deep Equilibrium (DEQ) algorithms for image deblurring
====================================================================================================

This a toy example to show you how to use DEQ to solve a deblurring problem. 
Note that this is a small dataset for training. For optimal results, use a larger dataset.
For visualizing the training, you can use Weight&Bias (wandb) by setting ``wandb_vis=True``.

For now DEQ is only possible with PGD, HQS and GD optimization algorithms. 

.. GENERATED FROM PYTHON SOURCE LINES 12-25

.. code-block:: Python


    import deepinv as dinv
    from pathlib import Path
    import torch
    from torch.utils.data import DataLoader
    from deepinv.models import DnCNN
    from deepinv.optim.data_fidelity import L2
    from deepinv.optim.prior import PnP
    from deepinv.unfolded import DEQ_builder
    from deepinv.training_utils import train, test
    from torchvision import transforms
    from deepinv.utils.demo import load_dataset








.. GENERATED FROM PYTHON SOURCE LINES 26-29

Setup paths for data loading and results.
----------------------------------------------------------------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 29-41

.. code-block:: Python


    BASE_DIR = Path(".")
    ORIGINAL_DATA_DIR = BASE_DIR / "datasets"
    DATA_DIR = BASE_DIR / "measurements"
    RESULTS_DIR = BASE_DIR / "results"
    CKPT_DIR = BASE_DIR / "ckpts"

    # Set the global random seed from pytorch to ensure reproducibility of the example.
    torch.manual_seed(0)

    device = dinv.utils.get_freer_gpu() if torch.cuda.is_available() else "cpu"








.. GENERATED FROM PYTHON SOURCE LINES 42-45

Load base image datasets and degradation operators.
----------------------------------------------------------------------------------------
In this example, we use the CBSD500 dataset and the Set3C dataset for testing.

.. GENERATED FROM PYTHON SOURCE LINES 45-68

.. code-block:: Python


    img_size = 32
    n_channels = 3  # 3 for color images, 1 for gray-scale images
    operation = "deblurring"
    # For simplicity, we use a small dataset for training.
    # To be replaced for optimal results. For example, you can use the larger "drunet" dataset.
    train_dataset_name = "CBSD500"
    test_dataset_name = "set3c"
    # Generate training and evaluation datasets in HDF5 folders and load them.
    test_transform = transforms.Compose(
        [transforms.CenterCrop(img_size), transforms.ToTensor()]
    )
    train_transform = transforms.Compose(
        [transforms.RandomCrop(img_size), transforms.ToTensor()]
    )
    train_base_dataset = load_dataset(
        train_dataset_name, ORIGINAL_DATA_DIR, transform=train_transform
    )
    test_base_dataset = load_dataset(
        test_dataset_name, ORIGINAL_DATA_DIR, transform=test_transform
    )









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Generate a dataset of low resolution images and load it.
----------------------------------------------------------------------------------------
We use the Downsampling class from the physics module to generate a dataset of low resolution images.

.. GENERATED FROM PYTHON SOURCE LINES 72-107

.. code-block:: Python



    # Use parallel dataloader if using a GPU to fasten training, otherwise, as all computes are on CPU, use synchronous
    # dataloading.
    num_workers = 4 if torch.cuda.is_available() else 0

    # Degradation parameters
    noise_level_img = 0.03

    # Generate the gaussian blur downsampling operator.
    physics = dinv.physics.BlurFFT(
        img_size=(n_channels, img_size, img_size),
        filter=dinv.physics.blur.gaussian_blur(),
        device=device,
        noise_model=dinv.physics.GaussianNoise(sigma=noise_level_img),
    )
    my_dataset_name = "demo_DEQ"
    n_images_max = (
        1000 if torch.cuda.is_available() else 10
    )  # maximal number of images used for training
    measurement_dir = DATA_DIR / train_dataset_name / operation
    generated_datasets_path = dinv.datasets.generate_dataset(
        train_dataset=train_base_dataset,
        test_dataset=test_base_dataset,
        physics=physics,
        device=device,
        save_dir=measurement_dir,
        train_datapoints=n_images_max,
        num_workers=num_workers,
        dataset_filename=str(my_dataset_name),
    )

    train_dataset = dinv.datasets.HDF5Dataset(path=generated_datasets_path, train=True)
    test_dataset = dinv.datasets.HDF5Dataset(path=generated_datasets_path, train=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computing train measurement vectors from base dataset...
      0%|          | 0/1 [00:00<?, ?it/s]    100%|██████████| 1/1 [00:00<00:00, 65.17it/s]
    Computing test measurement vectors from base dataset...
      0%|          | 0/1 [00:00<?, ?it/s]    100%|██████████| 1/1 [00:00<00:00, 131.63it/s]
    Dataset has been saved in measurements/CBSD500/deblurring




.. GENERATED FROM PYTHON SOURCE LINES 108-114

Define the  DEQ algorithm.
----------------------------------------------------------------------------------------
We use the helper function :meth:`deepinv.unfolded.DEQ_builder` to defined the DEQ architecture.
The chosen algorithm is here HQS (Half Quadratic Splitting).
Note for DEQ, the prior and regularization parameters should be common for all iterations
to keep a constant fixed-point operator.

.. GENERATED FROM PYTHON SOURCE LINES 114-162

.. code-block:: Python



    # Select the data fidelity term
    data_fidelity = L2()

    # Set up the trainable denoising prior
    denoiser = DnCNN(
        in_channels=3, out_channels=3, depth=7, device=device, pretrained=None, train=True
    )

    # Here the prior model is common for all iterations
    prior = PnP(denoiser=denoiser)

    # Unrolled optimization algorithm parameters
    max_iter = 20 if torch.cuda.is_available() else 10
    stepsize = 1.0  # Initial value for the stepsize. A single stepsize is common for each iterations.
    sigma_denoiser = 0.03  # Initial value for the denoiser parameter. A single value is common for each iterations.
    anderson_acceleration_forward = True  # use Anderson acceleration for the forward pass.
    anderson_acceleration_backward = (
        True  # use Anderson acceleration for the backward pass.
    )
    anderson_history_size = (
        5 if torch.cuda.is_available() else 3
    )  # history size for Anderson acceleration.

    params_algo = {  # wrap all the restoration parameters in a 'params_algo' dictionary
        "stepsize": stepsize,
        "g_param": sigma_denoiser,
    }
    trainable_params = [
        "stepsize",
        "g_param",
    ]  # define which parameters from 'params_algo' are trainable

    # Define the unfolded trainable model.
    model = DEQ_builder(
        iteration="HQS",  # For now DEQ is only possible with PGD, HQS and GD optimization algorithms.
        params_algo=params_algo.copy(),
        trainable_params=trainable_params,
        data_fidelity=data_fidelity,
        max_iter=max_iter,
        prior=prior,
        anderson_acceleration=anderson_acceleration_forward,
        anderson_acceleration_backward=anderson_acceleration_backward,
        history_size_backward=anderson_history_size,
        history_size=anderson_history_size,
    )








.. GENERATED FROM PYTHON SOURCE LINES 163-166

Define the training parameters.
-------------------------------
We use the Adam optimizer and the StepLR scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 166-192

.. code-block:: Python



    # training parameters
    epochs = 10
    learning_rate = 5e-4
    train_batch_size = 32 if torch.cuda.is_available() else 1
    test_batch_size = 3

    # choose optimizer and scheduler
    optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate, weight_decay=1e-8)
    scheduler = torch.optim.lr_scheduler.StepLR(optimizer, step_size=int(epochs * 0.8))

    # choose supervised training loss
    losses = [dinv.loss.SupLoss(metric=dinv.metric.mse())]

    # Logging parameters
    verbose = True
    wandb_vis = False  # plot curves and images in Weight&Bias

    train_dataloader = DataLoader(
        train_dataset, batch_size=train_batch_size, num_workers=num_workers, shuffle=True
    )
    test_dataloader = DataLoader(
        test_dataset, batch_size=test_batch_size, num_workers=num_workers, shuffle=False
    )








.. GENERATED FROM PYTHON SOURCE LINES 193-196

Train the network
-----------------
We train the network using the library's train function.

.. GENERATED FROM PYTHON SOURCE LINES 196-212

.. code-block:: Python


    train(
        model=model,
        train_dataloader=train_dataloader,
        eval_dataloader=test_dataloader,
        epochs=epochs,
        scheduler=scheduler,
        losses=losses,
        physics=physics,
        optimizer=optimizer,
        device=device,
        save_path=str(CKPT_DIR / operation),
        verbose=verbose,
        wandb_vis=wandb_vis,  # training visualization can be done in Weight&Bias
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The model has 188165 trainable parameters
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 1:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 1:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-1.97, total_loss=0.828, train_psnr=0.818]    Epoch 1:  10%|█         | 1/10 [00:00<00:02,  4.46it/s, eval_psnr=-1.97, total_loss=0.828, train_psnr=0.818]    Epoch 1:  10%|█         | 1/10 [00:00<00:02,  4.46it/s, eval_psnr=-1.97, total_loss=0.828, train_psnr=0.818]    Epoch 1:  10%|█         | 1/10 [00:00<00:02,  4.46it/s, eval_psnr=-1.97, total_loss=0.873, train_psnr=0.596]    Epoch 1:  20%|██        | 2/10 [00:00<00:01,  4.40it/s, eval_psnr=-1.97, total_loss=0.873, train_psnr=0.596]    Epoch 1:  20%|██        | 2/10 [00:00<00:01,  4.40it/s, eval_psnr=-1.97, total_loss=0.873, train_psnr=0.596]    Epoch 1:  20%|██        | 2/10 [00:00<00:01,  4.40it/s, eval_psnr=-1.97, total_loss=0.911, train_psnr=0.416]    Epoch 1:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-1.97, total_loss=0.911, train_psnr=0.416]    Epoch 1:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-1.97, total_loss=0.911, train_psnr=0.416]    Epoch 1:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-1.97, total_loss=0.719, train_psnr=2.42]     Epoch 1:  40%|████      | 4/10 [00:00<00:01,  4.45it/s, eval_psnr=-1.97, total_loss=0.719, train_psnr=2.42]    Epoch 1:  40%|████      | 4/10 [00:00<00:01,  4.45it/s, eval_psnr=-1.97, total_loss=0.719, train_psnr=2.42]    Epoch 1:  40%|████      | 4/10 [00:01<00:01,  4.45it/s, eval_psnr=-1.97, total_loss=0.891, train_psnr=1.54]    Epoch 1:  50%|█████     | 5/10 [00:01<00:01,  4.46it/s, eval_psnr=-1.97, total_loss=0.891, train_psnr=1.54]    Epoch 1:  50%|█████     | 5/10 [00:01<00:01,  4.46it/s, eval_psnr=-1.97, total_loss=0.891, train_psnr=1.54]    Epoch 1:  50%|█████     | 5/10 [00:01<00:01,  4.46it/s, eval_psnr=-1.97, total_loss=0.785, train_psnr=2.27]    Epoch 1:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-1.97, total_loss=0.785, train_psnr=2.27]    Epoch 1:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-1.97, total_loss=0.785, train_psnr=2.27]    Epoch 1:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-1.97, total_loss=0.791, train_psnr=2.06]    Epoch 1:  70%|███████   | 7/10 [00:01<00:00,  4.40it/s, eval_psnr=-1.97, total_loss=0.791, train_psnr=2.06]    Epoch 1:  70%|███████   | 7/10 [00:01<00:00,  4.40it/s, eval_psnr=-1.97, total_loss=0.791, train_psnr=2.06]    Epoch 1:  70%|███████   | 7/10 [00:01<00:00,  4.40it/s, eval_psnr=-1.97, total_loss=0.72, train_psnr=2.61]     Epoch 1:  80%|████████  | 8/10 [00:01<00:00,  4.43it/s, eval_psnr=-1.97, total_loss=0.72, train_psnr=2.61]    Epoch 1:  80%|████████  | 8/10 [00:01<00:00,  4.43it/s, eval_psnr=-1.97, total_loss=0.72, train_psnr=2.61]    Epoch 1:  80%|████████  | 8/10 [00:02<00:00,  4.43it/s, eval_psnr=-1.97, total_loss=0.689, train_psnr=2.72]    Epoch 1:  90%|█████████ | 9/10 [00:02<00:00,  4.45it/s, eval_psnr=-1.97, total_loss=0.689, train_psnr=2.72]    Epoch 1:  90%|█████████ | 9/10 [00:02<00:00,  4.45it/s, eval_psnr=-1.97, total_loss=0.689, train_psnr=2.72]    Epoch 1:  90%|█████████ | 9/10 [00:02<00:00,  4.45it/s, eval_psnr=-1.97, total_loss=0.791, train_psnr=2.22]    Epoch 1: 100%|██████████| 10/10 [00:02<00:00,  4.47it/s, eval_psnr=-1.97, total_loss=0.791, train_psnr=2.22]    Epoch 1: 100%|██████████| 10/10 [00:02<00:00,  4.45it/s, eval_psnr=-1.97, total_loss=0.791, train_psnr=2.22]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 2:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 2:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-4.62, total_loss=3.89, train_psnr=-5.9]    Epoch 2:  10%|█         | 1/10 [00:00<00:02,  4.28it/s, eval_psnr=-4.62, total_loss=3.89, train_psnr=-5.9]    Epoch 2:  10%|█         | 1/10 [00:00<00:02,  4.28it/s, eval_psnr=-4.62, total_loss=3.89, train_psnr=-5.9]    Epoch 2:  10%|█         | 1/10 [00:00<00:02,  4.28it/s, eval_psnr=-4.62, total_loss=3.84, train_psnr=-5.85]    Epoch 2:  20%|██        | 2/10 [00:00<00:01,  4.40it/s, eval_psnr=-4.62, total_loss=3.84, train_psnr=-5.85]    Epoch 2:  20%|██        | 2/10 [00:00<00:01,  4.40it/s, eval_psnr=-4.62, total_loss=3.84, train_psnr=-5.85]    Epoch 2:  20%|██        | 2/10 [00:00<00:01,  4.40it/s, eval_psnr=-4.62, total_loss=5.95, train_psnr=-7.26]    Epoch 2:  30%|███       | 3/10 [00:00<00:01,  4.45it/s, eval_psnr=-4.62, total_loss=5.95, train_psnr=-7.26]    Epoch 2:  30%|███       | 3/10 [00:00<00:01,  4.45it/s, eval_psnr=-4.62, total_loss=5.95, train_psnr=-7.26]    Epoch 2:  30%|███       | 3/10 [00:00<00:01,  4.45it/s, eval_psnr=-4.62, total_loss=4.93, train_psnr=-6.13]    Epoch 2:  40%|████      | 4/10 [00:00<00:01,  4.47it/s, eval_psnr=-4.62, total_loss=4.93, train_psnr=-6.13]    Epoch 2:  40%|████      | 4/10 [00:00<00:01,  4.47it/s, eval_psnr=-4.62, total_loss=4.93, train_psnr=-6.13]    Epoch 2:  40%|████      | 4/10 [00:01<00:01,  4.47it/s, eval_psnr=-4.62, total_loss=4.05, train_psnr=-4.34]    Epoch 2:  50%|█████     | 5/10 [00:01<00:01,  4.48it/s, eval_psnr=-4.62, total_loss=4.05, train_psnr=-4.34]    Epoch 2:  50%|█████     | 5/10 [00:01<00:01,  4.48it/s, eval_psnr=-4.62, total_loss=4.05, train_psnr=-4.34]    Epoch 2:  50%|█████     | 5/10 [00:01<00:01,  4.48it/s, eval_psnr=-4.62, total_loss=3.48, train_psnr=-3.28]    Epoch 2:  60%|██████    | 6/10 [00:01<00:00,  4.44it/s, eval_psnr=-4.62, total_loss=3.48, train_psnr=-3.28]    Epoch 2:  60%|██████    | 6/10 [00:01<00:00,  4.44it/s, eval_psnr=-4.62, total_loss=3.48, train_psnr=-3.28]    Epoch 2:  60%|██████    | 6/10 [00:01<00:00,  4.44it/s, eval_psnr=-4.62, total_loss=3.31, train_psnr=-3.31]    Epoch 2:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-4.62, total_loss=3.31, train_psnr=-3.31]    Epoch 2:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-4.62, total_loss=3.31, train_psnr=-3.31]    Epoch 2:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-4.62, total_loss=3.24, train_psnr=-3.45]    Epoch 2:  80%|████████  | 8/10 [00:01<00:00,  4.47it/s, eval_psnr=-4.62, total_loss=3.24, train_psnr=-3.45]    Epoch 2:  80%|████████  | 8/10 [00:01<00:00,  4.47it/s, eval_psnr=-4.62, total_loss=3.24, train_psnr=-3.45]    Epoch 2:  80%|████████  | 8/10 [00:02<00:00,  4.47it/s, eval_psnr=-4.62, total_loss=2.95, train_psnr=-2.88]    Epoch 2:  90%|█████████ | 9/10 [00:02<00:00,  4.47it/s, eval_psnr=-4.62, total_loss=2.95, train_psnr=-2.88]    Epoch 2:  90%|█████████ | 9/10 [00:02<00:00,  4.47it/s, eval_psnr=-4.62, total_loss=2.95, train_psnr=-2.88]    Epoch 2:  90%|█████████ | 9/10 [00:02<00:00,  4.47it/s, eval_psnr=-4.62, total_loss=2.76, train_psnr=-2.62]    Epoch 2: 100%|██████████| 10/10 [00:02<00:00,  4.46it/s, eval_psnr=-4.62, total_loss=2.76, train_psnr=-2.62]    Epoch 2: 100%|██████████| 10/10 [00:02<00:00,  4.45it/s, eval_psnr=-4.62, total_loss=2.76, train_psnr=-2.62]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 3:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 3:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-5.91, total_loss=10.4, train_psnr=-10.2]    Epoch 3:  10%|█         | 1/10 [00:00<00:02,  4.48it/s, eval_psnr=-5.91, total_loss=10.4, train_psnr=-10.2]    Epoch 3:  10%|█         | 1/10 [00:00<00:02,  4.48it/s, eval_psnr=-5.91, total_loss=10.4, train_psnr=-10.2]    Epoch 3:  10%|█         | 1/10 [00:00<00:02,  4.48it/s, eval_psnr=-5.91, total_loss=10.3, train_psnr=-10.1]    Epoch 3:  20%|██        | 2/10 [00:00<00:01,  4.48it/s, eval_psnr=-5.91, total_loss=10.3, train_psnr=-10.1]    Epoch 3:  20%|██        | 2/10 [00:00<00:01,  4.48it/s, eval_psnr=-5.91, total_loss=10.3, train_psnr=-10.1]    Epoch 3:  20%|██        | 2/10 [00:00<00:01,  4.48it/s, eval_psnr=-5.91, total_loss=8.72, train_psnr=-9.23]    Epoch 3:  30%|███       | 3/10 [00:00<00:01,  4.49it/s, eval_psnr=-5.91, total_loss=8.72, train_psnr=-9.23]    Epoch 3:  30%|███       | 3/10 [00:00<00:01,  4.49it/s, eval_psnr=-5.91, total_loss=8.72, train_psnr=-9.23]    Epoch 3:  30%|███       | 3/10 [00:00<00:01,  4.49it/s, eval_psnr=-5.91, total_loss=7.68, train_psnr=-8.56]    Epoch 3:  40%|████      | 4/10 [00:00<00:01,  4.48it/s, eval_psnr=-5.91, total_loss=7.68, train_psnr=-8.56]    Epoch 3:  40%|████      | 4/10 [00:00<00:01,  4.48it/s, eval_psnr=-5.91, total_loss=7.68, train_psnr=-8.56]    Epoch 3:  40%|████      | 4/10 [00:01<00:01,  4.48it/s, eval_psnr=-5.91, total_loss=10, train_psnr=-9.43]      Epoch 3:  50%|█████     | 5/10 [00:01<00:01,  4.38it/s, eval_psnr=-5.91, total_loss=10, train_psnr=-9.43]    Epoch 3:  50%|█████     | 5/10 [00:01<00:01,  4.38it/s, eval_psnr=-5.91, total_loss=10, train_psnr=-9.43]    Epoch 3:  50%|█████     | 5/10 [00:01<00:01,  4.38it/s, eval_psnr=-5.91, total_loss=71.3, train_psnr=-12.2]    Epoch 3:  60%|██████    | 6/10 [00:01<00:00,  4.42it/s, eval_psnr=-5.91, total_loss=71.3, train_psnr=-12.2]    Epoch 3:  60%|██████    | 6/10 [00:01<00:00,  4.42it/s, eval_psnr=-5.91, total_loss=71.3, train_psnr=-12.2]    Epoch 3:  60%|██████    | 6/10 [00:01<00:00,  4.42it/s, eval_psnr=-5.91, total_loss=896, train_psnr=-15.8]     Epoch 3:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-5.91, total_loss=896, train_psnr=-15.8]    Epoch 3:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-5.91, total_loss=896, train_psnr=-15.8]    Epoch 3:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-5.91, total_loss=875, train_psnr=-17.4]    Epoch 3:  80%|████████  | 8/10 [00:01<00:00,  4.47it/s, eval_psnr=-5.91, total_loss=875, train_psnr=-17.4]    Epoch 3:  80%|████████  | 8/10 [00:01<00:00,  4.47it/s, eval_psnr=-5.91, total_loss=875, train_psnr=-17.4]    Epoch 3:  80%|████████  | 8/10 [00:02<00:00,  4.47it/s, eval_psnr=-5.91, total_loss=894, train_psnr=-18.8]    Epoch 3:  90%|█████████ | 9/10 [00:02<00:00,  4.44it/s, eval_psnr=-5.91, total_loss=894, train_psnr=-18.8]    Epoch 3:  90%|█████████ | 9/10 [00:02<00:00,  4.44it/s, eval_psnr=-5.91, total_loss=894, train_psnr=-18.8]    Epoch 3:  90%|█████████ | 9/10 [00:02<00:00,  4.44it/s, eval_psnr=-5.91, total_loss=839, train_psnr=-19.5]    Epoch 3: 100%|██████████| 10/10 [00:02<00:00,  4.43it/s, eval_psnr=-5.91, total_loss=839, train_psnr=-19.5]    Epoch 3: 100%|██████████| 10/10 [00:02<00:00,  4.44it/s, eval_psnr=-5.91, total_loss=839, train_psnr=-19.5]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 4:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 4:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-24, total_loss=749, train_psnr=-28.7]    Epoch 4:  10%|█         | 1/10 [00:00<00:01,  4.50it/s, eval_psnr=-24, total_loss=749, train_psnr=-28.7]    Epoch 4:  10%|█         | 1/10 [00:00<00:01,  4.50it/s, eval_psnr=-24, total_loss=749, train_psnr=-28.7]    Epoch 4:  10%|█         | 1/10 [00:00<00:01,  4.50it/s, eval_psnr=-24, total_loss=392, train_psnr=-22]      Epoch 4:  20%|██        | 2/10 [00:00<00:01,  4.50it/s, eval_psnr=-24, total_loss=392, train_psnr=-22]    Epoch 4:  20%|██        | 2/10 [00:00<00:01,  4.50it/s, eval_psnr=-24, total_loss=392, train_psnr=-22]    Epoch 4:  20%|██        | 2/10 [00:00<00:01,  4.50it/s, eval_psnr=-24, total_loss=369, train_psnr=-23.1]    Epoch 4:  30%|███       | 3/10 [00:00<00:01,  4.49it/s, eval_psnr=-24, total_loss=369, train_psnr=-23.1]    Epoch 4:  30%|███       | 3/10 [00:00<00:01,  4.49it/s, eval_psnr=-24, total_loss=369, train_psnr=-23.1]    Epoch 4:  30%|███       | 3/10 [00:00<00:01,  4.49it/s, eval_psnr=-24, total_loss=283, train_psnr=-20.6]    Epoch 4:  40%|████      | 4/10 [00:00<00:01,  4.40it/s, eval_psnr=-24, total_loss=283, train_psnr=-20.6]    Epoch 4:  40%|████      | 4/10 [00:00<00:01,  4.40it/s, eval_psnr=-24, total_loss=283, train_psnr=-20.6]    Epoch 4:  40%|████      | 4/10 [00:01<00:01,  4.40it/s, eval_psnr=-24, total_loss=268, train_psnr=-21.2]    Epoch 4:  50%|█████     | 5/10 [00:01<00:01,  4.44it/s, eval_psnr=-24, total_loss=268, train_psnr=-21.2]    Epoch 4:  50%|█████     | 5/10 [00:01<00:01,  4.44it/s, eval_psnr=-24, total_loss=268, train_psnr=-21.2]    Epoch 4:  50%|█████     | 5/10 [00:01<00:01,  4.44it/s, eval_psnr=-24, total_loss=242, train_psnr=-21.1]    Epoch 4:  60%|██████    | 6/10 [00:01<00:00,  4.46it/s, eval_psnr=-24, total_loss=242, train_psnr=-21.1]    Epoch 4:  60%|██████    | 6/10 [00:01<00:00,  4.46it/s, eval_psnr=-24, total_loss=242, train_psnr=-21.1]    Epoch 4:  60%|██████    | 6/10 [00:01<00:00,  4.46it/s, eval_psnr=-24, total_loss=216, train_psnr=-20.6]    Epoch 4:  70%|███████   | 7/10 [00:01<00:00,  4.48it/s, eval_psnr=-24, total_loss=216, train_psnr=-20.6]    Epoch 4:  70%|███████   | 7/10 [00:01<00:00,  4.48it/s, eval_psnr=-24, total_loss=216, train_psnr=-20.6]    Epoch 4:  70%|███████   | 7/10 [00:01<00:00,  4.48it/s, eval_psnr=-24, total_loss=193, train_psnr=-19.9]    Epoch 4:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-24, total_loss=193, train_psnr=-19.9]    Epoch 4:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-24, total_loss=193, train_psnr=-19.9]    Epoch 4:  80%|████████  | 8/10 [00:02<00:00,  4.44it/s, eval_psnr=-24, total_loss=176, train_psnr=-19.5]    Epoch 4:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-24, total_loss=176, train_psnr=-19.5]    Epoch 4:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-24, total_loss=176, train_psnr=-19.5]    Epoch 4:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-24, total_loss=178, train_psnr=-19.8]    Epoch 4: 100%|██████████| 10/10 [00:02<00:00,  4.44it/s, eval_psnr=-24, total_loss=178, train_psnr=-19.8]    Epoch 4: 100%|██████████| 10/10 [00:02<00:00,  4.45it/s, eval_psnr=-24, total_loss=178, train_psnr=-19.8]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 5:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 5:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-23, total_loss=64, train_psnr=-18.1]    Epoch 5:  10%|█         | 1/10 [00:00<00:01,  4.51it/s, eval_psnr=-23, total_loss=64, train_psnr=-18.1]    Epoch 5:  10%|█         | 1/10 [00:00<00:01,  4.51it/s, eval_psnr=-23, total_loss=64, train_psnr=-18.1]    Epoch 5:  10%|█         | 1/10 [00:00<00:01,  4.51it/s, eval_psnr=-23, total_loss=62.9, train_psnr=-18]    Epoch 5:  20%|██        | 2/10 [00:00<00:01,  4.49it/s, eval_psnr=-23, total_loss=62.9, train_psnr=-18]    Epoch 5:  20%|██        | 2/10 [00:00<00:01,  4.49it/s, eval_psnr=-23, total_loss=62.9, train_psnr=-18]    Epoch 5:  20%|██        | 2/10 [00:00<00:01,  4.49it/s, eval_psnr=-23, total_loss=69.3, train_psnr=-18.4]    Epoch 5:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-23, total_loss=69.3, train_psnr=-18.4]    Epoch 5:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-23, total_loss=69.3, train_psnr=-18.4]    Epoch 5:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-23, total_loss=56.6, train_psnr=-16.9]    Epoch 5:  40%|████      | 4/10 [00:00<00:01,  4.46it/s, eval_psnr=-23, total_loss=56.6, train_psnr=-16.9]    Epoch 5:  40%|████      | 4/10 [00:00<00:01,  4.46it/s, eval_psnr=-23, total_loss=56.6, train_psnr=-16.9]    Epoch 5:  40%|████      | 4/10 [00:01<00:01,  4.46it/s, eval_psnr=-23, total_loss=72.6, train_psnr=-17.8]    Epoch 5:  50%|█████     | 5/10 [00:01<00:01,  4.47it/s, eval_psnr=-23, total_loss=72.6, train_psnr=-17.8]    Epoch 5:  50%|█████     | 5/10 [00:01<00:01,  4.47it/s, eval_psnr=-23, total_loss=72.6, train_psnr=-17.8]    Epoch 5:  50%|█████     | 5/10 [00:01<00:01,  4.47it/s, eval_psnr=-23, total_loss=73.5, train_psnr=-18]      Epoch 5:  60%|██████    | 6/10 [00:01<00:00,  4.48it/s, eval_psnr=-23, total_loss=73.5, train_psnr=-18]    Epoch 5:  60%|██████    | 6/10 [00:01<00:00,  4.48it/s, eval_psnr=-23, total_loss=73.5, train_psnr=-18]    Epoch 5:  60%|██████    | 6/10 [00:01<00:00,  4.48it/s, eval_psnr=-23, total_loss=70.7, train_psnr=-17.9]    Epoch 5:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-23, total_loss=70.7, train_psnr=-17.9]    Epoch 5:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-23, total_loss=70.7, train_psnr=-17.9]    Epoch 5:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-23, total_loss=88.1, train_psnr=-18.6]    Epoch 5:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-23, total_loss=88.1, train_psnr=-18.6]    Epoch 5:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-23, total_loss=88.1, train_psnr=-18.6]    Epoch 5:  80%|████████  | 8/10 [00:02<00:00,  4.44it/s, eval_psnr=-23, total_loss=82.5, train_psnr=-18.3]    Epoch 5:  90%|█████████ | 9/10 [00:02<00:00,  4.46it/s, eval_psnr=-23, total_loss=82.5, train_psnr=-18.3]    Epoch 5:  90%|█████████ | 9/10 [00:02<00:00,  4.46it/s, eval_psnr=-23, total_loss=82.5, train_psnr=-18.3]    Epoch 5:  90%|█████████ | 9/10 [00:02<00:00,  4.46it/s, eval_psnr=-23, total_loss=78.9, train_psnr=-18.1]    Epoch 5: 100%|██████████| 10/10 [00:02<00:00,  4.46it/s, eval_psnr=-23, total_loss=78.9, train_psnr=-18.1]    Epoch 5: 100%|██████████| 10/10 [00:02<00:00,  4.46it/s, eval_psnr=-23, total_loss=78.9, train_psnr=-18.1]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 6:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 6:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-24.5, total_loss=51.3, train_psnr=-17.1]    Epoch 6:  10%|█         | 1/10 [00:00<00:02,  4.47it/s, eval_psnr=-24.5, total_loss=51.3, train_psnr=-17.1]    Epoch 6:  10%|█         | 1/10 [00:00<00:02,  4.47it/s, eval_psnr=-24.5, total_loss=51.3, train_psnr=-17.1]    Epoch 6:  10%|█         | 1/10 [00:00<00:02,  4.47it/s, eval_psnr=-24.5, total_loss=38.9, train_psnr=-15.7]    Epoch 6:  20%|██        | 2/10 [00:00<00:01,  4.33it/s, eval_psnr=-24.5, total_loss=38.9, train_psnr=-15.7]    Epoch 6:  20%|██        | 2/10 [00:00<00:01,  4.33it/s, eval_psnr=-24.5, total_loss=38.9, train_psnr=-15.7]    Epoch 6:  20%|██        | 2/10 [00:00<00:01,  4.33it/s, eval_psnr=-24.5, total_loss=69, train_psnr=-17.5]      Epoch 6:  30%|███       | 3/10 [00:00<00:01,  4.40it/s, eval_psnr=-24.5, total_loss=69, train_psnr=-17.5]    Epoch 6:  30%|███       | 3/10 [00:00<00:01,  4.40it/s, eval_psnr=-24.5, total_loss=69, train_psnr=-17.5]    Epoch 6:  30%|███       | 3/10 [00:00<00:01,  4.40it/s, eval_psnr=-24.5, total_loss=57.2, train_psnr=-16.4]    Epoch 6:  40%|████      | 4/10 [00:00<00:01,  4.43it/s, eval_psnr=-24.5, total_loss=57.2, train_psnr=-16.4]    Epoch 6:  40%|████      | 4/10 [00:00<00:01,  4.43it/s, eval_psnr=-24.5, total_loss=57.2, train_psnr=-16.4]    Epoch 6:  40%|████      | 4/10 [00:01<00:01,  4.43it/s, eval_psnr=-24.5, total_loss=51.8, train_psnr=-16.1]    Epoch 6:  50%|█████     | 5/10 [00:01<00:01,  4.44it/s, eval_psnr=-24.5, total_loss=51.8, train_psnr=-16.1]    Epoch 6:  50%|█████     | 5/10 [00:01<00:01,  4.44it/s, eval_psnr=-24.5, total_loss=51.8, train_psnr=-16.1]    Epoch 6:  50%|█████     | 5/10 [00:01<00:01,  4.44it/s, eval_psnr=-24.5, total_loss=54.4, train_psnr=-16.5]    Epoch 6:  60%|██████    | 6/10 [00:01<00:00,  4.39it/s, eval_psnr=-24.5, total_loss=54.4, train_psnr=-16.5]    Epoch 6:  60%|██████    | 6/10 [00:01<00:00,  4.39it/s, eval_psnr=-24.5, total_loss=54.4, train_psnr=-16.5]    Epoch 6:  60%|██████    | 6/10 [00:01<00:00,  4.39it/s, eval_psnr=-24.5, total_loss=47.1, train_psnr=-14.9]    Epoch 6:  70%|███████   | 7/10 [00:01<00:00,  4.40it/s, eval_psnr=-24.5, total_loss=47.1, train_psnr=-14.9]    Epoch 6:  70%|███████   | 7/10 [00:01<00:00,  4.40it/s, eval_psnr=-24.5, total_loss=47.1, train_psnr=-14.9]    Epoch 6:  70%|███████   | 7/10 [00:01<00:00,  4.40it/s, eval_psnr=-24.5, total_loss=45.6, train_psnr=-14.9]    Epoch 6:  80%|████████  | 8/10 [00:01<00:00,  4.42it/s, eval_psnr=-24.5, total_loss=45.6, train_psnr=-14.9]    Epoch 6:  80%|████████  | 8/10 [00:01<00:00,  4.42it/s, eval_psnr=-24.5, total_loss=45.6, train_psnr=-14.9]    Epoch 6:  80%|████████  | 8/10 [00:02<00:00,  4.42it/s, eval_psnr=-24.5, total_loss=42.4, train_psnr=-14.6]    Epoch 6:  90%|█████████ | 9/10 [00:02<00:00,  4.44it/s, eval_psnr=-24.5, total_loss=42.4, train_psnr=-14.6]    Epoch 6:  90%|█████████ | 9/10 [00:02<00:00,  4.44it/s, eval_psnr=-24.5, total_loss=42.4, train_psnr=-14.6]    Epoch 6:  90%|█████████ | 9/10 [00:02<00:00,  4.44it/s, eval_psnr=-24.5, total_loss=40.2, train_psnr=-14.5]    Epoch 6: 100%|██████████| 10/10 [00:02<00:00,  4.45it/s, eval_psnr=-24.5, total_loss=40.2, train_psnr=-14.5]    Epoch 6: 100%|██████████| 10/10 [00:02<00:00,  4.43it/s, eval_psnr=-24.5, total_loss=40.2, train_psnr=-14.5]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 7:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 7:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-14.1, total_loss=3.85, train_psnr=-5.86]    Epoch 7:  10%|█         | 1/10 [00:00<00:02,  4.35it/s, eval_psnr=-14.1, total_loss=3.85, train_psnr=-5.86]    Epoch 7:  10%|█         | 1/10 [00:00<00:02,  4.35it/s, eval_psnr=-14.1, total_loss=3.85, train_psnr=-5.86]    Epoch 7:  10%|█         | 1/10 [00:00<00:02,  4.35it/s, eval_psnr=-14.1, total_loss=8.45, train_psnr=-8.51]    Epoch 7:  20%|██        | 2/10 [00:00<00:01,  4.45it/s, eval_psnr=-14.1, total_loss=8.45, train_psnr=-8.51]    Epoch 7:  20%|██        | 2/10 [00:00<00:01,  4.45it/s, eval_psnr=-14.1, total_loss=8.45, train_psnr=-8.51]    Epoch 7:  20%|██        | 2/10 [00:00<00:01,  4.45it/s, eval_psnr=-14.1, total_loss=7.76, train_psnr=-8.35]    Epoch 7:  30%|███       | 3/10 [00:00<00:01,  4.47it/s, eval_psnr=-14.1, total_loss=7.76, train_psnr=-8.35]    Epoch 7:  30%|███       | 3/10 [00:00<00:01,  4.47it/s, eval_psnr=-14.1, total_loss=7.76, train_psnr=-8.35]    Epoch 7:  30%|███       | 3/10 [00:00<00:01,  4.47it/s, eval_psnr=-14.1, total_loss=8.73, train_psnr=-8.93]    Epoch 7:  40%|████      | 4/10 [00:00<00:01,  4.47it/s, eval_psnr=-14.1, total_loss=8.73, train_psnr=-8.93]    Epoch 7:  40%|████      | 4/10 [00:00<00:01,  4.47it/s, eval_psnr=-14.1, total_loss=8.73, train_psnr=-8.93]    Epoch 7:  40%|████      | 4/10 [00:01<00:01,  4.47it/s, eval_psnr=-14.1, total_loss=8.71, train_psnr=-9.01]    Epoch 7:  50%|█████     | 5/10 [00:01<00:01,  4.40it/s, eval_psnr=-14.1, total_loss=8.71, train_psnr=-9.01]    Epoch 7:  50%|█████     | 5/10 [00:01<00:01,  4.40it/s, eval_psnr=-14.1, total_loss=8.71, train_psnr=-9.01]    Epoch 7:  50%|█████     | 5/10 [00:01<00:01,  4.40it/s, eval_psnr=-14.1, total_loss=8.27, train_psnr=-8.82]    Epoch 7:  60%|██████    | 6/10 [00:01<00:00,  4.42it/s, eval_psnr=-14.1, total_loss=8.27, train_psnr=-8.82]    Epoch 7:  60%|██████    | 6/10 [00:01<00:00,  4.42it/s, eval_psnr=-14.1, total_loss=8.27, train_psnr=-8.82]    Epoch 7:  60%|██████    | 6/10 [00:01<00:00,  4.42it/s, eval_psnr=-14.1, total_loss=7.47, train_psnr=-8.17]    Epoch 7:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-14.1, total_loss=7.47, train_psnr=-8.17]    Epoch 7:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-14.1, total_loss=7.47, train_psnr=-8.17]    Epoch 7:  70%|███████   | 7/10 [00:01<00:00,  4.45it/s, eval_psnr=-14.1, total_loss=7.58, train_psnr=-8.3]     Epoch 7:  80%|████████  | 8/10 [00:01<00:00,  4.46it/s, eval_psnr=-14.1, total_loss=7.58, train_psnr=-8.3]    Epoch 7:  80%|████████  | 8/10 [00:01<00:00,  4.46it/s, eval_psnr=-14.1, total_loss=7.58, train_psnr=-8.3]    Epoch 7:  80%|████████  | 8/10 [00:02<00:00,  4.46it/s, eval_psnr=-14.1, total_loss=8.31, train_psnr=-8.66]    Epoch 7:  90%|█████████ | 9/10 [00:02<00:00,  4.47it/s, eval_psnr=-14.1, total_loss=8.31, train_psnr=-8.66]    Epoch 7:  90%|█████████ | 9/10 [00:02<00:00,  4.47it/s, eval_psnr=-14.1, total_loss=8.31, train_psnr=-8.66]    Epoch 7:  90%|█████████ | 9/10 [00:02<00:00,  4.47it/s, eval_psnr=-14.1, total_loss=7.81, train_psnr=-8.31]    Epoch 7: 100%|██████████| 10/10 [00:02<00:00,  4.43it/s, eval_psnr=-14.1, total_loss=7.81, train_psnr=-8.31]    Epoch 7: 100%|██████████| 10/10 [00:02<00:00,  4.44it/s, eval_psnr=-14.1, total_loss=7.81, train_psnr=-8.31]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 8:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 8:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-12, total_loss=7.28, train_psnr=-8.62]    Epoch 8:  10%|█         | 1/10 [00:00<00:02,  4.47it/s, eval_psnr=-12, total_loss=7.28, train_psnr=-8.62]    Epoch 8:  10%|█         | 1/10 [00:00<00:02,  4.47it/s, eval_psnr=-12, total_loss=7.28, train_psnr=-8.62]    Epoch 8:  10%|█         | 1/10 [00:00<00:02,  4.47it/s, eval_psnr=-12, total_loss=11, train_psnr=-10.2]      Epoch 8:  20%|██        | 2/10 [00:00<00:01,  4.48it/s, eval_psnr=-12, total_loss=11, train_psnr=-10.2]    Epoch 8:  20%|██        | 2/10 [00:00<00:01,  4.48it/s, eval_psnr=-12, total_loss=11, train_psnr=-10.2]    Epoch 8:  20%|██        | 2/10 [00:00<00:01,  4.48it/s, eval_psnr=-12, total_loss=8.65, train_psnr=-8.74]    Epoch 8:  30%|███       | 3/10 [00:00<00:01,  4.48it/s, eval_psnr=-12, total_loss=8.65, train_psnr=-8.74]    Epoch 8:  30%|███       | 3/10 [00:00<00:01,  4.48it/s, eval_psnr=-12, total_loss=8.65, train_psnr=-8.74]    Epoch 8:  30%|███       | 3/10 [00:00<00:01,  4.48it/s, eval_psnr=-12, total_loss=7.17, train_psnr=-7.63]    Epoch 8:  40%|████      | 4/10 [00:00<00:01,  4.39it/s, eval_psnr=-12, total_loss=7.17, train_psnr=-7.63]    Epoch 8:  40%|████      | 4/10 [00:00<00:01,  4.39it/s, eval_psnr=-12, total_loss=7.17, train_psnr=-7.63]    Epoch 8:  40%|████      | 4/10 [00:01<00:01,  4.39it/s, eval_psnr=-12, total_loss=7.39, train_psnr=-7.94]    Epoch 8:  50%|█████     | 5/10 [00:01<00:01,  4.39it/s, eval_psnr=-12, total_loss=7.39, train_psnr=-7.94]    Epoch 8:  50%|█████     | 5/10 [00:01<00:01,  4.39it/s, eval_psnr=-12, total_loss=7.39, train_psnr=-7.94]    Epoch 8:  50%|█████     | 5/10 [00:01<00:01,  4.39it/s, eval_psnr=-12, total_loss=6.73, train_psnr=-7.51]    Epoch 8:  60%|██████    | 6/10 [00:01<00:00,  4.41it/s, eval_psnr=-12, total_loss=6.73, train_psnr=-7.51]    Epoch 8:  60%|██████    | 6/10 [00:01<00:00,  4.41it/s, eval_psnr=-12, total_loss=6.73, train_psnr=-7.51]    Epoch 8:  60%|██████    | 6/10 [00:01<00:00,  4.41it/s, eval_psnr=-12, total_loss=6.91, train_psnr=-7.73]    Epoch 8:  70%|███████   | 7/10 [00:01<00:00,  4.43it/s, eval_psnr=-12, total_loss=6.91, train_psnr=-7.73]    Epoch 8:  70%|███████   | 7/10 [00:01<00:00,  4.43it/s, eval_psnr=-12, total_loss=6.91, train_psnr=-7.73]    Epoch 8:  70%|███████   | 7/10 [00:01<00:00,  4.43it/s, eval_psnr=-12, total_loss=6.38, train_psnr=-7.3]     Epoch 8:  80%|████████  | 8/10 [00:01<00:00,  4.45it/s, eval_psnr=-12, total_loss=6.38, train_psnr=-7.3]    Epoch 8:  80%|████████  | 8/10 [00:01<00:00,  4.45it/s, eval_psnr=-12, total_loss=6.38, train_psnr=-7.3]    Epoch 8:  80%|████████  | 8/10 [00:02<00:00,  4.45it/s, eval_psnr=-12, total_loss=6.2, train_psnr=-7.24]    Epoch 8:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-12, total_loss=6.2, train_psnr=-7.24]    Epoch 8:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-12, total_loss=6.2, train_psnr=-7.24]    Epoch 8:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-12, total_loss=6.04, train_psnr=-7.18]    Epoch 8: 100%|██████████| 10/10 [00:02<00:00,  4.42it/s, eval_psnr=-12, total_loss=6.04, train_psnr=-7.18]    Epoch 8: 100%|██████████| 10/10 [00:02<00:00,  4.43it/s, eval_psnr=-12, total_loss=6.04, train_psnr=-7.18]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 9:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 9:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-11.2, total_loss=4.86, train_psnr=-6.87]    Epoch 9:  10%|█         | 1/10 [00:00<00:02,  4.49it/s, eval_psnr=-11.2, total_loss=4.86, train_psnr=-6.87]    Epoch 9:  10%|█         | 1/10 [00:00<00:02,  4.49it/s, eval_psnr=-11.2, total_loss=4.86, train_psnr=-6.87]    Epoch 9:  10%|█         | 1/10 [00:00<00:02,  4.49it/s, eval_psnr=-11.2, total_loss=3.27, train_psnr=-4.55]    Epoch 9:  20%|██        | 2/10 [00:00<00:01,  4.50it/s, eval_psnr=-11.2, total_loss=3.27, train_psnr=-4.55]    Epoch 9:  20%|██        | 2/10 [00:00<00:01,  4.50it/s, eval_psnr=-11.2, total_loss=3.27, train_psnr=-4.55]    Epoch 9:  20%|██        | 2/10 [00:00<00:01,  4.50it/s, eval_psnr=-11.2, total_loss=6.78, train_psnr=-6.83]    Epoch 9:  30%|███       | 3/10 [00:00<00:01,  4.40it/s, eval_psnr=-11.2, total_loss=6.78, train_psnr=-6.83]    Epoch 9:  30%|███       | 3/10 [00:00<00:01,  4.40it/s, eval_psnr=-11.2, total_loss=6.78, train_psnr=-6.83]    Epoch 9:  30%|███       | 3/10 [00:00<00:01,  4.40it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.23]    Epoch 9:  40%|████      | 4/10 [00:00<00:01,  4.44it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.23]    Epoch 9:  40%|████      | 4/10 [00:00<00:01,  4.44it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.23]    Epoch 9:  40%|████      | 4/10 [00:01<00:01,  4.44it/s, eval_psnr=-11.2, total_loss=5.55, train_psnr=-6.32]    Epoch 9:  50%|█████     | 5/10 [00:01<00:01,  4.45it/s, eval_psnr=-11.2, total_loss=5.55, train_psnr=-6.32]    Epoch 9:  50%|█████     | 5/10 [00:01<00:01,  4.45it/s, eval_psnr=-11.2, total_loss=5.55, train_psnr=-6.32]    Epoch 9:  50%|█████     | 5/10 [00:01<00:01,  4.45it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.67]    Epoch 9:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.67]    Epoch 9:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.67]    Epoch 9:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-11.2, total_loss=6.12, train_psnr=-7.02]    Epoch 9:  70%|███████   | 7/10 [00:01<00:00,  4.48it/s, eval_psnr=-11.2, total_loss=6.12, train_psnr=-7.02]    Epoch 9:  70%|███████   | 7/10 [00:01<00:00,  4.48it/s, eval_psnr=-11.2, total_loss=6.12, train_psnr=-7.02]    Epoch 9:  70%|███████   | 7/10 [00:01<00:00,  4.48it/s, eval_psnr=-11.2, total_loss=6.29, train_psnr=-7.23]    Epoch 9:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=6.29, train_psnr=-7.23]    Epoch 9:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=6.29, train_psnr=-7.23]    Epoch 9:  80%|████████  | 8/10 [00:02<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=6.04, train_psnr=-7.11]    Epoch 9:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-11.2, total_loss=6.04, train_psnr=-7.11]    Epoch 9:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-11.2, total_loss=6.04, train_psnr=-7.11]    Epoch 9:  90%|█████████ | 9/10 [00:02<00:00,  4.41it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.93]    Epoch 9: 100%|██████████| 10/10 [00:02<00:00,  4.43it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.93]    Epoch 9: 100%|██████████| 10/10 [00:02<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=5.78, train_psnr=-6.93]
      0%|          | 0/10 [00:00<?, ?it/s]    Epoch 10:   0%|          | 0/10 [00:00<?, ?it/s]    Epoch 10:   0%|          | 0/10 [00:00<?, ?it/s, eval_psnr=-11.2, total_loss=6.96, train_psnr=-8.42]    Epoch 10:  10%|█         | 1/10 [00:00<00:02,  4.48it/s, eval_psnr=-11.2, total_loss=6.96, train_psnr=-8.42]    Epoch 10:  10%|█         | 1/10 [00:00<00:02,  4.48it/s, eval_psnr=-11.2, total_loss=6.96, train_psnr=-8.42]    Epoch 10:  10%|█         | 1/10 [00:00<00:02,  4.48it/s, eval_psnr=-11.2, total_loss=5.54, train_psnr=-7.29]    Epoch 10:  20%|██        | 2/10 [00:00<00:01,  4.41it/s, eval_psnr=-11.2, total_loss=5.54, train_psnr=-7.29]    Epoch 10:  20%|██        | 2/10 [00:00<00:01,  4.41it/s, eval_psnr=-11.2, total_loss=5.54, train_psnr=-7.29]    Epoch 10:  20%|██        | 2/10 [00:00<00:01,  4.41it/s, eval_psnr=-11.2, total_loss=5.24, train_psnr=-7.08]    Epoch 10:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-11.2, total_loss=5.24, train_psnr=-7.08]    Epoch 10:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-11.2, total_loss=5.24, train_psnr=-7.08]    Epoch 10:  30%|███       | 3/10 [00:00<00:01,  4.43it/s, eval_psnr=-11.2, total_loss=5.14, train_psnr=-7.02]    Epoch 10:  40%|████      | 4/10 [00:00<00:01,  4.45it/s, eval_psnr=-11.2, total_loss=5.14, train_psnr=-7.02]    Epoch 10:  40%|████      | 4/10 [00:00<00:01,  4.45it/s, eval_psnr=-11.2, total_loss=5.14, train_psnr=-7.02]    Epoch 10:  40%|████      | 4/10 [00:01<00:01,  4.45it/s, eval_psnr=-11.2, total_loss=4.79, train_psnr=-6.68]    Epoch 10:  50%|█████     | 5/10 [00:01<00:01,  4.46it/s, eval_psnr=-11.2, total_loss=4.79, train_psnr=-6.68]    Epoch 10:  50%|█████     | 5/10 [00:01<00:01,  4.46it/s, eval_psnr=-11.2, total_loss=4.79, train_psnr=-6.68]    Epoch 10:  50%|█████     | 5/10 [00:01<00:01,  4.46it/s, eval_psnr=-11.2, total_loss=5.23, train_psnr=-7.02]    Epoch 10:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-11.2, total_loss=5.23, train_psnr=-7.02]    Epoch 10:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-11.2, total_loss=5.23, train_psnr=-7.02]    Epoch 10:  60%|██████    | 6/10 [00:01<00:00,  4.47it/s, eval_psnr=-11.2, total_loss=5.65, train_psnr=-7.32]    Epoch 10:  70%|███████   | 7/10 [00:01<00:00,  4.42it/s, eval_psnr=-11.2, total_loss=5.65, train_psnr=-7.32]    Epoch 10:  70%|███████   | 7/10 [00:01<00:00,  4.42it/s, eval_psnr=-11.2, total_loss=5.65, train_psnr=-7.32]    Epoch 10:  70%|███████   | 7/10 [00:01<00:00,  4.42it/s, eval_psnr=-11.2, total_loss=5.13, train_psnr=-6.63]    Epoch 10:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=5.13, train_psnr=-6.63]    Epoch 10:  80%|████████  | 8/10 [00:01<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=5.13, train_psnr=-6.63]    Epoch 10:  80%|████████  | 8/10 [00:02<00:00,  4.44it/s, eval_psnr=-11.2, total_loss=4.87, train_psnr=-6.39]    Epoch 10:  90%|█████████ | 9/10 [00:02<00:00,  4.14it/s, eval_psnr=-11.2, total_loss=4.87, train_psnr=-6.39]    Epoch 10:  90%|█████████ | 9/10 [00:02<00:00,  4.14it/s, eval_psnr=-11.2, total_loss=4.87, train_psnr=-6.39]    Epoch 10:  90%|█████████ | 9/10 [00:02<00:00,  4.14it/s, eval_psnr=-11.2, total_loss=5.74, train_psnr=-6.88]    Epoch 10: 100%|██████████| 10/10 [00:02<00:00,  4.24it/s, eval_psnr=-11.2, total_loss=5.74, train_psnr=-6.88]    Epoch 10: 100%|██████████| 10/10 [00:02<00:00,  4.34it/s, eval_psnr=-11.2, total_loss=5.74, train_psnr=-6.88]

    BaseDEQ(
      (fixed_point): FixedPoint(
        (iterator): HQSIteration(
          (f_step): fStepHQS()
          (g_step): gStepHQS()
        )
      )
      (init_params_algo): ParameterDict(
          (beta): Object of type: list
          (g_param): Object of type: ParameterList
          (lambda): Object of type: list
          (stepsize): Object of type: ParameterList
        (g_param): ParameterList(  (0): Parameter containing: [torch.float32 of size ])
        (stepsize): ParameterList(  (0): Parameter containing: [torch.float32 of size ])
      )
      (params_algo): ParameterDict(
          (beta): Object of type: list
          (g_param): Object of type: ParameterList
          (lambda): Object of type: list
          (stepsize): Object of type: ParameterList
        (g_param): ParameterList(  (0): Parameter containing: [torch.float32 of size ])
        (stepsize): ParameterList(  (0): Parameter containing: [torch.float32 of size ])
      )
      (prior): ModuleList(
        (0): PnP(
          (denoiser): DnCNN(
            (in_conv): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv_list): ModuleList(
              (0-4): 5 x Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (out_conv): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nl_list): ModuleList(
              (0-5): 6 x ReLU()
            )
          )
        )
      )
      (data_fidelity): ModuleList(
        (0): L2()
      )
    )



.. GENERATED FROM PYTHON SOURCE LINES 213-217

Test the network
--------------------------------------------



.. GENERATED FROM PYTHON SOURCE LINES 217-234

.. code-block:: Python


    method = "DEQ_HQS"
    save_folder = RESULTS_DIR / method / operation
    wandb_vis = False  # plot curves and images in Weight&Bias.
    plot_images = True  # plot images. Images are saved in save_folder.

    test(
        model=model,
        test_dataloader=test_dataloader,
        physics=physics,
        device=device,
        plot_metrics=True,
        plot_images=plot_images,
        save_folder=save_folder,
        verbose=verbose,
        wandb_vis=wandb_vis,
    )



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/unfolded/images/sphx_glr_demo_DEQ_001.png
         :alt: Input, No learning, Recons., GT
         :srcset: /auto_examples/unfolded/images/sphx_glr_demo_DEQ_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/unfolded/images/sphx_glr_demo_DEQ_002.png
         :alt: PSNR, residual
         :srcset: /auto_examples/unfolded/images/sphx_glr_demo_DEQ_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Processing data of operator 1 out of 1
      0%|          | 0/1 [00:00<?, ?it/s]    100%|██████████| 1/1 [00:03<00:00,  3.24s/it]    100%|██████████| 1/1 [00:03<00:00,  3.24s/it]
    Test PSNR: No learning rec.: 21.12+-0.00 dB | Model: -11.24+-0.00 dB. 

    (-11.239547729492188, 0.0, 21.124963760375977, 0.0)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 27.056 seconds)


.. _sphx_glr_download_auto_examples_unfolded_demo_DEQ.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_DEQ.ipynb <demo_DEQ.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_DEQ.py <demo_DEQ.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
